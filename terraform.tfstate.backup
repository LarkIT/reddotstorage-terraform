{
    "version": 3,
    "terraform_version": "0.10.2",
    "serial": 197,
    "lineage": "76bcf47a-47ec-43da-b2a5-cc4fd1f51260",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_alb_target_group_attachment.prodapp_01-http": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.prod_lb",
                        "module.prod_railsapp_01"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a-20171107021859074000000002",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a-20171107021859074000000002",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                            "target_id": "i-07892ca4f72fac0ab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group_attachment.prodapp_01-https": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.prod_lb",
                        "module.prod_railsapp_01"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a-20171108153057610800000001",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a-20171108153057610800000001",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                            "target_id": "i-07892ca4f72fac0ab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group_attachment.prodapp_02-http": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.prod_lb",
                        "module.prod_railsapp_02"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a-20171107021859014100000001",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a-20171107021859014100000001",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                            "target_id": "i-0f2ca782b7d8f46bb"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group_attachment.prodapp_02-https": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.prod_lb",
                        "module.prod_railsapp_02"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a-20171108153057623300000002",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a-20171108153057623300000002",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                            "target_id": "i-0f2ca782b7d8f46bb"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group_attachment.stageapp-01-stageapp-https": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.stage_lb",
                        "module.stage_railsapp"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678-20171108205318738000000001",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678-20171108205318738000000001",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678",
                            "target_id": "i-0aef3f7dfcdd5e07b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group_attachment.stageapp-http": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "module.stage_lb",
                        "module.stage_railsapp"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757-20171102001025392400000002",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757-20171102001025392400000002",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757",
                            "target_id": "i-0aef3f7dfcdd5e07b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.terraform_remote_state.remote_tfstate": {
                    "type": "terraform_remote_state",
                    "depends_on": [],
                    "primary": {
                        "id": "2017-11-10 19:52:52.226817706 +0000 UTC",
                        "attributes": {
                            "backend": "s3",
                            "config.%": "4",
                            "config.bucket": "red-tfstate",
                            "config.key": "network/terraform.tfstate",
                            "config.profile": "red",
                            "config.region": "us-west-2",
                            "environment": "default",
                            "id": "2017-11-10 19:52:52.226817706 +0000 UTC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRP+bun+w7x7VV4Isp2DopBtg3RtKkDiIEpSUEVR5PXO3Vl4beOZbW7/PfIulwTS+1SJ/eD1WM88M2M/M69jYAwsb4aENXS9Z5dMZt25HbYvoIl9aE0ezqvVD6s3r35++9PF8updJYolf8FMLoYaFupkJmZCysegmdhzXzhKkRyPWMNs7LbDwC9g7TwG0+F51cTIxNkkRdvqwfMmm0BrzPJNsLF1YVPDaeP4EWBMm3HHeidpi96TzS7xTKxch08ynP9PNy7oxtBWiDl8hwGzs/BqH70cXiPDNhKXxOCzVST2A6xjhuWv15+L30C2oJGttj727bQqu96oFn6HoyNAu41QpYyE+QPe7plq4NxjBd8ecNZnZ/fYciL2hmUPhCzvU8rYynXM2JkgTxYqY6u8CUKQR0ywOCk1vE2tYSQwoQUXiI33cNmnhAzLDQYWQ9+BHKAfcXtrj9wyJ6q1HvpOpdHLm4aUjZ1+MGVGj4ZQJruQ6OWpCtFku1U5df8mnLykGUOL+Ryuokcx7/5oXQaZpit5oNZrYxnz+CPVivl0pzl6PH9W1vtrPOijC0zxjsXBINNWWMMfYZu22lK+NczZNT0jqcF0Hl6+hHfL1Y9iDrYnjt0jQC3mUL6F+lJ98/xELRZfff38TC3UmTqtoRuu+4R5eYcUO7w0RHcxtwJ3jKGo9Dbjnz0SUy0KSUq3pYgaGkMoxpBiDq9jWLtNn/Gf73m5vPn+/FlZax0Tf6SUxgVh+g3H6EESVIQMujQgHah9+ikbw1qPL6dHRecDAqw+lR3DB5djKJMBUo5tb8vAqAQNxNiVNsBgGo9/q0mISRVwfHwMFzH8n0uTbpCBI7yvMpaR8r4qlknJ77VOBV992rCauP+7SaWpbGnbcxvvAsgMXyzgakzChc3TCo+elCflTPwVAAD//7umc4jqBQAA"
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xVbW8TuRb+bqn/4dxJRaEXj5vL2+1AkEoLLFJLK9LuCgGKPOMzibce29hn2mQR/33lmaQUQnc/VGI+jF/0nMc+b4/3nSW0xE8XHgtoWkPay0Ci0XNUT6F0rVUyLEbZ0Zujly+Oz94e7L17n7G04r9jiNrZAob5zgbbYJxfB22wFfeBjt5FTR1WEslq1qClp1Brg1Y2OMpK5yhSkD6Ps+yb5WmQNtYY+EtbOaXttIAnpaZrgO7ahHMScx5naEysgva0wY50g2s3HPxHlNqKUsYZYwN4jRaDruDF6vS0OUaCmYuULgZ3j1wks4DaBdj7Y3yPfQCuQCBVojKuVf0/r+ppruAT3LkDWM0cZD5gxHCBkxVTARRazOD5DcZid/cKm3bYalGRgYjEr64UUPGpJiNLvjPMA6rcSMtYNIgehjvJhTOvJGEEaRVoG0kaAyet90iwN0VLbNE2wBfQdrjVaoWcEflYCLFom9x3VkaWMa9cI74teUCDMiL31ZCj4U9y62SoZnnwzY+EvRWX3dFsMIB3ziAbNOdKB+C+j8g3alHLijB0Q8wVG/QhDc7gaDP9r6J4o41IsJzmxG48pJ+yStJP2PqpqGKYSKKgy5Yw5gvZGHj2DN7vHR2yAVRtJNdcAxRsAOkb5v/L//9wJx8OHzx6uJsP8938SQHNYtx6DHuXGF2DJzLGSxcUwzmhTUU6Cfi5xUixYInE+0lyooA+16w7lA1g39laT9uA32f0ZO/0t9Fm+hfCefqJM6W2TLZTcs4Aj5BFJBCpA+MN3vdDXjlbiy53oivp0FVg7QI20l4rwey27GgvdHA2SQP44FRbJcXIWFxEwib1AVpZGlzWE2N9XcD29jYcOLtFqUunSEAOPmYBk6Z8zNJKem9W1R4TPrudWi3bb1nfv1Cy/iHLKb1sAK90wEtpDNM1fAA+h866Xu7yqlHw6SnQDC0D+G6b87+cxZFvS6Mr4NxjaKRNyeBcKsVT8nWFoyQPt7GN68YBjZOK1Tp5cCXGnej2oYa+8ljvLzROtQav9OUizuxSEhPBKTbeBRkWMB4fwj4GYs6jjdFAwM/A5492doFbvDzHBYQoi4c7u4+BW6cwAj/HhWtpqQjnWpCJwgd9IQmFcZU0SYjzZMrXcBUGitdQVSDgSi4iPHj8aAd4bMs/IRP7o7OxGJ+O9p1xQSonDkcHaC8wiOPRGE091lOLKl1cHJ+N3pzCAaY3OVWh2H872rx79Rbw+l7GOg1LurT18u3B5PjV5PWb08O9F5OTk60kbcE5En10cu9ZZWSM8GWrKPq9rSQ3SYSClWbSBgOj55Ct3oDNL0VRf1b2a3a/UyU71XYOy2/0HL6wfhpQ6YAVTZLhhFw3xoRIz979JSpGM0kx0rWuJOGKZOvfgrh1A8EkpWGN4KfZ6ii+3mdf2Y9BYmxVVr1McH6BoXQR10LHKgWijaHrNWOTznVd2CMENiUqharruKmmbchvJzO9hP06eRExTeOsJeUuLfAA/x3Cu+4S2k7XhfTOmnucb7C/AwAA///itlziUgoAAA=="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzkFRyLZBujYVIHEQJSmooijyeeduLby28cw2t/8eeZdLAmmeInUfvB7rm29m7G/mdQyMgeXVkLCGrvfsksmsO7fD5gWsYx8ak4fTavXT6s2rX9/+cra8eFeJYsnfMJOLoYaFOpqJmZDyPmgm9txnjlIkxyPWMBvbdhj4BWycx2A6PK3WMTJxNklRW915XmUTaINZvgk2Ni5sazheO74HGNNm3LHeSWrRe7LZJZ6JlevwQYbzz/TaBb021Aoxhx8wYHYWXu2jl8NLZGgjcUkMvlhFYj/AJmZY/n75pfgDZAMa2WrrY99Mq7KbrWrgTzg4ALRthCplJMwf8HrPVAPnHiv4/hFnfXJyiy0nYm9Y9kDI8jaljI1MvU/yaKEyNsqbIAR5xASLo1LA29QYRgITGnCB2HgP531KyLDcYmAx9B3IAfoRt7f2yJY5Ua310HcqjV7erEnZ2Ok7U2b0aAhlsguJXh6rEE22rcqp+z/h5CXNGFrM53ARPYp591fjMsg03ccdtd4Yy5jHH6lGzKcLzdHj6bOy3t7hoz66wBTvWDwaZNoKa/gjbNNWW8rXhjm7dc9IajCdh5cv4d1y9bOYg+2JY3cPUIs5lG+hvlbfPT9Si8U33z4/UQt1oo5r6IbLPmFe3iDFDs8N0U3MjcAdYygSvc74d4/EVItCktJ1KaKG8tJiDCnm8DqGjdv2Gf/7nufLqx9Pn5W11jHxR0pZuyBMv+UYPUiCipBBl+6jR2qffsrGsNHjy+lRznlU3yZm7Ey4J8DqqewYPrgcQxkLkHJselumRSVoIMau9AAGs/b4r5qEmFQBh4eHcBbD51w6dIsMHOF9lbHMk/dVsUxKfq91KvjqaZNq4v50Y0pT2VLbcxNvAsgMXy3gYkzChe3DCg8elCflTPwTAAD///Rm0x/nBQAA"
                },
                "railsapp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzkFRyLZBujYVIHEQJSmooijyeeduLby28cw2t/8eeZdLAmmeInUfvB7rm29m7G/mdQyMgeXVkLCGrvfsksmsO7fD5gWsYx8ak4fTavXT6s2rX9/+cra8eFeJYsnfMJOLoYaFOpqJmZDyPmgm9txnjlIkxyPWMBvbdhj4BWycx2A6PK3WMTJxNklRW915XmUTaINZvgk2Ni5sazheO74HGNNm3LHeSWrRe7LZJZ6JlevwQYbzz/TaBb021Aoxhx8wYHYWXu2jl8NLZGgjcUkMvlhFYj/AJmZY/n75pfgDZAMa2WrrY99Mq7KbrWrgTzg4ALRthCplJMwf8HrPVAPnHiv4/hFnfXJyiy0nYm9Y9kDI8jaljI0kNls0KcmjhcrYKG+CEOQREyyOShFvU2MYCUxowAVi4z2c9ykhw3KLgcXQdyAH6Efc3tojW+ZEtdZD36k0enmzJmVjp+9MmdGjIZTJLiR6eaxCNNm2Kqfu/4STlzRjaDGfw0X0KObdX43LINN0J3fUemMsYx5/pBoxny41R4+nz8p6e4+P+ugCU7xj8WiQaSus4Y+wTVttKV8b5uzWPSOpwXQeXr6Ed8vVz2IOtieO3T1ALeZQvoX6Wn33/EgtFt98+/xELdSJOq6hGy77hHl5gxQ7PDdENzE3AneMocj0OuPfPRJTLQpJSteliBqycZ5MSmIMK+bwOoaN2/YZ//um58urH0+flbXWMfFHylm7IEy/5Rg9SIKKkEGXLqRH6p9+ysaw0ePr6VHWeVThJmbsTLgnwuqp7Bg+uBxDGQ+Qcmx6W6ZGJWggxq70Agaz9vivooSYlAGHh4dwFsPnXDp1iwwc4X2VscyV91WxTEp+r3cq+OppE2vi/nTjSlPZUttzE28CyAxfLeBiTMKF7cMKDx6UJ+VM/BMAAP//+cW9bu8FAAA="
                },
                "vpn_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xWb28TORN/b6nfYZ4Ngud68pr0OEIDOam0gUPXkFVb7lQVVDneSbKq1/bZs6W5T3+yd9MGShGoJ/Ji1+vMn99vZjzjfWsIDfGTlcMh1I2myklPoq6usHwOM9uYUvrVKJu8mYxfTt+9Pdg7Os1Y/OJ/og+VNUPo54+32BbjfFNoi61tH1TB2VBRkpVEUi1rNPQc5pVGI2scZTNrKZCXLg/L7EbzxEsT5uj52ChbVmYxhMGsog2BBJvwisQVD0vUOihfOdpik6rGWwh7/xOzyoiZDEvGevDGEHojNbxcuwcOxfT4BIp3hwUcjIvD6elk/PYkCh8jwdIGioDh/xMbSK9gbj3s/XX8EzsDXoJAUkJp25TtM1fzRV7CB3j4EFAtLWTOY0B/iedrS0Mg32AGv92hLHZ3r2XjDlt/KNIQkPg1JI8lv3SGP+7nHstcSxNRF412cLwKhDUcobOB+Rr45bx1t2rq3MfdvBTbacWUJHjxAh6Np68erVFtirlGO36TrqRzNpMBP7CUyn00ND3mDzxqlAEv0QOHlzIgi0KN16MlkRsKEfEmYzeAk3GRPAmFhmwQG3ZE/IxGpFdLwRZuoZaoLkb9uLzA1SiW01CIBNldVMK7mi/cQhwVE/66eM3/GJ/yDt6AsV5nuYTGlZIwsLNu8TUm7zrZe5PpfP2XjM6ixx0eSM70Oh0p/ztQeFs2Kp5AOGoxfC+FtGxNix0xEFfPnp4/fSIYmrhVtpg/gx8th6+ZDiSpUl+kleR3EinnkLScBe5Unw946/maX/wXDuUsQLHfb2u8IutXgBoGwOE6wN9NeO1XoBYDUez3O9Jf5fwtKdugVOz3GbS/b9dMWmw8fRVPeFeRIE0JlQkktYYuKnsLNMRWTQ181VX5nce/LaOuCbBep7Q2uM5k1LhBnytbb8SJd+Wd8oSaD3JjY+Bz72qmuva4wSy2RdV4DXwK/ALuVy2fRPRHOGuT8Fmcur9kCjzr9eDIamT1RVl54K4DdVNY7ZL17hSYS0Xo0yvkJeu1U8RbjaMH8Xk9OO7UEVEspytKnf22dLsUKvhzSeSrWUMY8pWsdRwDp3uTQ9YD1QSy9YbAkPVSzfbznfzZk8d5v//Lr092836+mw+GUK+OG4d+7yMGW2MhQ/hofcnwitDEeXzu8e8GA4Vhqn3nziPIIVw6w5JH1oN9a+bVovH4aTEXeye/jx7E51BYR19gMqsMk82CrNXAA2QBCUQ8W+EO6u0rV9bMRUqcSCPap4k6tx5ruTlVs/taR3NZeWviFQjcdV/OWEhTOs71tr90xcTaFyRl4NwapKpG4NxY3gRUUi3RmrmsdIxW2i4l1tZU/yBjbcXA9vY2HFjziOKVZYEEZOF95jFO8vdZ/JLO6XWXCFE+u9+VrrX94+5zIsRlWDZU2o8GuIef4ziIICqzuM3w4S16nG+xfwMAAP//W081LRALAAA="
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "db"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:stage"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stagedb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "YourPwdShouldBeLongAndSecure!"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-WQYFW3KGF27NXPHHRZCI3DWTGQ"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                },
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:stage-20171005184635510000000002"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171005184635510000000002"
                },
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:stage-20171005184635350600000001"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171005184635350600000001"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "dns"
            ],
            "outputs": {
                "external_dns_enable": {
                    "sensitive": false,
                    "type": "string",
                    "value": "1"
                },
                "internal_domain_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "red.lan"
                },
                "route53_external_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z3J6VC88LUCV3F"
                },
                "route53_internal_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z3GTC2DDZGDB36"
                }
            },
            "resources": {
                "aws_route53_zone.external": {
                    "type": "aws_route53_zone",
                    "depends_on": [],
                    "primary": {
                        "id": "Z3J6VC88LUCV3F",
                        "attributes": {
                            "comment": "External Domain",
                            "force_destroy": "false",
                            "id": "Z3J6VC88LUCV3F",
                            "name": "aws.reddotstorage.com",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-1175.awsdns-18.org",
                            "name_servers.1": "ns-1805.awsdns-33.co.uk",
                            "name_servers.2": "ns-298.awsdns-37.com",
                            "name_servers.3": "ns-917.awsdns-50.net",
                            "tags.%": "0",
                            "zone_id": "Z3J6VC88LUCV3F"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_zone.internal": {
                    "type": "aws_route53_zone",
                    "depends_on": [],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36",
                        "attributes": {
                            "comment": "Internal Domain",
                            "force_destroy": "false",
                            "id": "Z3GTC2DDZGDB36",
                            "name": "red.lan",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-0.awsdns-00.com.",
                            "name_servers.1": "ns-1024.awsdns-00.org.",
                            "name_servers.2": "ns-1536.awsdns-00.co.uk.",
                            "name_servers.3": "ns-512.awsdns-00.net.",
                            "tags.%": "0",
                            "vpc_id": "vpc-21c2ba47",
                            "vpc_region": "us-west-2",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc_dhcp_options.internal": {
                    "type": "aws_vpc_dhcp_options",
                    "depends_on": [],
                    "primary": {
                        "id": "dopt-35b53353",
                        "attributes": {
                            "domain_name": "red.lan",
                            "domain_name_servers.#": "1",
                            "domain_name_servers.0": "172.20.0.2",
                            "id": "dopt-35b53353",
                            "tags.%": "1",
                            "tags.Name": "internal"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc_dhcp_options_association.internal": {
                    "type": "aws_vpc_dhcp_options_association",
                    "depends_on": [
                        "aws_vpc_dhcp_options.internal"
                    ],
                    "primary": {
                        "id": "dopt-35b53353-vpc-21c2ba47",
                        "attributes": {
                            "dhcp_options_id": "dopt-35b53353",
                            "id": "dopt-35b53353-vpc-21c2ba47",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "foreman"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-09c1c991d7e76b2fb"
                }
            },
            "resources": {
                "aws_eip.hostname": {
                    "type": "aws_eip",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "eipalloc-14e38729",
                        "attributes": {
                            "association_id": "eipassoc-0cab2133",
                            "domain": "vpc",
                            "id": "eipalloc-14e38729",
                            "instance": "i-09c1c991d7e76b2fb",
                            "network_interface": "eni-652e8855",
                            "private_ip": "172.20.40.217",
                            "public_ip": "35.164.79.16",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "i-09c1c991d7e76b2fb",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-09c1c991d7e76b2fb",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-652e8855",
                            "primary_network_interface_id": "eni-652e8855",
                            "private_dns": "ip-172-20-40-217.us-west-2.compute.internal",
                            "private_ip": "172.20.40.217",
                            "public_dns": "ec2-35-164-79-16.us-west-2.compute.amazonaws.com",
                            "public_ip": "35.164.79.16",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "red-foreman-01",
                            "tenancy": "default",
                            "user_data": "6d8ed9d5cd876407ccd17fc628c87bfd82cc1577",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2647677636": "sg-182e9a65",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-foreman-01_A",
                        "attributes": {
                            "fqdn": "red-foreman-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-foreman-01_A",
                            "name": "red-foreman-01",
                            "records.#": "1",
                            "records.2836931462": "172.20.40.217",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "gitlab"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-062d6fd4ed96bff11"
                }
            },
            "resources": {
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-062d6fd4ed96bff11",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-062d6fd4ed96bff11",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0656f136",
                            "primary_network_interface_id": "eni-0656f136",
                            "private_dns": "ip-172-20-40-170.us-west-2.compute.internal",
                            "private_ip": "172.20.40.170",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "red-gitlab-01",
                            "tenancy": "default",
                            "user_data": "a5090b91d8931a93963a7d0a98a1734911724141",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-gitlab-01_A",
                        "attributes": {
                            "fqdn": "red-gitlab-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-gitlab-01_A",
                            "name": "red-gitlab-01",
                            "records.#": "1",
                            "records.1667280890": "172.20.40.170",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "gitlab_s3_backups"
            ],
            "outputs": {
                "bucket_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:s3:::red-gitlab-s3-backups"
                }
            },
            "resources": {
                "aws_s3_bucket.bucket": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "red-gitlab-s3-backups",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::red-gitlab-s3-backups",
                            "bucket": "red-gitlab-s3-backups",
                            "bucket_domain_name": "red-gitlab-s3-backups.s3.amazonaws.com",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3BJ6K6RIION7M",
                            "id": "red-gitlab-s3-backups",
                            "logging.#": "0",
                            "region": "us-west-2",
                            "request_payer": "BucketOwner",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "true",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "iam_role"
            ],
            "outputs": {},
            "resources": {
                "aws_iam_instance_profile.basicServer": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.basicServer"
                    ],
                    "primary": {
                        "id": "basicServer",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:instance-profile/basicServer",
                            "id": "basicServer",
                            "name": "basicServer",
                            "path": "/",
                            "role": "basicServer",
                            "roles.#": "1",
                            "roles.231576256": "basicServer",
                            "unique_id": "AIPAJRRKLFL7D34PZOMZQ"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.foreman": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.foreman"
                    ],
                    "primary": {
                        "id": "foreman",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:instance-profile/foreman",
                            "id": "foreman",
                            "name": "foreman",
                            "path": "/",
                            "role": "foreman",
                            "roles.#": "1",
                            "roles.2510414202": "foreman",
                            "unique_id": "AIPAJSQG4DREA6DF3ELMG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_instance_profile.gitlab": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.gitlab"
                    ],
                    "primary": {
                        "id": "gitlab",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:instance-profile/gitlab",
                            "id": "gitlab",
                            "name": "gitlab",
                            "path": "/",
                            "role": "gitlab",
                            "roles.#": "1",
                            "roles.1255920736": "gitlab",
                            "unique_id": "AIPAIFA2SXRCXUVV2KDNI"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.basicServer": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "basicServer",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:role/basicServer",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-10-05T15:12:00Z",
                            "force_detach_policies": "false",
                            "id": "basicServer",
                            "name": "basicServer",
                            "path": "/",
                            "unique_id": "AROAJIMGYR57EH2PDSNOC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.foreman": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "foreman",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:role/foreman",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-10-05T15:12:00Z",
                            "force_detach_policies": "false",
                            "id": "foreman",
                            "name": "foreman",
                            "path": "/",
                            "unique_id": "AROAJBVEILOIZU4LL2BHO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.gitlab": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "gitlab",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:role/gitlab",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-10-24T16:04:52Z",
                            "force_detach_policies": "false",
                            "id": "gitlab",
                            "name": "gitlab",
                            "path": "/",
                            "unique_id": "AROAJXXAFBMNJVLN4N4RK"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy_attachment.cloudwatch": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.basicServer"
                    ],
                    "primary": {
                        "id": "basicServer-20171005151201506100000002",
                        "attributes": {
                            "id": "basicServer-20171005151201506100000002",
                            "policy_arn": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                            "role": "basicServer"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy_attachment.ec2_admin": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.foreman"
                    ],
                    "primary": {
                        "id": "foreman-20171005151201508600000003",
                        "attributes": {
                            "id": "foreman-20171005151201508600000003",
                            "policy_arn": "arn:aws:iam::251764077246:policy/ec2_admin",
                            "role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy_attachment.foreman-cloudwatch": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.foreman"
                    ],
                    "primary": {
                        "id": "foreman-20171005151201506000000001",
                        "attributes": {
                            "id": "foreman-20171005151201506000000001",
                            "policy_arn": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                            "role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy_attachment.gitlab": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.gitlab"
                    ],
                    "primary": {
                        "id": "gitlab-20171024160453155400000001",
                        "attributes": {
                            "id": "gitlab-20171024160453155400000001",
                            "policy_arn": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                            "role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role_policy_attachment.gitlab-s3": {
                    "type": "aws_iam_role_policy_attachment",
                    "depends_on": [
                        "aws_iam_role.gitlab"
                    ],
                    "primary": {
                        "id": "gitlab-20171024160457905000000002",
                        "attributes": {
                            "id": "gitlab-20171024160457905000000002",
                            "policy_arn": "arn:aws:iam::251764077246:policy/gitlab",
                            "role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "jump"
            ],
            "outputs": {
                "hostname": {
                    "sensitive": false,
                    "type": "string",
                    "value": "red-jump-01 (172.20.40.247)\t[52.39.195.243]"
                },
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-0e20021b5aa3a2f12"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "policy"
            ],
            "outputs": {
                "cloudwatch_policy_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:iam::251764077246:policy/cloudwatch_policy"
                },
                "ec2_admin_policy_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:iam::251764077246:policy/ec2_admin"
                },
                "gitlab_policy_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:iam::251764077246:policy/gitlab"
                }
            },
            "resources": {
                "aws_iam_policy.cloudwatch_policy": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                            "id": "arn:aws:iam::251764077246:policy/cloudwatch_policy",
                            "name": "cloudwatch_policy",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogStreams\"\n    ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n    ]\n  }\n ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy.ec2_admin_policy": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::251764077246:policy/ec2_admin",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:policy/ec2_admin",
                            "id": "arn:aws:iam::251764077246:policy/ec2_admin",
                            "name": "ec2_admin",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy.gitlab_policy": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::251764077246:policy/gitlab",
                        "attributes": {
                            "arn": "arn:aws:iam::251764077246:policy/gitlab",
                            "id": "arn:aws:iam::251764077246:policy/gitlab",
                            "name": "gitlab",
                            "path": "/",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:*\",\n            \"Resource\": \"arn:aws:s3:::red-gitlab-s3-backups\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:*\",\n            \"Resource\": \"arn:aws:s3:::red-gitlab-s3-backups/*\"\n        }\n    ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_db"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:prod"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "proddb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "s3TNecEhE6B5paQAZEEDQZw2VWsDaqh5GmghCt22"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-WQRUFLK3KQXPOJB3RLDVCWHRUU"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                },
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:prod-20171031144555229200000002"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod-20171031144555229200000002"
                },
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:prod-20171031144555217100000001"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod-20171031144555217100000001"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_lb"
            ],
            "outputs": {
                "app-http_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a"
                },
                "app-https_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a"
                }
            },
            "resources": {
                "aws_alb.appserver": {
                    "type": "aws_alb",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-productionapp-lb/63084f25ff9f514f",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-productionapp-lb/63084f25ff9f514f",
                            "arn_suffix": "app/red-productionapp-lb/63084f25ff9f514f",
                            "dns_name": "red-productionapp-lb-738362521.us-west-2.elb.amazonaws.com",
                            "enable_deletion_protection": "false",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-productionapp-lb/63084f25ff9f514f",
                            "idle_timeout": "600",
                            "internal": "false",
                            "ip_address_type": "ipv4",
                            "name": "red-productionapp-lb",
                            "security_groups.#": "2",
                            "security_groups.2876653532": "sg-f231198f",
                            "security_groups.2973286420": "sg-632e9a1e",
                            "subnets.#": "2",
                            "subnets.2200485057": "subnet-1ef87178",
                            "subnets.2652384640": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Environment": "production",
                            "vpc_id": "vpc-21c2ba47",
                            "zone_id": "Z1H1FL5HABSF5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_listener.app-http": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.appserver",
                        "aws_alb_target_group.app-http"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/c3fe1ef53abe83a9",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/c3fe1ef53abe83a9",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/c3fe1ef53abe83a9",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-productionapp-lb/63084f25ff9f514f",
                            "port": "80",
                            "protocol": "HTTP",
                            "ssl_policy": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_listener.app-https": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.appserver",
                        "aws_alb_target_group.app-https",
                        "data.aws_acm_certificate.app_cert"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/606bc1abebf337ca",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/606bc1abebf337ca",
                            "certificate_arn": "arn:aws:acm:us-west-2:251764077246:certificate/b79ac2c2-a3a6-4881-8482-a667d0255259",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-productionapp-lb/63084f25ff9f514f/606bc1abebf337ca",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-productionapp-lb/63084f25ff9f514f",
                            "port": "443",
                            "protocol": "HTTPS",
                            "ssl_policy": "ELBSecurityPolicy-TLS-1-2-2017-01"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group.app-http": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                            "arn_suffix": "targetgroup/red-production-app-http/822c9075134f574a",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "5",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-http/822c9075134f574a",
                            "name": "red-production-app-http",
                            "port": "80",
                            "protocol": "HTTP",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group.app-https": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                            "arn_suffix": "targetgroup/red-production-app-https/240575a79937794a",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "5",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTPS",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-production-app-https/240575a79937794a",
                            "name": "red-production-app-https",
                            "port": "443",
                            "protocol": "HTTPS",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.app-lb-ext": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_alb.appserver"
                    ],
                    "primary": {
                        "id": "Z3J6VC88LUCV3F_production.aws.reddotstorage.com_A",
                        "attributes": {
                            "alias.#": "1",
                            "alias.359493117.evaluate_target_health": "false",
                            "alias.359493117.name": "red-productionapp-lb-738362521.us-west-2.elb.amazonaws.com",
                            "alias.359493117.zone_id": "Z1H1FL5HABSF5",
                            "fqdn": "production.aws.reddotstorage.com",
                            "health_check_id": "",
                            "id": "Z3J6VC88LUCV3F_production.aws.reddotstorage.com_A",
                            "name": "production.aws.reddotstorage.com",
                            "records.#": "0",
                            "set_identifier": "",
                            "ttl": "0",
                            "type": "A",
                            "zone_id": "Z3J6VC88LUCV3F"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_acm_certificate.app_cert": {
                    "type": "aws_acm_certificate",
                    "depends_on": [],
                    "primary": {
                        "id": "2017-11-10 19:52:54.299195767 +0000 UTC",
                        "attributes": {
                            "arn": "arn:aws:acm:us-west-2:251764077246:certificate/b79ac2c2-a3a6-4881-8482-a667d0255259",
                            "domain": "production.aws.reddotstorage.com",
                            "id": "2017-11-10 19:52:54.299195767 +0000 UTC",
                            "statuses.#": "1",
                            "statuses.0": "ISSUED"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-03e4cebd49a1479f4"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp_01"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-07892ca4f72fac0ab"
                }
            },
            "resources": {
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-07892ca4f72fac0ab",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-07892ca4f72fac0ab",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-767ba245",
                            "primary_network_interface_id": "eni-767ba245",
                            "private_dns": "ip-172-20-20-19.us-west-2.compute.internal",
                            "private_ip": "172.20.20.19",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-3ed67876",
                            "tags.%": "1",
                            "tags.Name": "red-prodapp-01",
                            "tenancy": "default",
                            "user_data": "df3f4a642fb26c54952ebb21246b87d31b9f636e",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.1833714445": "sg-047ff379",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-prodapp-01_A",
                        "attributes": {
                            "fqdn": "red-prodapp-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-prodapp-01_A",
                            "name": "red-prodapp-01",
                            "records.#": "1",
                            "records.22121388": "172.20.20.19",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp_02"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-0f2ca782b7d8f46bb"
                }
            },
            "resources": {
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-0f2ca782b7d8f46bb",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-0f2ca782b7d8f46bb",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-ef78a1dc",
                            "primary_network_interface_id": "eni-ef78a1dc",
                            "private_dns": "ip-172-20-20-71.us-west-2.compute.internal",
                            "private_ip": "172.20.20.71",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-3ed67876",
                            "tags.%": "1",
                            "tags.Name": "red-prodapp-02",
                            "tenancy": "default",
                            "user_data": "0b26a9a629d8ca8234ce2b190faf205b2736a1c9",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.1833714445": "sg-047ff379",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-prodapp-02_A",
                        "attributes": {
                            "fqdn": "red-prodapp-02.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-prodapp-02_A",
                            "name": "red-prodapp-02",
                            "records.#": "1",
                            "records.1506845720": "172.20.20.71",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "pulp"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-02fa2ff621aed50aa"
                }
            },
            "resources": {
                "aws_ebs_volume.volume": {
                    "type": "aws_ebs_volume",
                    "depends_on": [],
                    "primary": {
                        "id": "vol-01fd83d7a7f24ecc3",
                        "attributes": {
                            "availability_zone": "us-west-2a",
                            "encrypted": "false",
                            "id": "vol-01fd83d7a7f24ecc3",
                            "size": "100",
                            "snapshot_id": "",
                            "tags.%": "1",
                            "tags.Name": "pulp Volume for red-pulp-01",
                            "type": "standard"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-02fa2ff621aed50aa",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "1",
                            "ebs_block_device.2285623703.delete_on_termination": "false",
                            "ebs_block_device.2285623703.device_name": "/dev/sdx",
                            "ebs_block_device.2285623703.encrypted": "false",
                            "ebs_block_device.2285623703.iops": "0",
                            "ebs_block_device.2285623703.snapshot_id": "",
                            "ebs_block_device.2285623703.volume_size": "100",
                            "ebs_block_device.2285623703.volume_type": "standard",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-02fa2ff621aed50aa",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-4e33d17d",
                            "primary_network_interface_id": "eni-4e33d17d",
                            "private_dns": "ip-172-20-50-185.us-west-2.compute.internal",
                            "private_ip": "172.20.50.185",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-65d27c2d",
                            "tags.%": "1",
                            "tags.Name": "red-pulp-01",
                            "tenancy": "default",
                            "user_data": "3065417c5239fb2a7902ac60e46d6374b2f039bb",
                            "volume_tags.%": "1",
                            "volume_tags.Name": "pulp Volume for red-pulp-01",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-pulp-01_A",
                        "attributes": {
                            "fqdn": "red-pulp-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-pulp-01_A",
                            "name": "red-pulp-01",
                            "records.#": "1",
                            "records.1607373855": "172.20.50.185",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_volume_attachment.ebs_att": {
                    "type": "aws_volume_attachment",
                    "depends_on": [
                        "aws_ebs_volume.volume",
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "vai-2864714826",
                        "attributes": {
                            "device_name": "/dev/sdx",
                            "id": "vai-2864714826",
                            "instance_id": "i-02fa2ff621aed50aa",
                            "volume_id": "vol-01fd83d7a7f24ecc3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "security_groups"
            ],
            "outputs": {
                "foreman_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-182e9a65"
                },
                "general_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-632e9a1e"
                },
                "gitlab_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-f2e0568f"
                },
                "group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-632e9a1e"
                },
                "prod-app-lb_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-f231198f"
                },
                "prodapp_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-047ff379"
                },
                "proddb_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-c679f5bb"
                },
                "ssh_jump_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-852c98f8"
                },
                "stage-app-lb_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-820d25ff"
                },
                "stageapp_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-fa93d787"
                },
                "stagedb_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-ecf3b291"
                },
                "vpn_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "sg-cefdaeb3"
                }
            },
            "resources": {
                "aws_security_group.foreman": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-182e9a65",
                        "attributes": {
                            "description": "Allow puppet and foreman connections.",
                            "egress.#": "3",
                            "egress.2214680975.cidr_blocks.#": "1",
                            "egress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2214680975.from_port": "80",
                            "egress.2214680975.ipv6_cidr_blocks.#": "0",
                            "egress.2214680975.prefix_list_ids.#": "0",
                            "egress.2214680975.protocol": "tcp",
                            "egress.2214680975.security_groups.#": "0",
                            "egress.2214680975.self": "false",
                            "egress.2214680975.to_port": "80",
                            "egress.2617001939.cidr_blocks.#": "1",
                            "egress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2617001939.from_port": "443",
                            "egress.2617001939.ipv6_cidr_blocks.#": "0",
                            "egress.2617001939.prefix_list_ids.#": "0",
                            "egress.2617001939.protocol": "tcp",
                            "egress.2617001939.security_groups.#": "0",
                            "egress.2617001939.self": "false",
                            "egress.2617001939.to_port": "443",
                            "egress.4004907278.cidr_blocks.#": "2",
                            "egress.4004907278.cidr_blocks.0": "192.30.252.0/22",
                            "egress.4004907278.cidr_blocks.1": "185.199.108.0/22",
                            "egress.4004907278.from_port": "22",
                            "egress.4004907278.ipv6_cidr_blocks.#": "0",
                            "egress.4004907278.prefix_list_ids.#": "0",
                            "egress.4004907278.protocol": "tcp",
                            "egress.4004907278.security_groups.#": "1",
                            "egress.4004907278.security_groups.3372166636": "sg-f2e0568f",
                            "egress.4004907278.self": "false",
                            "egress.4004907278.to_port": "22",
                            "id": "sg-182e9a65",
                            "ingress.#": "3",
                            "ingress.143743864.cidr_blocks.#": "0",
                            "ingress.143743864.from_port": "8088",
                            "ingress.143743864.ipv6_cidr_blocks.#": "0",
                            "ingress.143743864.protocol": "tcp",
                            "ingress.143743864.security_groups.#": "1",
                            "ingress.143743864.security_groups.3372166636": "sg-f2e0568f",
                            "ingress.143743864.self": "false",
                            "ingress.143743864.to_port": "8088",
                            "ingress.2182738624.cidr_blocks.#": "0",
                            "ingress.2182738624.from_port": "443",
                            "ingress.2182738624.ipv6_cidr_blocks.#": "0",
                            "ingress.2182738624.protocol": "tcp",
                            "ingress.2182738624.security_groups.#": "1",
                            "ingress.2182738624.security_groups.3413107033": "sg-852c98f8",
                            "ingress.2182738624.self": "false",
                            "ingress.2182738624.to_port": "443",
                            "ingress.638204318.cidr_blocks.#": "1",
                            "ingress.638204318.cidr_blocks.0": "172.20.0.0/16",
                            "ingress.638204318.from_port": "8140",
                            "ingress.638204318.ipv6_cidr_blocks.#": "0",
                            "ingress.638204318.protocol": "tcp",
                            "ingress.638204318.security_groups.#": "0",
                            "ingress.638204318.self": "false",
                            "ingress.638204318.to_port": "8140",
                            "name": "foreman",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "foreman",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.general": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-632e9a1e",
                        "attributes": {
                            "description": "Generic allows for ALL systems",
                            "egress.#": "5",
                            "egress.1893906438.cidr_blocks.#": "0",
                            "egress.1893906438.from_port": "443",
                            "egress.1893906438.ipv6_cidr_blocks.#": "0",
                            "egress.1893906438.prefix_list_ids.#": "0",
                            "egress.1893906438.protocol": "tcp",
                            "egress.1893906438.security_groups.#": "1",
                            "egress.1893906438.security_groups.1378183434": "sg-5fe05622",
                            "egress.1893906438.self": "false",
                            "egress.1893906438.to_port": "443",
                            "egress.2632157376.cidr_blocks.#": "0",
                            "egress.2632157376.from_port": "80",
                            "egress.2632157376.ipv6_cidr_blocks.#": "0",
                            "egress.2632157376.prefix_list_ids.#": "0",
                            "egress.2632157376.protocol": "tcp",
                            "egress.2632157376.security_groups.#": "1",
                            "egress.2632157376.security_groups.1378183434": "sg-5fe05622",
                            "egress.2632157376.self": "false",
                            "egress.2632157376.to_port": "80",
                            "egress.2912905928.cidr_blocks.#": "4",
                            "egress.2912905928.cidr_blocks.0": "162.213.2.253/32",
                            "egress.2912905928.cidr_blocks.1": "184.105.182.7/32",
                            "egress.2912905928.cidr_blocks.2": "23.239.24.67/32",
                            "egress.2912905928.cidr_blocks.3": "129.6.15.28/32",
                            "egress.2912905928.from_port": "123",
                            "egress.2912905928.ipv6_cidr_blocks.#": "0",
                            "egress.2912905928.prefix_list_ids.#": "0",
                            "egress.2912905928.protocol": "udp",
                            "egress.2912905928.security_groups.#": "0",
                            "egress.2912905928.self": "false",
                            "egress.2912905928.to_port": "123",
                            "egress.3055100098.cidr_blocks.#": "0",
                            "egress.3055100098.from_port": "8140",
                            "egress.3055100098.ipv6_cidr_blocks.#": "0",
                            "egress.3055100098.prefix_list_ids.#": "0",
                            "egress.3055100098.protocol": "tcp",
                            "egress.3055100098.security_groups.#": "1",
                            "egress.3055100098.security_groups.2647677636": "sg-182e9a65",
                            "egress.3055100098.self": "false",
                            "egress.3055100098.to_port": "8140",
                            "egress.530348071.cidr_blocks.#": "0",
                            "egress.530348071.from_port": "3128",
                            "egress.530348071.ipv6_cidr_blocks.#": "0",
                            "egress.530348071.prefix_list_ids.#": "0",
                            "egress.530348071.protocol": "tcp",
                            "egress.530348071.security_groups.#": "1",
                            "egress.530348071.security_groups.1258650256": "sg-6eee5813",
                            "egress.530348071.self": "false",
                            "egress.530348071.to_port": "3128",
                            "id": "sg-632e9a1e",
                            "ingress.#": "6",
                            "ingress.1658154144.cidr_blocks.#": "0",
                            "ingress.1658154144.from_port": "22",
                            "ingress.1658154144.ipv6_cidr_blocks.#": "0",
                            "ingress.1658154144.protocol": "tcp",
                            "ingress.1658154144.security_groups.#": "1",
                            "ingress.1658154144.security_groups.1554708397": "sg-cefdaeb3",
                            "ingress.1658154144.self": "false",
                            "ingress.1658154144.to_port": "22",
                            "ingress.2912905928.cidr_blocks.#": "4",
                            "ingress.2912905928.cidr_blocks.0": "162.213.2.253/32",
                            "ingress.2912905928.cidr_blocks.1": "184.105.182.7/32",
                            "ingress.2912905928.cidr_blocks.2": "23.239.24.67/32",
                            "ingress.2912905928.cidr_blocks.3": "129.6.15.28/32",
                            "ingress.2912905928.from_port": "123",
                            "ingress.2912905928.ipv6_cidr_blocks.#": "0",
                            "ingress.2912905928.protocol": "udp",
                            "ingress.2912905928.security_groups.#": "0",
                            "ingress.2912905928.self": "false",
                            "ingress.2912905928.to_port": "123",
                            "ingress.3224597687.cidr_blocks.#": "1",
                            "ingress.3224597687.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3224597687.from_port": "80",
                            "ingress.3224597687.ipv6_cidr_blocks.#": "1",
                            "ingress.3224597687.ipv6_cidr_blocks.0": "::/0",
                            "ingress.3224597687.protocol": "tcp",
                            "ingress.3224597687.security_groups.#": "0",
                            "ingress.3224597687.self": "false",
                            "ingress.3224597687.to_port": "80",
                            "ingress.3633487795.cidr_blocks.#": "0",
                            "ingress.3633487795.from_port": "22",
                            "ingress.3633487795.ipv6_cidr_blocks.#": "0",
                            "ingress.3633487795.protocol": "tcp",
                            "ingress.3633487795.security_groups.#": "1",
                            "ingress.3633487795.security_groups.3413107033": "sg-852c98f8",
                            "ingress.3633487795.self": "false",
                            "ingress.3633487795.to_port": "22",
                            "ingress.4249917644.cidr_blocks.#": "1",
                            "ingress.4249917644.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4249917644.from_port": "443",
                            "ingress.4249917644.ipv6_cidr_blocks.#": "1",
                            "ingress.4249917644.ipv6_cidr_blocks.0": "::/0",
                            "ingress.4249917644.protocol": "tcp",
                            "ingress.4249917644.security_groups.#": "0",
                            "ingress.4249917644.self": "false",
                            "ingress.4249917644.to_port": "443",
                            "ingress.662514794.cidr_blocks.#": "1",
                            "ingress.662514794.cidr_blocks.0": "172.20.0.0/16",
                            "ingress.662514794.from_port": "-1",
                            "ingress.662514794.ipv6_cidr_blocks.#": "0",
                            "ingress.662514794.protocol": "icmp",
                            "ingress.662514794.security_groups.#": "0",
                            "ingress.662514794.self": "false",
                            "ingress.662514794.to_port": "-1",
                            "name": "GENERAL",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "GENERAL",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.gitlab": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-f2e0568f",
                        "attributes": {
                            "description": "Allow  GitLab connections.",
                            "egress.#": "4",
                            "egress.1030872309.cidr_blocks.#": "0",
                            "egress.1030872309.from_port": "8088",
                            "egress.1030872309.ipv6_cidr_blocks.#": "0",
                            "egress.1030872309.prefix_list_ids.#": "0",
                            "egress.1030872309.protocol": "tcp",
                            "egress.1030872309.security_groups.#": "1",
                            "egress.1030872309.security_groups.2647677636": "sg-182e9a65",
                            "egress.1030872309.self": "false",
                            "egress.1030872309.to_port": "8088",
                            "egress.1421879845.cidr_blocks.#": "1",
                            "egress.1421879845.cidr_blocks.0": "172.20.0.0/16",
                            "egress.1421879845.from_port": "0",
                            "egress.1421879845.ipv6_cidr_blocks.#": "0",
                            "egress.1421879845.prefix_list_ids.#": "0",
                            "egress.1421879845.protocol": "-1",
                            "egress.1421879845.security_groups.#": "0",
                            "egress.1421879845.self": "false",
                            "egress.1421879845.to_port": "0",
                            "egress.2214680975.cidr_blocks.#": "1",
                            "egress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2214680975.from_port": "80",
                            "egress.2214680975.ipv6_cidr_blocks.#": "0",
                            "egress.2214680975.prefix_list_ids.#": "0",
                            "egress.2214680975.protocol": "tcp",
                            "egress.2214680975.security_groups.#": "0",
                            "egress.2214680975.self": "false",
                            "egress.2214680975.to_port": "80",
                            "egress.2617001939.cidr_blocks.#": "1",
                            "egress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2617001939.from_port": "443",
                            "egress.2617001939.ipv6_cidr_blocks.#": "0",
                            "egress.2617001939.prefix_list_ids.#": "0",
                            "egress.2617001939.protocol": "tcp",
                            "egress.2617001939.security_groups.#": "0",
                            "egress.2617001939.self": "false",
                            "egress.2617001939.to_port": "443",
                            "id": "sg-f2e0568f",
                            "ingress.#": "3",
                            "ingress.1450889201.cidr_blocks.#": "0",
                            "ingress.1450889201.from_port": "22",
                            "ingress.1450889201.ipv6_cidr_blocks.#": "0",
                            "ingress.1450889201.protocol": "tcp",
                            "ingress.1450889201.security_groups.#": "1",
                            "ingress.1450889201.security_groups.2647677636": "sg-182e9a65",
                            "ingress.1450889201.self": "false",
                            "ingress.1450889201.to_port": "22",
                            "ingress.331002306.cidr_blocks.#": "1",
                            "ingress.331002306.cidr_blocks.0": "172.20.40.0/24",
                            "ingress.331002306.from_port": "443",
                            "ingress.331002306.ipv6_cidr_blocks.#": "0",
                            "ingress.331002306.protocol": "tcp",
                            "ingress.331002306.security_groups.#": "0",
                            "ingress.331002306.self": "false",
                            "ingress.331002306.to_port": "443",
                            "ingress.785997241.cidr_blocks.#": "1",
                            "ingress.785997241.cidr_blocks.0": "172.20.40.0/24",
                            "ingress.785997241.from_port": "80",
                            "ingress.785997241.ipv6_cidr_blocks.#": "0",
                            "ingress.785997241.protocol": "tcp",
                            "ingress.785997241.security_groups.#": "0",
                            "ingress.785997241.self": "false",
                            "ingress.785997241.to_port": "80",
                            "name": "gitlab",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "gitlab",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.prod-app-lb": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-f231198f",
                        "attributes": {
                            "description": "Allow prodapp ELB connections.",
                            "egress.#": "2",
                            "egress.4005119119.cidr_blocks.#": "0",
                            "egress.4005119119.from_port": "443",
                            "egress.4005119119.ipv6_cidr_blocks.#": "0",
                            "egress.4005119119.prefix_list_ids.#": "0",
                            "egress.4005119119.protocol": "tcp",
                            "egress.4005119119.security_groups.#": "1",
                            "egress.4005119119.security_groups.1833714445": "sg-047ff379",
                            "egress.4005119119.self": "false",
                            "egress.4005119119.to_port": "443",
                            "egress.45642825.cidr_blocks.#": "0",
                            "egress.45642825.from_port": "80",
                            "egress.45642825.ipv6_cidr_blocks.#": "0",
                            "egress.45642825.prefix_list_ids.#": "0",
                            "egress.45642825.protocol": "tcp",
                            "egress.45642825.security_groups.#": "1",
                            "egress.45642825.security_groups.1833714445": "sg-047ff379",
                            "egress.45642825.self": "false",
                            "egress.45642825.to_port": "80",
                            "id": "sg-f231198f",
                            "ingress.#": "2",
                            "ingress.3224597687.cidr_blocks.#": "1",
                            "ingress.3224597687.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3224597687.from_port": "80",
                            "ingress.3224597687.ipv6_cidr_blocks.#": "1",
                            "ingress.3224597687.ipv6_cidr_blocks.0": "::/0",
                            "ingress.3224597687.protocol": "tcp",
                            "ingress.3224597687.security_groups.#": "0",
                            "ingress.3224597687.self": "false",
                            "ingress.3224597687.to_port": "80",
                            "ingress.4249917644.cidr_blocks.#": "1",
                            "ingress.4249917644.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4249917644.from_port": "443",
                            "ingress.4249917644.ipv6_cidr_blocks.#": "1",
                            "ingress.4249917644.ipv6_cidr_blocks.0": "::/0",
                            "ingress.4249917644.protocol": "tcp",
                            "ingress.4249917644.security_groups.#": "0",
                            "ingress.4249917644.self": "false",
                            "ingress.4249917644.to_port": "443",
                            "name": "prod-app-lb",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "prod-app-lb",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.prodapp": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-047ff379",
                        "attributes": {
                            "description": "Allow prodapp connections.",
                            "egress.#": "3",
                            "egress.210351787.cidr_blocks.#": "2",
                            "egress.210351787.cidr_blocks.0": "172.20.0.0/16",
                            "egress.210351787.cidr_blocks.1": "0.0.0.0/0",
                            "egress.210351787.from_port": "0",
                            "egress.210351787.ipv6_cidr_blocks.#": "0",
                            "egress.210351787.prefix_list_ids.#": "0",
                            "egress.210351787.protocol": "-1",
                            "egress.210351787.security_groups.#": "0",
                            "egress.210351787.self": "false",
                            "egress.210351787.to_port": "0",
                            "egress.2224876650.cidr_blocks.#": "0",
                            "egress.2224876650.from_port": "5432",
                            "egress.2224876650.ipv6_cidr_blocks.#": "0",
                            "egress.2224876650.prefix_list_ids.#": "0",
                            "egress.2224876650.protocol": "tcp",
                            "egress.2224876650.security_groups.#": "1",
                            "egress.2224876650.security_groups.2764153796": "sg-c679f5bb",
                            "egress.2224876650.self": "false",
                            "egress.2224876650.to_port": "5432",
                            "egress.530348071.cidr_blocks.#": "0",
                            "egress.530348071.from_port": "3128",
                            "egress.530348071.ipv6_cidr_blocks.#": "0",
                            "egress.530348071.prefix_list_ids.#": "0",
                            "egress.530348071.protocol": "tcp",
                            "egress.530348071.security_groups.#": "1",
                            "egress.530348071.security_groups.1258650256": "sg-6eee5813",
                            "egress.530348071.self": "false",
                            "egress.530348071.to_port": "3128",
                            "id": "sg-047ff379",
                            "ingress.#": "4",
                            "ingress.1847116294.cidr_blocks.#": "0",
                            "ingress.1847116294.from_port": "80",
                            "ingress.1847116294.ipv6_cidr_blocks.#": "0",
                            "ingress.1847116294.protocol": "tcp",
                            "ingress.1847116294.security_groups.#": "1",
                            "ingress.1847116294.security_groups.3413107033": "sg-852c98f8",
                            "ingress.1847116294.self": "false",
                            "ingress.1847116294.to_port": "80",
                            "ingress.2182738624.cidr_blocks.#": "0",
                            "ingress.2182738624.from_port": "443",
                            "ingress.2182738624.ipv6_cidr_blocks.#": "0",
                            "ingress.2182738624.protocol": "tcp",
                            "ingress.2182738624.security_groups.#": "1",
                            "ingress.2182738624.security_groups.3413107033": "sg-852c98f8",
                            "ingress.2182738624.self": "false",
                            "ingress.2182738624.to_port": "443",
                            "ingress.3563008277.cidr_blocks.#": "0",
                            "ingress.3563008277.from_port": "80",
                            "ingress.3563008277.ipv6_cidr_blocks.#": "0",
                            "ingress.3563008277.protocol": "tcp",
                            "ingress.3563008277.security_groups.#": "1",
                            "ingress.3563008277.security_groups.1554708397": "sg-cefdaeb3",
                            "ingress.3563008277.self": "false",
                            "ingress.3563008277.to_port": "80",
                            "ingress.945684947.cidr_blocks.#": "0",
                            "ingress.945684947.from_port": "443",
                            "ingress.945684947.ipv6_cidr_blocks.#": "0",
                            "ingress.945684947.protocol": "tcp",
                            "ingress.945684947.security_groups.#": "1",
                            "ingress.945684947.security_groups.1554708397": "sg-cefdaeb3",
                            "ingress.945684947.self": "false",
                            "ingress.945684947.to_port": "443",
                            "name": "prodapp",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "prodapp",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.proddb": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-c679f5bb",
                        "attributes": {
                            "description": "Allow proddb connections.",
                            "egress.#": "0",
                            "id": "sg-c679f5bb",
                            "ingress.#": "1",
                            "ingress.1726815134.cidr_blocks.#": "0",
                            "ingress.1726815134.from_port": "5432",
                            "ingress.1726815134.ipv6_cidr_blocks.#": "0",
                            "ingress.1726815134.protocol": "tcp",
                            "ingress.1726815134.security_groups.#": "1",
                            "ingress.1726815134.security_groups.1833714445": "sg-047ff379",
                            "ingress.1726815134.self": "false",
                            "ingress.1726815134.to_port": "5432",
                            "name": "proddb",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "proddb",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.proxy": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-6eee5813",
                        "attributes": {
                            "description": "Allow proxy connections.",
                            "egress.#": "2",
                            "egress.2214680975.cidr_blocks.#": "1",
                            "egress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2214680975.from_port": "80",
                            "egress.2214680975.ipv6_cidr_blocks.#": "0",
                            "egress.2214680975.prefix_list_ids.#": "0",
                            "egress.2214680975.protocol": "tcp",
                            "egress.2214680975.security_groups.#": "0",
                            "egress.2214680975.self": "false",
                            "egress.2214680975.to_port": "80",
                            "egress.2617001939.cidr_blocks.#": "1",
                            "egress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2617001939.from_port": "443",
                            "egress.2617001939.ipv6_cidr_blocks.#": "0",
                            "egress.2617001939.prefix_list_ids.#": "0",
                            "egress.2617001939.protocol": "tcp",
                            "egress.2617001939.security_groups.#": "0",
                            "egress.2617001939.self": "false",
                            "egress.2617001939.to_port": "443",
                            "id": "sg-6eee5813",
                            "ingress.#": "1",
                            "ingress.4122149540.cidr_blocks.#": "0",
                            "ingress.4122149540.from_port": "3128",
                            "ingress.4122149540.ipv6_cidr_blocks.#": "0",
                            "ingress.4122149540.protocol": "tcp",
                            "ingress.4122149540.security_groups.#": "1",
                            "ingress.4122149540.security_groups.2973286420": "sg-632e9a1e",
                            "ingress.4122149540.self": "false",
                            "ingress.4122149540.to_port": "3128",
                            "name": "proxy",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "proxy",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.pulp": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-5fe05622",
                        "attributes": {
                            "description": "Allow pulp connections.",
                            "egress.#": "2",
                            "egress.2214680975.cidr_blocks.#": "1",
                            "egress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2214680975.from_port": "80",
                            "egress.2214680975.ipv6_cidr_blocks.#": "0",
                            "egress.2214680975.prefix_list_ids.#": "0",
                            "egress.2214680975.protocol": "tcp",
                            "egress.2214680975.security_groups.#": "0",
                            "egress.2214680975.self": "false",
                            "egress.2214680975.to_port": "80",
                            "egress.2617001939.cidr_blocks.#": "1",
                            "egress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2617001939.from_port": "443",
                            "egress.2617001939.ipv6_cidr_blocks.#": "0",
                            "egress.2617001939.prefix_list_ids.#": "0",
                            "egress.2617001939.protocol": "tcp",
                            "egress.2617001939.security_groups.#": "0",
                            "egress.2617001939.self": "false",
                            "egress.2617001939.to_port": "443",
                            "id": "sg-5fe05622",
                            "ingress.#": "3",
                            "ingress.1857847834.cidr_blocks.#": "1",
                            "ingress.1857847834.cidr_blocks.0": "172.20.0.0/16",
                            "ingress.1857847834.from_port": "80",
                            "ingress.1857847834.ipv6_cidr_blocks.#": "0",
                            "ingress.1857847834.protocol": "tcp",
                            "ingress.1857847834.security_groups.#": "0",
                            "ingress.1857847834.self": "false",
                            "ingress.1857847834.to_port": "80",
                            "ingress.279272094.cidr_blocks.#": "1",
                            "ingress.279272094.cidr_blocks.0": "172.20.0.0/16",
                            "ingress.279272094.from_port": "5671",
                            "ingress.279272094.ipv6_cidr_blocks.#": "0",
                            "ingress.279272094.protocol": "tcp",
                            "ingress.279272094.security_groups.#": "0",
                            "ingress.279272094.self": "false",
                            "ingress.279272094.to_port": "5672",
                            "ingress.3586469503.cidr_blocks.#": "1",
                            "ingress.3586469503.cidr_blocks.0": "172.20.0.0/16",
                            "ingress.3586469503.from_port": "443",
                            "ingress.3586469503.ipv6_cidr_blocks.#": "0",
                            "ingress.3586469503.protocol": "tcp",
                            "ingress.3586469503.security_groups.#": "0",
                            "ingress.3586469503.self": "false",
                            "ingress.3586469503.to_port": "443",
                            "name": "pulp",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "pulp",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.ssh_jump": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-852c98f8",
                        "attributes": {
                            "description": "SSH Jump Host - Temporary Access",
                            "egress.#": "2",
                            "egress.1403647648.cidr_blocks.#": "1",
                            "egress.1403647648.cidr_blocks.0": "0.0.0.0/0",
                            "egress.1403647648.from_port": "0",
                            "egress.1403647648.ipv6_cidr_blocks.#": "0",
                            "egress.1403647648.prefix_list_ids.#": "0",
                            "egress.1403647648.protocol": "tcp",
                            "egress.1403647648.security_groups.#": "0",
                            "egress.1403647648.self": "false",
                            "egress.1403647648.to_port": "65535",
                            "egress.1421879845.cidr_blocks.#": "1",
                            "egress.1421879845.cidr_blocks.0": "172.20.0.0/16",
                            "egress.1421879845.from_port": "0",
                            "egress.1421879845.ipv6_cidr_blocks.#": "0",
                            "egress.1421879845.prefix_list_ids.#": "0",
                            "egress.1421879845.protocol": "-1",
                            "egress.1421879845.security_groups.#": "0",
                            "egress.1421879845.self": "false",
                            "egress.1421879845.to_port": "0",
                            "id": "sg-852c98f8",
                            "ingress.#": "2",
                            "ingress.2213656308.cidr_blocks.#": "1",
                            "ingress.2213656308.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2213656308.from_port": "1022",
                            "ingress.2213656308.ipv6_cidr_blocks.#": "0",
                            "ingress.2213656308.protocol": "tcp",
                            "ingress.2213656308.security_groups.#": "0",
                            "ingress.2213656308.self": "false",
                            "ingress.2213656308.to_port": "1022",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "name": "ssh_jump",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "red-jumphost-01",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.stage-app-lb": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-820d25ff",
                        "attributes": {
                            "description": "Allow stageapp ELB connections.",
                            "egress.#": "2",
                            "egress.1916272010.cidr_blocks.#": "0",
                            "egress.1916272010.from_port": "80",
                            "egress.1916272010.ipv6_cidr_blocks.#": "0",
                            "egress.1916272010.prefix_list_ids.#": "0",
                            "egress.1916272010.protocol": "tcp",
                            "egress.1916272010.security_groups.#": "1",
                            "egress.1916272010.security_groups.2284916488": "sg-fa93d787",
                            "egress.1916272010.self": "false",
                            "egress.1916272010.to_port": "80",
                            "egress.2654391628.cidr_blocks.#": "0",
                            "egress.2654391628.from_port": "443",
                            "egress.2654391628.ipv6_cidr_blocks.#": "0",
                            "egress.2654391628.prefix_list_ids.#": "0",
                            "egress.2654391628.protocol": "tcp",
                            "egress.2654391628.security_groups.#": "1",
                            "egress.2654391628.security_groups.2284916488": "sg-fa93d787",
                            "egress.2654391628.self": "false",
                            "egress.2654391628.to_port": "443",
                            "id": "sg-820d25ff",
                            "ingress.#": "2",
                            "ingress.3224597687.cidr_blocks.#": "1",
                            "ingress.3224597687.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3224597687.from_port": "80",
                            "ingress.3224597687.ipv6_cidr_blocks.#": "1",
                            "ingress.3224597687.ipv6_cidr_blocks.0": "::/0",
                            "ingress.3224597687.protocol": "tcp",
                            "ingress.3224597687.security_groups.#": "0",
                            "ingress.3224597687.self": "false",
                            "ingress.3224597687.to_port": "80",
                            "ingress.4249917644.cidr_blocks.#": "1",
                            "ingress.4249917644.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4249917644.from_port": "443",
                            "ingress.4249917644.ipv6_cidr_blocks.#": "1",
                            "ingress.4249917644.ipv6_cidr_blocks.0": "::/0",
                            "ingress.4249917644.protocol": "tcp",
                            "ingress.4249917644.security_groups.#": "0",
                            "ingress.4249917644.self": "false",
                            "ingress.4249917644.to_port": "443",
                            "name": "stage-app-lb",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "app-lb",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.stageapp": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-fa93d787",
                        "attributes": {
                            "description": "Allow stageapp connections.",
                            "egress.#": "3",
                            "egress.210351787.cidr_blocks.#": "2",
                            "egress.210351787.cidr_blocks.0": "172.20.0.0/16",
                            "egress.210351787.cidr_blocks.1": "0.0.0.0/0",
                            "egress.210351787.from_port": "0",
                            "egress.210351787.ipv6_cidr_blocks.#": "0",
                            "egress.210351787.prefix_list_ids.#": "0",
                            "egress.210351787.protocol": "-1",
                            "egress.210351787.security_groups.#": "0",
                            "egress.210351787.self": "false",
                            "egress.210351787.to_port": "0",
                            "egress.530348071.cidr_blocks.#": "0",
                            "egress.530348071.from_port": "3128",
                            "egress.530348071.ipv6_cidr_blocks.#": "0",
                            "egress.530348071.prefix_list_ids.#": "0",
                            "egress.530348071.protocol": "tcp",
                            "egress.530348071.security_groups.#": "1",
                            "egress.530348071.security_groups.1258650256": "sg-6eee5813",
                            "egress.530348071.self": "false",
                            "egress.530348071.to_port": "3128",
                            "egress.638204318.cidr_blocks.#": "1",
                            "egress.638204318.cidr_blocks.0": "172.20.0.0/16",
                            "egress.638204318.from_port": "8140",
                            "egress.638204318.ipv6_cidr_blocks.#": "0",
                            "egress.638204318.prefix_list_ids.#": "0",
                            "egress.638204318.protocol": "tcp",
                            "egress.638204318.security_groups.#": "0",
                            "egress.638204318.self": "false",
                            "egress.638204318.to_port": "8140",
                            "id": "sg-fa93d787",
                            "ingress.#": "4",
                            "ingress.1847116294.cidr_blocks.#": "0",
                            "ingress.1847116294.from_port": "80",
                            "ingress.1847116294.ipv6_cidr_blocks.#": "0",
                            "ingress.1847116294.protocol": "tcp",
                            "ingress.1847116294.security_groups.#": "1",
                            "ingress.1847116294.security_groups.3413107033": "sg-852c98f8",
                            "ingress.1847116294.self": "false",
                            "ingress.1847116294.to_port": "80",
                            "ingress.2182738624.cidr_blocks.#": "0",
                            "ingress.2182738624.from_port": "443",
                            "ingress.2182738624.ipv6_cidr_blocks.#": "0",
                            "ingress.2182738624.protocol": "tcp",
                            "ingress.2182738624.security_groups.#": "1",
                            "ingress.2182738624.security_groups.3413107033": "sg-852c98f8",
                            "ingress.2182738624.self": "false",
                            "ingress.2182738624.to_port": "443",
                            "ingress.3563008277.cidr_blocks.#": "0",
                            "ingress.3563008277.from_port": "80",
                            "ingress.3563008277.ipv6_cidr_blocks.#": "0",
                            "ingress.3563008277.protocol": "tcp",
                            "ingress.3563008277.security_groups.#": "1",
                            "ingress.3563008277.security_groups.1554708397": "sg-cefdaeb3",
                            "ingress.3563008277.self": "false",
                            "ingress.3563008277.to_port": "80",
                            "ingress.945684947.cidr_blocks.#": "0",
                            "ingress.945684947.from_port": "443",
                            "ingress.945684947.ipv6_cidr_blocks.#": "0",
                            "ingress.945684947.protocol": "tcp",
                            "ingress.945684947.security_groups.#": "1",
                            "ingress.945684947.security_groups.1554708397": "sg-cefdaeb3",
                            "ingress.945684947.self": "false",
                            "ingress.945684947.to_port": "443",
                            "name": "stageapp",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "stageapp",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.stagedb": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-ecf3b291",
                        "attributes": {
                            "description": "Allow stagedb connections.",
                            "egress.#": "0",
                            "id": "sg-ecf3b291",
                            "ingress.#": "1",
                            "ingress.375558749.cidr_blocks.#": "0",
                            "ingress.375558749.from_port": "5432",
                            "ingress.375558749.ipv6_cidr_blocks.#": "0",
                            "ingress.375558749.protocol": "tcp",
                            "ingress.375558749.security_groups.#": "1",
                            "ingress.375558749.security_groups.2284916488": "sg-fa93d787",
                            "ingress.375558749.self": "false",
                            "ingress.375558749.to_port": "5432",
                            "name": "stagedb",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "stagedb",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.vpn": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-cefdaeb3",
                        "attributes": {
                            "description": "Allow vpn connections.",
                            "egress.#": "1",
                            "egress.1421879845.cidr_blocks.#": "1",
                            "egress.1421879845.cidr_blocks.0": "172.20.0.0/16",
                            "egress.1421879845.from_port": "0",
                            "egress.1421879845.ipv6_cidr_blocks.#": "0",
                            "egress.1421879845.prefix_list_ids.#": "0",
                            "egress.1421879845.protocol": "-1",
                            "egress.1421879845.security_groups.#": "0",
                            "egress.1421879845.self": "false",
                            "egress.1421879845.to_port": "0",
                            "id": "sg-cefdaeb3",
                            "ingress.#": "4",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2617001939.cidr_blocks.#": "1",
                            "ingress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2617001939.from_port": "443",
                            "ingress.2617001939.ipv6_cidr_blocks.#": "0",
                            "ingress.2617001939.protocol": "tcp",
                            "ingress.2617001939.security_groups.#": "0",
                            "ingress.2617001939.self": "false",
                            "ingress.2617001939.to_port": "443",
                            "ingress.2870960532.cidr_blocks.#": "1",
                            "ingress.2870960532.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2870960532.from_port": "943",
                            "ingress.2870960532.ipv6_cidr_blocks.#": "0",
                            "ingress.2870960532.protocol": "tcp",
                            "ingress.2870960532.security_groups.#": "0",
                            "ingress.2870960532.self": "false",
                            "ingress.2870960532.to_port": "943",
                            "ingress.4178520169.cidr_blocks.#": "1",
                            "ingress.4178520169.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4178520169.from_port": "1194",
                            "ingress.4178520169.ipv6_cidr_blocks.#": "0",
                            "ingress.4178520169.protocol": "udp",
                            "ingress.4178520169.security_groups.#": "0",
                            "ingress.4178520169.self": "false",
                            "ingress.4178520169.to_port": "1194",
                            "name": "vpn",
                            "owner_id": "251764077246",
                            "tags.%": "1",
                            "tags.Name": "vpn",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-in-gitlab-webhook": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-2465213953",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "8088",
                            "id": "sgrule-2465213953",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "source_security_group_id": "sg-f2e0568f",
                            "to_port": "8088",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-in-jumphost-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.ssh_jump"
                    ],
                    "primary": {
                        "id": "sgrule-3979560000",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-3979560000",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-in-vpc-puppet": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman"
                    ],
                    "primary": {
                        "id": "sgrule-3679537512",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "8140",
                            "id": "sgrule-3679537512",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "to_port": "8140",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-out-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman"
                    ],
                    "primary": {
                        "id": "sgrule-856027055",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-856027055",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-out-github-ssh": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman"
                    ],
                    "primary": {
                        "id": "sgrule-2898183216",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "192.30.252.0/22",
                            "cidr_blocks.1": "185.199.108.0/22",
                            "from_port": "22",
                            "id": "sgrule-2898183216",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "to_port": "22",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-out-gitlab-ssh": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-1952945079",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "22",
                            "id": "sgrule-1952945079",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "source_security_group_id": "sg-f2e0568f",
                            "to_port": "22",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.foreman-out-https-any": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman"
                    ],
                    "primary": {
                        "id": "sgrule-3763141623",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-3763141623",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-182e9a65",
                            "self": "false",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-in-jumphost-ssh": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.ssh_jump"
                    ],
                    "primary": {
                        "id": "sgrule-3235800244",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "22",
                            "id": "sgrule-3235800244",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-in-ntp": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general"
                    ],
                    "primary": {
                        "id": "sgrule-327321652",
                        "attributes": {
                            "cidr_blocks.#": "4",
                            "cidr_blocks.0": "162.213.2.253/32",
                            "cidr_blocks.1": "184.105.182.7/32",
                            "cidr_blocks.2": "23.239.24.67/32",
                            "cidr_blocks.3": "129.6.15.28/32",
                            "from_port": "123",
                            "id": "sgrule-327321652",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "udp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "to_port": "123",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-in-vpc-ping": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general"
                    ],
                    "primary": {
                        "id": "sgrule-2184853798",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "-1",
                            "id": "sgrule-2184853798",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "icmp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "to_port": "-1",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-in-vpn-ssh": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-1155162777",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "22",
                            "id": "sgrule-1155162777",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-cefdaeb3",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-out-foreman-puppet": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.general"
                    ],
                    "primary": {
                        "id": "sgrule-3345961940",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "8140",
                            "id": "sgrule-3345961940",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-182e9a65",
                            "to_port": "8140",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-out-ntp": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general"
                    ],
                    "primary": {
                        "id": "sgrule-3295040575",
                        "attributes": {
                            "cidr_blocks.#": "4",
                            "cidr_blocks.0": "162.213.2.253/32",
                            "cidr_blocks.1": "184.105.182.7/32",
                            "cidr_blocks.2": "23.239.24.67/32",
                            "cidr_blocks.3": "129.6.15.28/32",
                            "from_port": "123",
                            "id": "sgrule-3295040575",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "udp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "to_port": "123",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-out-proxy-squid": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.proxy"
                    ],
                    "primary": {
                        "id": "sgrule-1827130928",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "3128",
                            "id": "sgrule-1827130928",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-6eee5813",
                            "to_port": "3128",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-out-pulp-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-2705125579",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-2705125579",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-5fe05622",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.general-out-pulp-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-3615920717",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-3615920717",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-632e9a1e",
                            "self": "false",
                            "source_security_group_id": "sg-5fe05622",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-in-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-843209215",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.40.0/24",
                            "from_port": "80",
                            "id": "sgrule-843209215",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-in-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-1056975152",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.40.0/24",
                            "from_port": "443",
                            "id": "sgrule-1056975152",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-in-foreman-ssh": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-538099485",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "22",
                            "id": "sgrule-538099485",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "source_security_group_id": "sg-182e9a65",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-out-any": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-2393793697",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "0",
                            "id": "sgrule-2393793697",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-out-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-634205378",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-634205378",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-out-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-555676553",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-555676553",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.gitlab-out-foreman-webhook": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.foreman",
                        "aws_security_group.gitlab"
                    ],
                    "primary": {
                        "id": "sgrule-80894778",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "8088",
                            "id": "sgrule-80894778",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f2e0568f",
                            "self": "false",
                            "source_security_group_id": "sg-182e9a65",
                            "to_port": "8088",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prod-app-lb-in-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prod-app-lb"
                    ],
                    "primary": {
                        "id": "sgrule-3856999206",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-3856999206",
                            "ipv6_cidr_blocks.#": "1",
                            "ipv6_cidr_blocks.0": "::/0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f231198f",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prod-app-lb-in-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prod-app-lb"
                    ],
                    "primary": {
                        "id": "sgrule-3992021733",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-3992021733",
                            "ipv6_cidr_blocks.#": "1",
                            "ipv6_cidr_blocks.0": "::/0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f231198f",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prod-app-lb-out-app-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prod-app-lb",
                        "aws_security_group.prodapp"
                    ],
                    "primary": {
                        "id": "sgrule-979672695",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-979672695",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f231198f",
                            "self": "false",
                            "source_security_group_id": "sg-047ff379",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prod-app-lb-out-app-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prod-app-lb",
                        "aws_security_group.prodapp"
                    ],
                    "primary": {
                        "id": "sgrule-189973210",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-189973210",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-f231198f",
                            "self": "false",
                            "source_security_group_id": "sg-047ff379",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-in-jumphost-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.ssh_jump"
                    ],
                    "primary": {
                        "id": "sgrule-2674086238",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-2674086238",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-in-jumphost-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.ssh_jump"
                    ],
                    "primary": {
                        "id": "sgrule-1220659746",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-1220659746",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-in-vpn-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-459757427",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-459757427",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-cefdaeb3",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-in-vpn-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-3435514895",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-3435514895",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-cefdaeb3",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-out-all": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp"
                    ],
                    "primary": {
                        "id": "sgrule-2725491117",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "cidr_blocks.1": "0.0.0.0/0",
                            "from_port": "0",
                            "id": "sgrule-2725491117",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-out-proddb-psql": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.proddb"
                    ],
                    "primary": {
                        "id": "sgrule-585880914",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "5432",
                            "id": "sgrule-585880914",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-c679f5bb",
                            "to_port": "5432",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.prodapp-out-proxy": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.proxy"
                    ],
                    "primary": {
                        "id": "sgrule-381733855",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "3128",
                            "id": "sgrule-381733855",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-047ff379",
                            "self": "false",
                            "source_security_group_id": "sg-6eee5813",
                            "to_port": "3128",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.proddb-in-prodapp-psql": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.prodapp",
                        "aws_security_group.proddb"
                    ],
                    "primary": {
                        "id": "sgrule-4159156107",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "5432",
                            "id": "sgrule-4159156107",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-c679f5bb",
                            "self": "false",
                            "source_security_group_id": "sg-047ff379",
                            "to_port": "5432",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.proxy-in-general-squid": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.general",
                        "aws_security_group.proxy"
                    ],
                    "primary": {
                        "id": "sgrule-2781858684",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "3128",
                            "id": "sgrule-2781858684",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-6eee5813",
                            "self": "false",
                            "source_security_group_id": "sg-632e9a1e",
                            "to_port": "3128",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.proxy-out-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.proxy"
                    ],
                    "primary": {
                        "id": "sgrule-722796150",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-722796150",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-6eee5813",
                            "self": "false",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.proxy-out-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.proxy"
                    ],
                    "primary": {
                        "id": "sgrule-3657874754",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-3657874754",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-6eee5813",
                            "self": "false",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.pulp-in-vpc-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-2124627880",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "80",
                            "id": "sgrule-2124627880",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-5fe05622",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.pulp-in-vpc-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-1245920116",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "443",
                            "id": "sgrule-1245920116",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-5fe05622",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.pulp-in-vpc-messagebus": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-242940152",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "5671",
                            "id": "sgrule-242940152",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-5fe05622",
                            "self": "false",
                            "to_port": "5672",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.pulp-out-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-1473487108",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-1473487108",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-5fe05622",
                            "self": "false",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.pulp-out-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.pulp"
                    ],
                    "primary": {
                        "id": "sgrule-1021023892",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-1021023892",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-5fe05622",
                            "self": "false",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stage-app-lb-in-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stage-app-lb"
                    ],
                    "primary": {
                        "id": "sgrule-791746545",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-791746545",
                            "ipv6_cidr_blocks.#": "1",
                            "ipv6_cidr_blocks.0": "::/0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-820d25ff",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stage-app-lb-in-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stage-app-lb"
                    ],
                    "primary": {
                        "id": "sgrule-37488476",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-37488476",
                            "ipv6_cidr_blocks.#": "1",
                            "ipv6_cidr_blocks.0": "::/0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-820d25ff",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stage-app-lb-out-app-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stage-app-lb",
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-2971187825",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-2971187825",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-820d25ff",
                            "self": "false",
                            "source_security_group_id": "sg-fa93d787",
                            "to_port": "80",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stage-app-lb-out-app-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stage-app-lb",
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-1740211112",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-1740211112",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-820d25ff",
                            "self": "false",
                            "source_security_group_id": "sg-fa93d787",
                            "to_port": "443",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-in-jumphost-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.ssh_jump",
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-1504818289",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-1504818289",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-in-jumphost-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.ssh_jump",
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-2327650922",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-2327650922",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "source_security_group_id": "sg-852c98f8",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-in-vpn-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stageapp",
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-3719672412",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "80",
                            "id": "sgrule-3719672412",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "source_security_group_id": "sg-cefdaeb3",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-in-vpn-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stageapp",
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-247014471",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "443",
                            "id": "sgrule-247014471",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "source_security_group_id": "sg-cefdaeb3",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-out-all": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-3669361895",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "cidr_blocks.1": "0.0.0.0/0",
                            "from_port": "0",
                            "id": "sgrule-3669361895",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stageapp-out-proxy": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.proxy",
                        "aws_security_group.stageapp"
                    ],
                    "primary": {
                        "id": "sgrule-1845853845",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "3128",
                            "id": "sgrule-1845853845",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-fa93d787",
                            "self": "false",
                            "source_security_group_id": "sg-6eee5813",
                            "to_port": "3128",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.stagedb-in-stageapp-psql": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.stageapp",
                        "aws_security_group.stagedb"
                    ],
                    "primary": {
                        "id": "sgrule-1137298506",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "from_port": "5432",
                            "id": "sgrule-1137298506",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-ecf3b291",
                            "self": "false",
                            "source_security_group_id": "sg-fa93d787",
                            "to_port": "5432",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.vpn-in-any-http": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-1643697448",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "80",
                            "id": "sgrule-1643697448",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-cefdaeb3",
                            "self": "false",
                            "to_port": "80",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.vpn-in-any-https": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-231181307",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "443",
                            "id": "sgrule-231181307",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-cefdaeb3",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.vpn-in-any-https-default": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-1626531623",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "943",
                            "id": "sgrule-1626531623",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-cefdaeb3",
                            "self": "false",
                            "to_port": "943",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.vpn-in-any-ovpn": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-1398798726",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "from_port": "1194",
                            "id": "sgrule-1398798726",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "udp",
                            "security_group_id": "sg-cefdaeb3",
                            "self": "false",
                            "to_port": "1194",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group_rule.vpn-out-vpc-any": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.vpn"
                    ],
                    "primary": {
                        "id": "sgrule-2854003632",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "172.20.0.0/16",
                            "from_port": "0",
                            "id": "sgrule-2854003632",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-cefdaeb3",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_db"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:stage"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stagedb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "YourPwdShouldBeLongAndSecure!"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-ZUVMPDMZHZGSPTV5ONCOFAW7H4"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                },
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:stage-20171026215614465400000001"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171026215614465400000001"
                },
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:stage-20171026215614478500000002"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171026215614478500000002"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_fusion_01"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-0e867f3bd440a1ae0"
                }
            },
            "resources": {
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-0e867f3bd440a1ae0",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-0e867f3bd440a1ae0",
                            "instance_state": "running",
                            "instance_type": "t2.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-2c5ae01f",
                            "primary_network_interface_id": "eni-2c5ae01f",
                            "private_dns": "ip-172-20-20-190.us-west-2.compute.internal",
                            "private_ip": "172.20.20.190",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-3ed67876",
                            "tags.%": "1",
                            "tags.Name": "red-fusion-01",
                            "tenancy": "default",
                            "user_data": "e6d419f10777acb44a1d3516a574e4be7976ed2c",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2284916488": "sg-fa93d787",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-fusion-01_A",
                        "attributes": {
                            "fqdn": "red-fusion-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-fusion-01_A",
                            "name": "red-fusion-01",
                            "records.#": "1",
                            "records.733634921": "172.20.20.190",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_lb"
            ],
            "outputs": {
                "app-http_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757"
                },
                "app-https_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678"
                }
            },
            "resources": {
                "aws_alb.appserver": {
                    "type": "aws_alb",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-stagingapp-lb/d3112b0bdf0159dd",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-stagingapp-lb/d3112b0bdf0159dd",
                            "arn_suffix": "app/red-stagingapp-lb/d3112b0bdf0159dd",
                            "dns_name": "red-stagingapp-lb-537267760.us-west-2.elb.amazonaws.com",
                            "enable_deletion_protection": "false",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-stagingapp-lb/d3112b0bdf0159dd",
                            "idle_timeout": "600",
                            "internal": "false",
                            "ip_address_type": "ipv4",
                            "name": "red-stagingapp-lb",
                            "security_groups.#": "2",
                            "security_groups.2720713325": "sg-820d25ff",
                            "security_groups.2973286420": "sg-632e9a1e",
                            "subnets.#": "2",
                            "subnets.2200485057": "subnet-1ef87178",
                            "subnets.2652384640": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Environment": "staging",
                            "vpc_id": "vpc-21c2ba47",
                            "zone_id": "Z1H1FL5HABSF5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_listener.app-http": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.appserver",
                        "aws_alb_target_group.app-http"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/f43fccaec78c3a91",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/f43fccaec78c3a91",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/f43fccaec78c3a91",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-stagingapp-lb/d3112b0bdf0159dd",
                            "port": "80",
                            "protocol": "HTTP",
                            "ssl_policy": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_listener.app-https": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.appserver",
                        "aws_alb_target_group.app-https",
                        "data.aws_acm_certificate.app_cert"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/85a8a129d55c5046",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/85a8a129d55c5046",
                            "certificate_arn": "arn:aws:acm:us-west-2:251764077246:certificate/fb18da76-2e96-4474-b189-b1f8428834af",
                            "default_action.#": "1",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:listener/app/red-stagingapp-lb/d3112b0bdf0159dd/85a8a129d55c5046",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:loadbalancer/app/red-stagingapp-lb/d3112b0bdf0159dd",
                            "port": "443",
                            "protocol": "HTTPS",
                            "ssl_policy": "ELBSecurityPolicy-TLS-1-2-2017-01"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group.app-http": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757",
                            "arn_suffix": "targetgroup/red-staging-app-http/1bed5b5b5404e757",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "5",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-http/1bed5b5b5404e757",
                            "name": "red-staging-app-http",
                            "port": "80",
                            "protocol": "HTTP",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_alb_target_group.app-https": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678",
                            "arn_suffix": "targetgroup/red-staging-app-https/58c1dc6d76667678",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "5",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/",
                            "health_check.0.port": "traffic-port",
                            "health_check.0.protocol": "HTTPS",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-west-2:251764077246:targetgroup/red-staging-app-https/58c1dc6d76667678",
                            "name": "red-staging-app-https",
                            "port": "443",
                            "protocol": "HTTPS",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "86400",
                            "stickiness.0.enabled": "false",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.app-lb-ext": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_alb.appserver"
                    ],
                    "primary": {
                        "id": "Z3J6VC88LUCV3F_staging.aws.reddotstorage.com_A",
                        "attributes": {
                            "alias.#": "1",
                            "alias.4243162610.evaluate_target_health": "false",
                            "alias.4243162610.name": "red-stagingapp-lb-537267760.us-west-2.elb.amazonaws.com",
                            "alias.4243162610.zone_id": "Z1H1FL5HABSF5",
                            "fqdn": "staging.aws.reddotstorage.com",
                            "health_check_id": "",
                            "id": "Z3J6VC88LUCV3F_staging.aws.reddotstorage.com_A",
                            "name": "staging.aws.reddotstorage.com",
                            "records.#": "0",
                            "set_identifier": "",
                            "ttl": "0",
                            "type": "A",
                            "zone_id": "Z3J6VC88LUCV3F"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.aws_acm_certificate.app_cert": {
                    "type": "aws_acm_certificate",
                    "depends_on": [],
                    "primary": {
                        "id": "2017-11-10 19:52:54.299195805 +0000 UTC",
                        "attributes": {
                            "arn": "arn:aws:acm:us-west-2:251764077246:certificate/fb18da76-2e96-4474-b189-b1f8428834af",
                            "domain": "staging.reddotstorage.com",
                            "id": "2017-11-10 19:52:54.299195805 +0000 UTC",
                            "statuses.#": "1",
                            "statuses.0": "ISSUED"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_railsapp"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-0aef3f7dfcdd5e07b"
                }
            },
            "resources": {
                "aws_eip.hostname": {
                    "type": "aws_eip",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "eipalloc-da8c36e7",
                        "attributes": {
                            "association_id": "eipassoc-9cbd56a3",
                            "domain": "vpc",
                            "id": "eipalloc-da8c36e7",
                            "instance": "i-0aef3f7dfcdd5e07b",
                            "network_interface": "eni-a816bb98",
                            "private_ip": "172.20.40.167",
                            "public_ip": "34.210.233.124",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "i-0aef3f7dfcdd5e07b",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-0aef3f7dfcdd5e07b",
                            "instance_state": "running",
                            "instance_type": "t2.small",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-a816bb98",
                            "primary_network_interface_id": "eni-a816bb98",
                            "private_dns": "ip-172-20-40-167.us-west-2.compute.internal",
                            "private_ip": "172.20.40.167",
                            "public_dns": "ec2-34-210-233-124.us-west-2.compute.amazonaws.com",
                            "public_ip": "34.210.233.124",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "red-stageapp-01",
                            "tenancy": "default",
                            "user_data": "7becc80f886173bd8f78c7db747baf36911b9fcb",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2284916488": "sg-fa93d787",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-stageapp-01_A",
                        "attributes": {
                            "fqdn": "red-stageapp-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-stageapp-01_A",
                            "name": "red-stageapp-01",
                            "records.#": "1",
                            "records.3827239704": "172.20.40.167",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_railsapp_02"
            ],
            "outputs": {
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-02cbdc3e74e5599b5"
                }
            },
            "resources": {
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-02cbdc3e74e5599b5",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "false",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-02cbdc3e74e5599b5",
                            "instance_state": "running",
                            "instance_type": "t2.small",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-5e884a6d",
                            "primary_network_interface_id": "eni-5e884a6d",
                            "private_dns": "ip-172-20-20-238.us-west-2.compute.internal",
                            "private_ip": "172.20.20.238",
                            "public_dns": "",
                            "public_ip": "",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-3ed67876",
                            "tags.%": "1",
                            "tags.Name": "red-stageapp-02",
                            "tenancy": "default",
                            "user_data": "cac4b73b24ac32b4a4c4205e835e93158948d107",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.2284916488": "sg-fa93d787",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-stageapp-02_A",
                        "attributes": {
                            "fqdn": "red-stageapp-02.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-stageapp-02_A",
                            "name": "red-stageapp-02",
                            "records.#": "1",
                            "records.3720920968": "172.20.20.238",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "vpc"
            ],
            "outputs": {
                "Egress elastic ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "34.208.70.90"
                },
                "a-app": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-3ed67876"
                },
                "a-db": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-3fd67877"
                },
                "a-dmz": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-4ed67806"
                },
                "a-shared": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-65d27c2d"
                },
                "a_public_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-39d57b71"
                },
                "availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "a"
                },
                "b-app": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-a3f970c5"
                },
                "b-db": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-d6fa73b0"
                },
                "b-dmz": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-1ef87178"
                },
                "b-shared": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-5afb723c"
                },
                "b_public_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-9dfb72fb"
                },
                "c-app": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-6a297831"
                },
                "c-db": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-1c287947"
                },
                "c-dmz": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-4a2b7a11"
                },
                "c-shared": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-ed2776b6"
                },
                "c_public_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "subnet-1122734a"
                },
                "cidr": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.20.0.0/16"
                },
                "dmz_subnet_cidr": {
                    "sensitive": false,
                    "type": "map",
                    "value": {
                        "a": "172.20.40.0/24",
                        "b": "172.20.140.0/24",
                        "c": "172.20.240.0/24"
                    }
                },
                "eip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "34.208.70.90"
                },
                "host_prefix": {
                    "sensitive": false,
                    "type": "string",
                    "value": "red"
                },
                "region": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2"
                },
                "subnet_a-vpn_user": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.22.40.0/24"
                },
                "subnet_b-vpn_user": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.22.140.0/24"
                },
                "subnet_c-vpn_user": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.22.240.0/24"
                },
                "vpc_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "vpc-21c2ba47"
                }
            },
            "resources": {
                "aws_eip.nat_eip": {
                    "type": "aws_eip",
                    "depends_on": [],
                    "primary": {
                        "id": "eipalloc-1b239b26",
                        "attributes": {
                            "association_id": "eipassoc-127f932d",
                            "domain": "vpc",
                            "id": "eipalloc-1b239b26",
                            "instance": "",
                            "network_interface": "eni-1bbe1b2b",
                            "private_ip": "172.20.40.148",
                            "public_ip": "34.208.70.90",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_internet_gateway.default_gw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "igw-557b2b32",
                        "attributes": {
                            "id": "igw-557b2b32",
                            "tags.%": "1",
                            "tags.Name": "red-default-gateway",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_nat_gateway.natGW": {
                    "type": "aws_nat_gateway",
                    "depends_on": [
                        "aws_eip.nat_eip",
                        "aws_internet_gateway.default_gw",
                        "aws_subnet.a-dmz"
                    ],
                    "primary": {
                        "id": "nat-0f3ab139fdb8c272a",
                        "attributes": {
                            "allocation_id": "eipalloc-1b239b26",
                            "id": "nat-0f3ab139fdb8c272a",
                            "network_interface_id": "eni-1bbe1b2b",
                            "private_ip": "172.20.40.148",
                            "public_ip": "34.208.70.90",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "red-nat-gateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_network_interface.vpn-interface-a": {
                    "type": "aws_network_interface",
                    "depends_on": [
                        "aws_subnet.a-dmz"
                    ],
                    "primary": {
                        "id": "eni-cbb316fb",
                        "attributes": {
                            "attachment.#": "0",
                            "description": "",
                            "id": "eni-cbb316fb",
                            "private_dns_name": "ip-172-20-40-100.us-west-2.compute.internal",
                            "private_ip": "172.20.40.100",
                            "private_ips.#": "1",
                            "private_ips.740374845": "172.20.40.100",
                            "security_groups.#": "1",
                            "security_groups.3300287264": "sg-55219528",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "vpn-interface-a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_network_interface.vpn-interface-b": {
                    "type": "aws_network_interface",
                    "depends_on": [
                        "aws_subnet.b-dmz"
                    ],
                    "primary": {
                        "id": "eni-9603ecb7",
                        "attributes": {
                            "attachment.#": "0",
                            "description": "",
                            "id": "eni-9603ecb7",
                            "private_dns_name": "ip-172-20-140-100.us-west-2.compute.internal",
                            "private_ip": "172.20.140.100",
                            "private_ips.#": "1",
                            "private_ips.3009338277": "172.20.140.100",
                            "security_groups.#": "1",
                            "security_groups.3300287264": "sg-55219528",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-1ef87178",
                            "tags.%": "1",
                            "tags.Name": "vpn-interface-b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_network_interface.vpn-interface-c": {
                    "type": "aws_network_interface",
                    "depends_on": [
                        "aws_subnet.c-dmz"
                    ],
                    "primary": {
                        "id": "eni-0125d903",
                        "attributes": {
                            "attachment.#": "0",
                            "description": "",
                            "id": "eni-0125d903",
                            "private_dns_name": "ip-172-20-240-100.us-west-2.compute.internal",
                            "private_ip": "172.20.240.100",
                            "private_ips.#": "1",
                            "private_ips.2193015096": "172.20.240.100",
                            "security_groups.#": "1",
                            "security_groups.3300287264": "sg-55219528",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4a2b7a11",
                            "tags.%": "1",
                            "tags.Name": "vpn-interface-c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route.public_internet_gateway": {
                    "type": "aws_route",
                    "depends_on": [
                        "aws_internet_gateway.default_gw",
                        "aws_route_table.public-rt"
                    ],
                    "primary": {
                        "id": "r-rtb-83a804fa1080289494",
                        "attributes": {
                            "destination_cidr_block": "0.0.0.0/0",
                            "destination_prefix_list_id": "",
                            "egress_only_gateway_id": "",
                            "gateway_id": "igw-557b2b32",
                            "id": "r-rtb-83a804fa1080289494",
                            "instance_id": "",
                            "instance_owner_id": "",
                            "nat_gateway_id": "",
                            "network_interface_id": "",
                            "origin": "CreateRoute",
                            "route_table_id": "rtb-83a804fa",
                            "state": "active",
                            "vpc_peering_connection_id": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.internal-rt": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_network_interface.vpn-interface-a",
                        "aws_network_interface.vpn-interface-b",
                        "aws_network_interface.vpn-interface-c",
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "rtb-37ab074e",
                        "attributes": {
                            "id": "rtb-37ab074e",
                            "propagating_vgws.#": "0",
                            "route.#": "3",
                            "route.1595550413.cidr_block": "172.22.240.0/24",
                            "route.1595550413.egress_only_gateway_id": "",
                            "route.1595550413.gateway_id": "",
                            "route.1595550413.instance_id": "",
                            "route.1595550413.ipv6_cidr_block": "",
                            "route.1595550413.nat_gateway_id": "",
                            "route.1595550413.network_interface_id": "eni-0125d903",
                            "route.1595550413.vpc_peering_connection_id": "",
                            "route.2334729190.cidr_block": "172.22.40.0/24",
                            "route.2334729190.egress_only_gateway_id": "",
                            "route.2334729190.gateway_id": "",
                            "route.2334729190.instance_id": "",
                            "route.2334729190.ipv6_cidr_block": "",
                            "route.2334729190.nat_gateway_id": "",
                            "route.2334729190.network_interface_id": "eni-cbb316fb",
                            "route.2334729190.vpc_peering_connection_id": "",
                            "route.2578101204.cidr_block": "172.22.140.0/24",
                            "route.2578101204.egress_only_gateway_id": "",
                            "route.2578101204.gateway_id": "",
                            "route.2578101204.instance_id": "",
                            "route.2578101204.ipv6_cidr_block": "",
                            "route.2578101204.nat_gateway_id": "",
                            "route.2578101204.network_interface_id": "eni-9603ecb7",
                            "route.2578101204.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "internal-rt",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.nat-rt": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_nat_gateway.natGW",
                        "aws_network_interface.vpn-interface-a",
                        "aws_network_interface.vpn-interface-b",
                        "aws_network_interface.vpn-interface-c",
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "rtb-8baa06f2",
                        "attributes": {
                            "id": "rtb-8baa06f2",
                            "propagating_vgws.#": "0",
                            "route.#": "4",
                            "route.1595550413.cidr_block": "172.22.240.0/24",
                            "route.1595550413.egress_only_gateway_id": "",
                            "route.1595550413.gateway_id": "",
                            "route.1595550413.instance_id": "",
                            "route.1595550413.ipv6_cidr_block": "",
                            "route.1595550413.nat_gateway_id": "",
                            "route.1595550413.network_interface_id": "eni-0125d903",
                            "route.1595550413.vpc_peering_connection_id": "",
                            "route.2334729190.cidr_block": "172.22.40.0/24",
                            "route.2334729190.egress_only_gateway_id": "",
                            "route.2334729190.gateway_id": "",
                            "route.2334729190.instance_id": "",
                            "route.2334729190.ipv6_cidr_block": "",
                            "route.2334729190.nat_gateway_id": "",
                            "route.2334729190.network_interface_id": "eni-cbb316fb",
                            "route.2334729190.vpc_peering_connection_id": "",
                            "route.2578101204.cidr_block": "172.22.140.0/24",
                            "route.2578101204.egress_only_gateway_id": "",
                            "route.2578101204.gateway_id": "",
                            "route.2578101204.instance_id": "",
                            "route.2578101204.ipv6_cidr_block": "",
                            "route.2578101204.nat_gateway_id": "",
                            "route.2578101204.network_interface_id": "eni-9603ecb7",
                            "route.2578101204.vpc_peering_connection_id": "",
                            "route.3455643124.cidr_block": "0.0.0.0/0",
                            "route.3455643124.egress_only_gateway_id": "",
                            "route.3455643124.gateway_id": "",
                            "route.3455643124.instance_id": "",
                            "route.3455643124.ipv6_cidr_block": "",
                            "route.3455643124.nat_gateway_id": "nat-0f3ab139fdb8c272a",
                            "route.3455643124.network_interface_id": "",
                            "route.3455643124.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "nat-rt",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table.public-rt": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.default_gw",
                        "aws_network_interface.vpn-interface-a",
                        "aws_network_interface.vpn-interface-b",
                        "aws_network_interface.vpn-interface-c",
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "rtb-83a804fa",
                        "attributes": {
                            "id": "rtb-83a804fa",
                            "propagating_vgws.#": "0",
                            "route.#": "4",
                            "route.1595550413.cidr_block": "172.22.240.0/24",
                            "route.1595550413.egress_only_gateway_id": "",
                            "route.1595550413.gateway_id": "",
                            "route.1595550413.instance_id": "",
                            "route.1595550413.ipv6_cidr_block": "",
                            "route.1595550413.nat_gateway_id": "",
                            "route.1595550413.network_interface_id": "eni-0125d903",
                            "route.1595550413.vpc_peering_connection_id": "",
                            "route.2334729190.cidr_block": "172.22.40.0/24",
                            "route.2334729190.egress_only_gateway_id": "",
                            "route.2334729190.gateway_id": "",
                            "route.2334729190.instance_id": "",
                            "route.2334729190.ipv6_cidr_block": "",
                            "route.2334729190.nat_gateway_id": "",
                            "route.2334729190.network_interface_id": "eni-cbb316fb",
                            "route.2334729190.vpc_peering_connection_id": "",
                            "route.2578101204.cidr_block": "172.22.140.0/24",
                            "route.2578101204.egress_only_gateway_id": "",
                            "route.2578101204.gateway_id": "",
                            "route.2578101204.instance_id": "",
                            "route.2578101204.ipv6_cidr_block": "",
                            "route.2578101204.nat_gateway_id": "",
                            "route.2578101204.network_interface_id": "eni-9603ecb7",
                            "route.2578101204.vpc_peering_connection_id": "",
                            "route.3977690015.cidr_block": "0.0.0.0/0",
                            "route.3977690015.egress_only_gateway_id": "",
                            "route.3977690015.gateway_id": "igw-557b2b32",
                            "route.3977690015.instance_id": "",
                            "route.3977690015.ipv6_cidr_block": "",
                            "route.3977690015.nat_gateway_id": "",
                            "route.3977690015.network_interface_id": "",
                            "route.3977690015.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "public-rt",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.appSubA": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.a-app"
                    ],
                    "primary": {
                        "id": "rtbassoc-c7d335bc",
                        "attributes": {
                            "id": "rtbassoc-c7d335bc",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-3ed67876"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.appSubB": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.b-app"
                    ],
                    "primary": {
                        "id": "rtbassoc-27d3355c",
                        "attributes": {
                            "id": "rtbassoc-27d3355c",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-a3f970c5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.appSubC": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.c-app"
                    ],
                    "primary": {
                        "id": "rtbassoc-15d5336e",
                        "attributes": {
                            "id": "rtbassoc-15d5336e",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-6a297831"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dbSubA": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.internal-rt",
                        "aws_subnet.a-db"
                    ],
                    "primary": {
                        "id": "rtbassoc-b1c480c9",
                        "attributes": {
                            "id": "rtbassoc-b1c480c9",
                            "route_table_id": "rtb-37ab074e",
                            "subnet_id": "subnet-3fd67877"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dbSubB": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.internal-rt",
                        "aws_subnet.b-db"
                    ],
                    "primary": {
                        "id": "rtbassoc-22c4805a",
                        "attributes": {
                            "id": "rtbassoc-22c4805a",
                            "route_table_id": "rtb-37ab074e",
                            "subnet_id": "subnet-d6fa73b0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dbSubC": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.internal-rt",
                        "aws_subnet.c-db"
                    ],
                    "primary": {
                        "id": "rtbassoc-d6b9fdae",
                        "attributes": {
                            "id": "rtbassoc-d6b9fdae",
                            "route_table_id": "rtb-37ab074e",
                            "subnet_id": "subnet-1c287947"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dmzSubA": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public-rt",
                        "aws_subnet.a-dmz"
                    ],
                    "primary": {
                        "id": "rtbassoc-1e242766",
                        "attributes": {
                            "id": "rtbassoc-1e242766",
                            "route_table_id": "rtb-83a804fa",
                            "subnet_id": "subnet-4ed67806"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dmzSubB": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public-rt",
                        "aws_subnet.b-dmz"
                    ],
                    "primary": {
                        "id": "rtbassoc-03c5817b",
                        "attributes": {
                            "id": "rtbassoc-03c5817b",
                            "route_table_id": "rtb-83a804fa",
                            "subnet_id": "subnet-1ef87178"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.dmzSubC": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.public-rt",
                        "aws_subnet.c-dmz"
                    ],
                    "primary": {
                        "id": "rtbassoc-d7b9fdaf",
                        "attributes": {
                            "id": "rtbassoc-d7b9fdaf",
                            "route_table_id": "rtb-83a804fa",
                            "subnet_id": "subnet-4a2b7a11"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.sharedSubA": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.a-shared"
                    ],
                    "primary": {
                        "id": "rtbassoc-71c48009",
                        "attributes": {
                            "id": "rtbassoc-71c48009",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-65d27c2d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.sharedSubB": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.b-shared"
                    ],
                    "primary": {
                        "id": "rtbassoc-b2b9fdca",
                        "attributes": {
                            "id": "rtbassoc-b2b9fdca",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-5afb723c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route_table_association.sharedSubC": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.nat-rt",
                        "aws_subnet.c-shared"
                    ],
                    "primary": {
                        "id": "rtbassoc-a3c480db",
                        "attributes": {
                            "id": "rtbassoc-a3c480db",
                            "route_table_id": "rtb-8baa06f2",
                            "subnet_id": "subnet-ed2776b6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.a-app": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-3ed67876",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "172.20.20.0/24",
                            "id": "subnet-3ed67876",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "App-A-20",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.a-db": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-3fd67877",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "172.20.30.0/24",
                            "id": "subnet-3fd67877",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Db-A-30",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.a-dmz": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-4ed67806",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "172.20.40.0/24",
                            "id": "subnet-4ed67806",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Name": "Dmz-A-40",
                            "tags.Tier": "DMZ",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.a-public": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-39d57b71",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "172.20.0.0/24",
                            "id": "subnet-39d57b71",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Public-A-0",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.a-shared": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-65d27c2d",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "172.20.50.0/24",
                            "id": "subnet-65d27c2d",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Shared-A-50",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.b-app": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-a3f970c5",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "172.20.120.0/24",
                            "id": "subnet-a3f970c5",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "App-B-120",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.b-db": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-d6fa73b0",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "172.20.130.0/24",
                            "id": "subnet-d6fa73b0",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Db-B-130",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.b-dmz": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-1ef87178",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "172.20.140.0/24",
                            "id": "subnet-1ef87178",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Name": "Dmz-B-140",
                            "tags.Tier": "DMZ",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.b-public": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-9dfb72fb",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "172.20.100.0/24",
                            "id": "subnet-9dfb72fb",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Public-B-100",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.b-shared": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-5afb723c",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "172.20.150.0/24",
                            "id": "subnet-5afb723c",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Shared-B-150",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.c-app": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-6a297831",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "172.20.220.0/24",
                            "id": "subnet-6a297831",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "App-C-220",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.c-db": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-1c287947",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "172.20.230.0/24",
                            "id": "subnet-1c287947",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Db-C-230",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.c-dmz": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-4a2b7a11",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "172.20.240.0/24",
                            "id": "subnet-4a2b7a11",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Name": "Dmz-C-240",
                            "tags.Tier": "DMZ",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.c-public": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-1122734a",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "172.20.200.0/24",
                            "id": "subnet-1122734a",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Public-C-200",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_subnet.c-shared": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.environment"
                    ],
                    "primary": {
                        "id": "subnet-ed2776b6",
                        "attributes": {
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "172.20.250.0/24",
                            "id": "subnet-ed2776b6",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "1",
                            "tags.Name": "Shared-C-250",
                            "vpc_id": "vpc-21c2ba47"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_vpc.environment": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-21c2ba47",
                        "attributes": {
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "172.20.0.0/16",
                            "default_network_acl_id": "acl-16f2ed70",
                            "default_route_table_id": "rtb-bda408c4",
                            "default_security_group_id": "sg-55219528",
                            "dhcp_options_id": "dopt-35b53353",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-21c2ba47",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-bda408c4",
                            "tags.%": "1",
                            "tags.Name": "red-production-vpc"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "vpn"
            ],
            "outputs": {
                "hostname-ext": {
                    "sensitive": false,
                    "type": "string",
                    "value": "vpn.aws.reddotstorage.com (34.209.226.135)"
                },
                "hostname_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "i-0af5c7fbe784b9f4f"
                }
            },
            "resources": {
                "aws_eip.hostname": {
                    "type": "aws_eip",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "eipalloc-e7a2c4da",
                        "attributes": {
                            "association_id": "eipassoc-bbd34284",
                            "domain": "vpc",
                            "id": "eipalloc-e7a2c4da",
                            "instance": "i-0af5c7fbe784b9f4f",
                            "network_interface": "eni-3e1bea0d",
                            "private_ip": "172.20.40.248",
                            "public_ip": "34.209.226.135",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.hostname": {
                    "type": "aws_instance",
                    "depends_on": [
                        "module.bootstrap"
                    ],
                    "primary": {
                        "id": "i-0af5c7fbe784b9f4f",
                        "attributes": {
                            "ami": "ami-f4533694",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-west-2a",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "basicServer",
                            "id": "i-0af5c7fbe784b9f4f",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "lark-provisioning",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-3e1bea0d",
                            "primary_network_interface_id": "eni-3e1bea0d",
                            "private_dns": "ip-172-20-40-248.us-west-2.compute.internal",
                            "private_ip": "172.20.40.248",
                            "public_dns": "ec2-34-209-226-135.us-west-2.compute.amazonaws.com",
                            "public_ip": "34.209.226.135",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "false",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-4ed67806",
                            "tags.%": "1",
                            "tags.Name": "red-vpn-01",
                            "tenancy": "default",
                            "user_data": "d87f99613365c471d78855c62e870c3b04ad74d0",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "3",
                            "vpc_security_group_ids.1554708397": "sg-cefdaeb3",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3413107033": "sg-852c98f8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_instance.hostname"
                    ],
                    "primary": {
                        "id": "Z3GTC2DDZGDB36_red-vpn-01_A",
                        "attributes": {
                            "fqdn": "red-vpn-01.red.lan",
                            "health_check_id": "",
                            "id": "Z3GTC2DDZGDB36_red-vpn-01_A",
                            "name": "red-vpn-01",
                            "records.#": "1",
                            "records.1154533970": "172.20.40.248",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3GTC2DDZGDB36"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_route53_record.hostname-ext": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_eip.hostname"
                    ],
                    "primary": {
                        "id": "Z3J6VC88LUCV3F_vpn.aws.reddotstorage.com_A",
                        "attributes": {
                            "fqdn": "vpn.aws.reddotstorage.com",
                            "health_check_id": "",
                            "id": "Z3J6VC88LUCV3F_vpn.aws.reddotstorage.com_A",
                            "name": "vpn.aws.reddotstorage.com",
                            "records.#": "1",
                            "records.3655616701": "34.209.226.135",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "A",
                            "zone_id": "Z3J6VC88LUCV3F"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "db",
                "db_instance"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:stage"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stagedb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "YourPwdShouldBeLongAndSecure!"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-WQYFW3KGF27NXPHHRZCI3DWTGQ"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "db",
                "db_parameter_group"
            ],
            "outputs": {
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:stage-20171005184635510000000002"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171005184635510000000002"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "db",
                "db_subnet_group"
            ],
            "outputs": {
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:stage-20171005184635350600000001"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171005184635350600000001"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "foreman",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8jNRD9bin/YdicChTZbo5DpXtXpNz1BEgEqrYHOnGo8noniYXXNp7Za/LvkXdJG+jlUyXywfF43zzPPM3zmxgYA8ubbcIaut6zSyaz7twG25fQxD60Jm/Pq8WPi7evf3n388X86n0lSiR/xUwuhhpm6mQiJkLKfdBE7LgvHKVIjgesYTZ23WHgl7B0HoPp8LxqYmTibJKidfWQeZNNoCVm+TbY2LqwquG0cbwHGMpm3LDeSFqj92SzSzwRC9fhowqnn+nGBd0YWgsxhe8xYHYWXu9uL4fXyLCOxKUw+GIRif0WljHD/LfrL8XvIFvQyFZbH/t2XJVdrlQLf8DREaBdR6hSRsL8EW93TDVw7rGC7w4k67Oze2w5EbvAsgdClvclZWzlMmbsTJAnM5WxVd4EIcgjJpidlB7epdYwEpjQggvExnu47FNChvkKA4tt34HcQj/gdtEOuWZOVGu97TuVhixvGlI2dvohlBk9GkKZ7Eyil6cqRJPtWuXU/ZdwzJJmuFpMp3AVPYpp92frMsg0SvJArZfGMubhj1QrpqOmOXo8f1bWexkP5ugCU7xhcfCScSus4U+wjVttKd8a5uyanpHU1nQeXr2C9/PFT2IKtieO3R6gFlMov5l6rr59caJms6+/eXGmZupMndbQba/7hHl+hxQ7vDREdzG3AjeMoUzpbca/eiSmWhSSlG4xfHQ5hmKWGlKObW+LiXafS481NIbw/gRXw7j3JO+QWD7ffTApeWfNaMGMrRhaEFN4E8PSrfqM/56Py/nND+fPylrrmPgT0jQuCNOvOEYPkqAiZNDF0HRAy/FP2RiWepgEPTgkHxjo6qnse+LtaVcJ2hJjV2yFwTQe/5lOIcYpg+PjY7iI4XMupl8hA0f4UGUsT9SHqkRFzJ13qOCrpz1+I/f/9/JpKlta99zGuwAyw1czuBqKcGH1uMOjR+1JORF/BwAA///XhF/POgYAAA=="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "559571458",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "559571458",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: base\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8jNRD9bin/YdicChTZbo5DpXtXpNz1BEgEqrYHOnGo8noniYXXNp7Za/LvkXdJG+jlUyXywfF43zzPPM3zmxgYA8ubbcIaut6zSyaz7twG25fQxD60Jm/Pq8WPi7evf3n388X86n0lSiR/xUwuhhpm6mQiJkLKfdBE7LgvHKVIjgesYTZ23WHgl7B0HoPp8LxqYmTibJKidfWQeZNNoCVm+TbY2LqwquG0cbwHGMpm3LDeSFqj92SzSzwRC9fhowqnn+nGBd0YWgsxhe8xYHYWXu9uL4fXyLCOxKUw+GIRif0WljHD/LfrL8XvIFvQyFZbH/t2XJVdrlQLf8DREaBdR6hSRsL8EW93TDVw7rGC7w4k67Oze2w5EbvAsgdClvclZWzlMmbsTJAnM5WxVd4EIcgjJpidlB7epdYwEpjQggvExnu47FNChvkKA4tt34HcQj/gdtEOuWZOVGu97TuVhixvGlI2dvohlBk9GkKZ7Eyil6cqRJPtWuXU/ZdwzJJmuFpMp3AVPYpp92frMsg0SvJArZfGMubhj1QrpqOmOXo8f1bWexkP5ugCU7xhcfCScSus4U+wjVttKd8a5uyanpHU1nQeXr2C9/PFT2IKtieO3R6gFlMov5l6rr59caJms6+/eXGmZupMndbQba/7hHl+hxQ7vDREdzG3AjeMoUzpbca/eiSmWhSSlG4xfHQ5hmKWGlKObW+LiXafS481NIbw/gRXw7j3JO+QWD7ffTApeWfNaMGMrRhaEFN4E8PSrfqM/56Py/nND+fPylrrmPgT0jQuCNOvOEYPkqAiZNDF0HRAy/FP2RiWepgEPTgkHxjo6qnse+LtaVcJ2hJjV2yFwTQe/5lOIcYpg+PjY7iI4XMupl8hA0f4UGUsT9SHqkRFzJ13qOCrpz1+I/f/9/JpKlta99zGuwAyw1czuBqKcGH1uMOjR+1JORF/BwAA///XhF/POgYAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "6a896fb97339bba78a37a1ca465c3cc12580fdcaf1366db7c9b088907000b8a4",
                        "attributes": {
                            "id": "6a896fb97339bba78a37a1ca465c3cc12580fdcaf1366db7c9b088907000b8a4",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: base\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "base"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "gitlab",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI6527s/DaxjPb3P175F02OUjzqRL3wefxvhnPPL3n1zEwBpbX+4Q1dL1nl0xm3bkdti+giX1oTd6fVasfV29e/fL25/Pl5btKlEj+iplcDDUs1PFMzISUh6CZmGqfO0qRHA9Yw2zstsPAL2DtPAbT4VnVxMjE2SRF2+o+8zqbQGvM8k2wsXVhU8NJ4/gAMLTNuGO9k7RF78lml3gmVq7DBx3OP9ONC7oxtBViDt9jwOwsvJpuL4dXyLCNxKUx+GIVif0e1jHD8rerL8XvIFvQyFZbH/t2XJVdb1QLf8DTp4B2G6FKGQnzB7yZKtXAuccKvnskWZ+e3mHLiZgCyx4IWd61lLGVG8feNPJ4oTK2ypsgBHnEBIvjMsLb1BpGAhNacIHYeA8XfUrIsNxgYLHvO5B76AfcFE3ILXOiWut936k0ZHnTkLKx0/ehzOjREMpkFxK9PFEhmmy3KqfuvwXHLGmGq8V8DpfRo5h3f7Yug0wjI/el9dpYxjz8kWrFfKQ0R49nT8p6x+KjObrAFO9YPHrJuBXW8EeqjVttKd8Y5uyanpHU3nQeXr6Ed8vVT2IOtieO3QGgFnMov4V6pr59fqwWi6+/eX6qFupUndTQ7a/6hHl5ixQ7vDBEtzG3AneMoYj0JuNfPRJTLUqRlG4wfHA5huKVGlKObW+Lh6bPZcYaGkN4d4KbQe09yVskls+mDyYl76wZHZixFcMIYg6vY1i7TZ/x3/q4WF7/cPakrLWOiT9CTeOCMP2GY/QgCSpCBl38TI9wOf4pG8NaD0rQg0HyoOd1zNiZcCDo6lOrH5B3wF0laE+MXXEVBtN4/EedQowqg6OjIziP4XMunt8gA0d4X2UsL9T7qkSFzMk7VPDVp719Y+3/7+HTVLa07bmNtwFkhq8WcDk04cLm4YRPH4wn5Uz8HQAA//9eurPSOQYAAA=="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "2050536477",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2050536477",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: base\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI6527s/DaxjPb3P175F02OUjzqRL3wefxvhnPPL3n1zEwBpbX+4Q1dL1nl0xm3bkdti+giX1oTd6fVasfV29e/fL25/Pl5btKlEj+iplcDDUs1PFMzISUh6CZmGqfO0qRHA9Yw2zstsPAL2DtPAbT4VnVxMjE2SRF2+o+8zqbQGvM8k2wsXVhU8NJ4/gAMLTNuGO9k7RF78lml3gmVq7DBx3OP9ONC7oxtBViDt9jwOwsvJpuL4dXyLCNxKUx+GIVif0e1jHD8rerL8XvIFvQyFZbH/t2XJVdb1QLf8DTp4B2G6FKGQnzB7yZKtXAuccKvnskWZ+e3mHLiZgCyx4IWd61lLGVG8feNPJ4oTK2ypsgBHnEBIvjMsLb1BpGAhNacIHYeA8XfUrIsNxgYLHvO5B76AfcFE3ILXOiWut936k0ZHnTkLKx0/ehzOjREMpkFxK9PFEhmmy3KqfuvwXHLGmGq8V8DpfRo5h3f7Yug0wjI/el9dpYxjz8kWrFfKQ0R49nT8p6x+KjObrAFO9YPHrJuBXW8EeqjVttKd8Y5uyanpHU3nQeXr6Ed8vVT2IOtieO3QGgFnMov4V6pr59fqwWi6+/eX6qFupUndTQ7a/6hHl5ixQ7vDBEtzG3AneMoYj0JuNfPRJTLUqRlG4wfHA5huKVGlKObW+Lh6bPZcYaGkN4d4KbQe09yVskls+mDyYl76wZHZixFcMIYg6vY1i7TZ/x3/q4WF7/cPakrLWOiT9CTeOCMP2GY/QgCSpCBl38TI9wOf4pG8NaD0rQg0HyoOd1zNiZcCDo6lOrH5B3wF0laE+MXXEVBtN4/EedQowqg6OjIziP4XMunt8gA0d4X2UsL9T7qkSFzMk7VPDVp719Y+3/7+HTVLa07bmNtwFkhq8WcDk04cLm4YRPH4wn5Uz8HQAA//9eurPSOQYAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "277b0b7262818dfbb6c1041d077444c0c69ec02063077ea83ac404c6996f979f",
                        "attributes": {
                            "id": "277b0b7262818dfbb6c1041d077444c0c69ec02063077ea83ac404c6996f979f",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: base\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "base"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "jump",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZmytFIdsG6dpUgMRBlKSgiqLI6527M3ht4xk3t/8eeZdLAmmeKvUebI/vm88zs9/Mq+AZPcurIWIDfXZso05c93aH3XNoQ/adTsNptfpx9frlL29+PltevK1EseSvmMgG38BCHc3ETEh5HzQTe+4zSzGQ5RGrmbXZ9uj5OaytQ697PK3aEJg46ahoW915XiXtaY1JvvYmdNZvGjhuLd8DjGEz7rjeSdqic2SSjTwTK9vjgwjnn9Wt9XWraSvEHL5Hj8kaeLl/vVxeIsM2EJfA4ItVIHYDrEOC5W+XX4rfQXZQI5vauJC7aVVmvVEd/AEHB4BmG6CKCQnTe7zeMzXAKWMF3z3iXJ+c3GLLjdgbhh0QsrwNKWEn/8x9lEcLlbBTTnshyCFGWByVBN7ETjMSaN+B9cTaOTjPMSLDcoOexZB7kAPkEbe39sgtc6Smrofcqzh6Od2SMqGv70yZ0KEmlNEsJDp5rHzQyWxViv3/CScvqcenxXwOF8GhmPd/dTaBjFM97qjrtTaMadxIdWI+FTQFh6dPynpbw0d96gJTvGPx6CPTURjNH2CbjrWhdK2Zk20zI6lB9w5evIC3y9VPYg4mE4f+HqARcyi/hXqqvn12pBaLr795dqIW6kQdN9APlzliWt4ghR7PNdFNSJ3AHaMvEr1O+HdGYmpEIYnxuiTRQKsJb29wM4o5k7xBYvl0/4eO0VmjpwZL2IkxRjGHV8Gv7SYn/K8AzpdXP5w+KWtTh8gfyL21Xui84RAcSIKKkKEu7UqPFGvalAl+XY+fuh71n0a5rkPCXvt7iq0+lh39e5uCL3MEYgpdNiX7StBAjH1pGvS6dfiv/ISYZASHh4dwFvznXFp6gwwc4F2VsAygd1WxSjH3zUEFX33caJu4P91cq6kcaZu5CzceZIKvFnAxBmH95mGGBw/Sk3Im/gkAAP//k8mVMBgGAAA="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xVbW8TOxb+bqn/4eykotDF44bX7UCQSgssUksr0u4KAYo84zOJbz22sc+0yUX89yvPJKUQeu+HSuTDjO0855nz+njfWUJL/HThsYCmNaS9DCQaPUf1DErXWiXDYpQdvT169fL47N3B3vsPGUs7/j8MUTtbwDDf2WAbjPProA224j7Q0buoqcNKIlnNGrT0DGpt0MoGR1npHEUK0udxln23PA3SxhoDf2Urp7SdFvC01HQN0LlNOCcx53GGxsQqaE8b7Eg3uObh4F+i1FaUMs4YG8AbtBh0BS9XX0+HYySYuUjJMbh75CKZBdQuwN7/x/fYR+AKBFIlKuNa1T/zqp7mCj7DnTuA1cxB5gNGDBc4WTEVQKHFDF7cYCx2d6+w6YStNhUZiEj8yqWAik81GVnynWEeUOVGWsaiQfQw3EkhnHklCSNIq0DbSNIYOGm9R4K9KVpii7YBvoC2w612K+SMyMdCiEXb5L6zMrKMeeUa8X3LAxqUEbmvhhwNf5pbJ0M1y4NvfibsrbjsPs0GA3jvDLJBc650AO77jHynFrWsCEP3irligz6lwRkcbabnVRZvtBEJltOc2I0f6ZeskvQLtn4pqhgmkijosiWM+UI2Bp4/hw97R4dsAFUbyTXXAAUbQPoN8wf5fx7t5MPhw8ePdvNhvps/LaBZjFuPYe8So2vwRMZ46YJiOCe0qUknAb+0GCkWLJF4P0lBFNDX+uoMp11Dt5FfYiT+YPWH9N7oSvZDFlCxzks2gH1naz1tA/7YAid7p/8dbaZnIZynX0RfastkOyXnDPAIWUQCkUY23pCu/pVXztaiK7boZiB0LVu7gI2013o2uy072gsdnE1aAj441VYp+ozFRSRs0uCglaXBZQMy1jcSbG9vw4GzW5TGeooE5OBTFjCJ0Kcs7VIyV+MREz67nbwt53U5EL9R4/6myqm8bACvdcBLaQzTNXwEPofOul6e8qpR8PkZ0AwtA/jhmPM/ncWRb0ujK+DcY2ikTcXgXCrFU/F1haOkJ7exjevGAY2TitU6RXCl3p1K96mGvvNYHy80TrUGrwTpIs7sUkMTwSk23gUZFjAeH8I+BmLOo43RQMAvwOePd3aBW7w8xwWEKItHO7tPgFunMAI/x4VraSkh51qQicIHfSEJhXGVNEm582TK13AVBorXUFUg4EouIjx88ngHeGzLPyAT+6OzsRifjvadcUEqJw5HB2gvMIjj0RhNPdZTiyo5Lo7PRm9P4QDTJZ66UOy/G23evbo8eH0vY53oJSHbevXuYHL8evLm7enh3svJyclW0sLgHIk+O7n3rDIyRvi6VRT92VbSp6RawUozaYOB0QvIVpfG5teiqL8o+y273ymTnWo7h+Vv9AK+sn4ZUOmAFU2S4YRc944Jke7J+0tUjGaScqTrJG24Itn6pyRu3UAwSWVYI/hltTqKb/fZN/ZzkhhbtVUvE5xfYChdxLXUsUqBaGPoZs3YpHPdFPYIgU2JSqHqJm6qaRvy28lML2G/T15ETMs4a0m5Sws8wL+H8L5zQtvpupDeWQuP8w32VwAAAP//xwptf4MKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8jNRB+t5T/MGxOBYpsN8eh0r0rUu56AiQCVdsDnThUOd5JYuG1jWd8Tf498i5pC70+VSIPXo/zzeeZ8TfzJgbGwPJql7CFvnh2yWTWvdti9xKWsYTO5N1ps/hx8fb1L+9+PptfvG9EteSvmMnF0MJMHU3EREh5HzQRe+4zRymS4wFrmI3d9Bj4Jaycx2B6PG2WMTJxNknRprnzvMom0AqzfBts7FxYt3C8dHwPMITNuGW9lbRB78lml3giFq7HBxFOP9NLF/TS0EaIKXyPAbOz8Hp/ez28RIZNJK6BwReLSOx3sIoZ5r9dfil+B9mBRrba+li6cVV2tVYd/AEHB4B2E6FJGQnzR7zeM7XAuWAD3z3irE9ObrH1ROwNyx4IWd6GlLGTqfgkj2YqY6e8CUKQR0wwO6oJvEudYSQwoQMXiI33cF5SQob5GgOLXelB7qAMuL21R26YE7Va70qv0uDlzZKUjb2+M2VGj4ZQJjuT6OWxCtFku1E59f8lHL2kGa4W0ylcRI9i2v/ZuQwyjfW4o9YrYxnz8CHVielY0Bw9nj6r620NH/XRFaZ4y+LRS8atsIY/wTZutaV8bZizWxZGUjvTe3j1Ct7PFz+JKdhCHPt7gFZMof5m6rn69sWRms2+/ubFiZqpE3XcQr+7LAnz/AYp9nhuiG5i7gRuGUOV6HXGvwoSUysqSUrXNYkW6kvfnuB6EHMheYPE8vn+D5OSd9aMDZaxE0OMYgpvYli5dcn4bwGcz69+OH1W11bHxJ/IfemCMGXNMXqQBA0hg67tSo8Ua/woG8NKD0+tB/3nQa6rmLE34Z5im6eyY/jocgx1jkDKsSu2Zt8I2hFjX5sGg1l6/Ed+QowygsPDQziL4XOuLb1GBo7woclYB9CHplq1mPvmoIpvnjbaRu7/b65pqlvaFO7iTQCZ4asZXAxBuLB+mOHBg/SknIi/AwAA//+JoAqxGAYAAA=="
                },
                "railsapp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWnht45ltbv898i6XBNI8ReIebI/vm88zs9/MmxgYA8urIWENXe/ZJZNZd26HzUtYxz40Jg+n1erH1dvXv7z7+Wx58b4SxZK/YiYXQw0LdTQTMyHlfdBM7LnPHKVIjkesYTa27TDwS9g4j8F0eFqtY2TibJKitrrzvMom0AazfBtsbFzY1nC8dnwPMIbNuGO9k9Si92SzSzwTK9fhgwjnn+m1C3ptqBViDt9jwOwsvN6/Xi4vkaGNxCUw+GIVif0Am5hh+dvll+J3kA1oZKutj30zrcputqqBP+DgANC2EaqUkTB/xOs9Uw2ce6zgu0ec9cnJLbbciL1h2QMhy9uQMjaS2GzRpCSPFipjo7wJQpBHTLA4Kkm8S41hJDChAReIjfdw3qeEDMstBhZD34EcoB9xe2uPbJkT1VoPfafS6OXNmpSNnb4zZUaPhlAmu5Do5bEK0WTbqpy6/xJOXtKMT4v5HC6iRzHv/mxcBpmmmtxR642xjHncSDViPhU1R4+nz8p6W8dHfXSBKd6xePSR6Sis4U+wTUdtKV8b5uzWPSOpwXQeXr2C98vVT2IOtieO3T1ALeZQfgv1XH374kgtFl9/8+JELdSJOq6hGy77hHl5gxQ7PDdENzE3AneMocj0OuNfPRJTLQpJStcliRqycZ5MSre3uB1F3ZO8QWL5fP+HSck7a6ZGy9iIMU4xhzcxbNy2z/hvEZwvr344fVbWWsfEn8h/7YIw/ZZj9CAJKkIGXdqWHinYtCkbw0aPn1uPfZBH2W5ixs6Ee6qtnsqO4aPLMZR5AinHprcl+0rQQIxdaR4MZu3xHwkKMUkJDg8P4SyGz7m09hYZOMKHKmMZRB+qYpVi7huECr562oibuP+/+aapHKntuYk3AWSGrxZwMQbhwvZhhgcP0pNyJv4OAAD//y+OQiMgBgAA"
                },
                "vpn_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZmytFIdsG6dpUgMRBlKSgiqLI6527M3ht4xk3t/8eeZdLAmmeKvUebI/vm88zs9/Mq+AZPcurIWIDfXZso05c93aH3XNoQ/adTsNptfpx9frlL29+PltevK1EseSvmMgG38BCHc3ETEh5HzQTe+4zSzGQ5RGrmbXZ9uj5OaytQ697PK3aEJg46ahoW915XiXtaY1JvvYmdNZvGjhuLd8DjGEz7rjeSdqic2SSjTwTK9vjgwjnn9Wt9XWraSvEHL5Hj8kaeLl/vVxeIsM2EJfA4ItVIHYDrEOC5W+XX4rfQXZQI5vauJC7aVVmvVEd/AEHB4BmG6CKCQnTe7zeMzXAKWMF3z3iXJ+c3GLLjdgbhh0QsrwNKWEn/8x9lEcLlbBTTnshyCFGWByVBN7ETjMSaN+B9cTaOTjPMSLDcoOexZB7kAPkEbe39sgtc6Smrofcqzh6Od2SMqGv70yZ0KEmlNEsJDp5rHzQyWxViv3/CScvqcenxXwOF8GhmPd/dTaBjFM97qjrtTaMadxIdWI+FTQFh6dPynpbw0d96gJTvGPx6CPTURjNH2CbjrWhdK2Zk20zI6lB9w5evIC3y9VPYg4mE4f+HqARcyi/hXqqvn12pBaLr795dqIW6kQdN9APlzliWt4ghR7PNdFNSJ3AHaMvEr1O+HdGYmpEIYnxuiTRQKsJb29wM4o5k7xBYvl0/4eO0VmjpwZL2IkxRjGHV8Gv7SYn/K8AzpdXP5w+KWtTh8gfyL21Xui84RAcSIKKkKEu7UqPFGvalAl+XY+fuh71n0a5rkPCXvt7iq0+lh39e5uCL3MEYgpdNiX7StBAjH1pGvS6dfiv/ISYZASHh4dwFvznXFp6gwwc4F2VsAygd1WxSjH3zUEFX33caJu4P91cq6kcaZu5CzceZIKvFnAxBmH95mGGBw/Sk3Im/gkAAP//k8mVMBgGAAA="
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_db",
                "db_instance"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:prod"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "proddb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "s3TNecEhE6B5paQAZEEDQZw2VWsDaqh5GmghCt22"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-WQRUFLK3KQXPOJB3RLDVCWHRUU"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                }
            },
            "resources": {
                "aws_db_instance.this": {
                    "type": "aws_db_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "prod",
                        "attributes": {
                            "address": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com",
                            "allocated_storage": "5",
                            "allow_major_version_upgrade": "false",
                            "apply_immediately": "false",
                            "arn": "arn:aws:rds:us-west-2:251764077246:db:prod",
                            "auto_minor_version_upgrade": "true",
                            "availability_zone": "us-west-2a",
                            "backup_retention_period": "1",
                            "backup_window": "03:00-06:00",
                            "ca_cert_identifier": "rds-ca-2015",
                            "copy_tags_to_snapshot": "false",
                            "db_subnet_group_name": "prod-20171031144555217100000001",
                            "endpoint": "prod.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432",
                            "engine": "postgres",
                            "engine_version": "9.6.2",
                            "hosted_zone_id": "Z1PVIF0B656C1W",
                            "iam_database_authentication_enabled": "false",
                            "id": "prod",
                            "identifier": "prod",
                            "instance_class": "db.t2.medium",
                            "iops": "0",
                            "kms_key_id": "",
                            "license_model": "postgresql-license",
                            "maintenance_window": "mon:00:00-mon:03:00",
                            "monitoring_interval": "0",
                            "multi_az": "false",
                            "name": "proddb",
                            "option_group_name": "default:postgres-9-6",
                            "parameter_group_name": "prod-20171031144555229200000002",
                            "password": "s3TNecEhE6B5paQAZEEDQZw2VWsDaqh5GmghCt22",
                            "port": "5432",
                            "publicly_accessible": "false",
                            "replicas.#": "0",
                            "replicate_source_db": "",
                            "resource_id": "db-WQRUFLK3KQXPOJB3RLDVCWHRUU",
                            "security_group_names.#": "0",
                            "skip_final_snapshot": "true",
                            "status": "available",
                            "storage_encrypted": "false",
                            "storage_type": "gp2",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "prod",
                            "tags.Owner": "user",
                            "timezone": "",
                            "username": "dbadmin",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2764153796": "sg-c679f5bb",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 2400000000000,
                                "delete": 2400000000000,
                                "update": 4800000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_db",
                "db_parameter_group"
            ],
            "outputs": {
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:prod-20171031144555229200000002"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod-20171031144555229200000002"
                }
            },
            "resources": {
                "aws_db_parameter_group.this": {
                    "type": "aws_db_parameter_group",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-20171031144555229200000002",
                        "attributes": {
                            "arn": "arn:aws:rds:us-west-2:251764077246:pg:prod-20171031144555229200000002",
                            "description": "Database parameter group for prod",
                            "family": "postgres9.6",
                            "id": "prod-20171031144555229200000002",
                            "name": "prod-20171031144555229200000002",
                            "name_prefix": "prod-",
                            "parameter.#": "0",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "prod",
                            "tags.Owner": "user"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_db",
                "db_subnet_group"
            ],
            "outputs": {
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:prod-20171031144555217100000001"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "prod-20171031144555217100000001"
                }
            },
            "resources": {
                "aws_db_subnet_group.this": {
                    "type": "aws_db_subnet_group",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-20171031144555217100000001",
                        "attributes": {
                            "arn": "arn:aws:rds:us-west-2:251764077246:subgrp:prod-20171031144555217100000001",
                            "description": "Database subnet group for prod",
                            "id": "prod-20171031144555217100000001",
                            "name": "prod-20171031144555217100000001",
                            "name_prefix": "prod-",
                            "subnet_ids.#": "2",
                            "subnet_ids.1933830846": "subnet-d6fa73b0",
                            "subnet_ids.2641598549": "subnet-3fd67877",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "prod",
                            "tags.Owner": "user"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWnht45ltbv898i6XBNI8ReIebI/vm88zs/PNmxgYA8urIWENXe/ZJZNZd26HzUtYxz40Jg+n1erH1dvXv7z7+Wx58b4SxZK/YiYXQw0LdTQTMyHlfdBM7LnPHKVIjkesYTa27TDwS9g4j8F0eFqtY2TibJKitrrzvMom0AazfBtsbFzY1nC8dnwPMIbNuGO9k9Si92SzSzwTK9fhgwjnn+m1C3ptqBViDt9jwOwsvN6/Xi4vkaGNxCUw+GIVif0Am5hh+dvll+J3kA1oZKutj30zrcputqqBP+DgANC2EaqUkTB/xOs9Uw2ce6zgu0ec9cnJLbbciL1h2QMhy9uQMjYy5diYlOTRQmVslDdBCPKICRZHJYd3qTGMBCY04AKx8R7O+5SQYbnFwGLoO5AD9CNub+2RLXOiWuuh71QavbxZk7Kx03emzOjREMpkFxK9PFYhmmxblVP3X8LJS5rxaTGfw0X0KObdn43LINNUkjtqvTGWMY8bqUbMp5rm6PH0WVlvy/iojy4wxTsWjz4yHYU1/Am26agt5WvDnN26ZyQ1mM7Dq1fwfrn6SczB9sSxuweoxRzKb6Geq29fHKnF4utvXpyohTpRxzV0w2WfMC9vkGKH54boJuZG4I4xlC69zvhXj8RUi0KS0nVJooZsnCeT0u0tbsee7kneILF8vv/DpOSdNZPOMjZijFPM4U0MG7ftM/67Cc6XVz+cPitrrWPiT+S/dkGYfssxepAEFSGDLqqlRwo2bcrGsNHj59ajDPLYtZuYsTPhXtdWT2XH8NHlGMo4gSKK3pbsK0EDMXZFOxjM2uM/LSjE1EpweHgIZzF8zkXZW2TgCB+qjGUOfaiKVYq5FwgVfPW0CTdx/3/jTVM5UttzE28CyAxfLeBiDMKF7cMMDx6kJ+VM/B0AAP//J0S7Lx8GAAA="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xVbW8TOxb+bqn/4eykotDF44bX7UCQSgssUksr0u4KAYo84zOJbz22sc+0yUX89yvPJKUQeu+HSuTDjO0855nz+njfWUJL/HThsYCmNaS9DCQaPUf1DErXWiXDYpQdvT169fL47N3B3vsPGUs7/j8MUTtbwDDf2WAbjPProA224j7Q0buoqcNKIlnNGrT0DGpt0MoGR1npHEUK0udxln23PA3SxhoDf2Urp7SdFvC01HQN0LlNOCcx53GGxsQqaE8b7Eg3uObh4F+i1FaUMs4YG8AbtBh0BS9XX0+HYySYuUjJMbh75CKZBdQuwN7/x/fYR+AKBFIlKuNa1T/zqp7mCj7DnTuA1cxB5gNGDBc4WTEVQKHFDF7cYCx2d6+w6YStNhUZiEj8yqWAik81GVnynWEeUOVGWsaiQfQw3EkhnHklCSNIq0DbSNIYOGm9R4K9KVpii7YBvoC2w612K+SMyMdCiEXb5L6zMrKMeeUa8X3LAxqUEbmvhhwNf5pbJ0M1y4NvfibsrbjsPs0GA3jvDLJBc650AO77jHynFrWsCEP3irligz6lwRkcbabnVRZvtBEJltOc2I0f6ZeskvQLtn4pqhgmkijosiWM+UI2Bp4/hw97R4dsAFUbyTXXAAUbQPoN8wf5fx7t5MPhw8ePdvNhvps/LaBZjFuPYe8So2vwRMZ46YJiOCe0qUknAb+0GCkWLJF4P0lBFNDX+uoMp11Dt5FfYiT+YPWH9N7oSvZDFlCxzks2gH1naz1tA/7YAid7p/8dbaZnIZynX0RfastkOyXnDPAIWUQCkUY23pCu/pVXztaiK7boZiB0LVu7gI2013o2uy072gsdnE1aAj441VYp+ozFRSRs0uCglaXBZQMy1jcSbG9vw4GzW5TGeooE5OBTFjCJ0Kcs7VIyV+MREz67nbwt53U5EL9R4/6myqm8bACvdcBLaQzTNXwEPofOul6e8qpR8PkZ0AwtA/jhmPM/ncWRb0ujK+DcY2ikTcXgXCrFU/F1haOkJ7exjevGAY2TitU6RXCl3p1K96mGvvNYHy80TrUGrwTpIs7sUkMTwSk23gUZFjAeH8I+BmLOo43RQMAvwOePd3aBW7w8xwWEKItHO7tPgFunMAI/x4VraSkh51qQicIHfSEJhXGVNEm582TK13AVBorXUFUg4EouIjx88ngHeGzLPyAT+6OzsRifjvadcUEqJw5HB2gvMIjj0RhNPdZTiyo5Lo7PRm9P4QDTJZ66UOy/G23evbo8eH0vY53oJSHbevXuYHL8evLm7enh3svJyclW0sLgHIk+O7n3rDIyRvi6VRT92VbSp6RawUozaYOB0QvIVpfG5teiqL8o+y273ymTnWo7h+Vv9AK+sn4ZUOmAFU2S4YRc944Jke7J+0tUjGaScqTrJG24Itn6pyRu3UAwSWVYI/hltTqKb/fZN/ZzkhhbtVUvE5xfYChdxLXUsUqBaGPoZs3YpHPdFPYIgU2JSqHqJm6qaRvy28lML2G/T15ETMs4a0m5Sws8wL+H8L5zQtvpupDeWQuP8w32VwAAAP//xwptf4MKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8jNRB+t5T/MGxOBYpsN8eh0r0rUu56AiQCVdsDnThUOd5JYuG1jWd8Tf498i5pC70+VSIPXo/zzeeZ8TfzJgbGwPJql7CFvnh2yWTWvdti9xKWsYTO5N1ps/hx8fb1L+9+PptfvG9EteSvmMnF0MJMHU3EREh5HzQRe+4zRymS4wFrmI3d9Bj4Jaycx2B6PG2WMTJxNknRprnzvMom0AqzfBts7FxYt3C8dHwPMITNuGW9lbRB78lml3giFq7HBxFOP9NLF/TS0EaIKXyPAbOz8Hp/ez28RIZNJK6BwReLSOx3sIoZ5r9dfil+B9mBRrba+li6cVV2tVYd/AEHB4B2E6FJGQnzR7zeM7XAuWAD3z3irE9ObrH1ROwNyx4IWd6GlLGTqfgkj2YqY6e8CUKQR0wwO6oJvEudYSQwoQMXiI33cF5SQob5GgOLXelB7qAMuL21R26YE7Va70qv0uDlzZKUjb2+M2VGj4ZQJjuT6OWxCtFku1E59f8lHL2kGa4W0ylcRI9i2v/ZuQwyjfW4o9YrYxnz8CHVielY0Bw9nj6r620NH/XRFaZ4y+LRS8atsIY/wTZutaV8bZizWxZGUjvTe3j1Ct7PFz+JKdhCHPt7gFZMof5m6rn69sWRms2+/ubFiZqpE3XcQr+7LAnz/AYp9nhuiG5i7gRuGUOV6HXGvwoSUysqSUrXNYkW6kvfnuB6EHMheYPE8vn+D5OSd9aMDZaxE0OMYgpvYli5dcn4bwGcz69+OH1W11bHxJ/IfemCMGXNMXqQBA0hg67tSo8Ua/woG8NKD0+tB/3nQa6rmLE34Z5im6eyY/jocgx1jkDKsSu2Zt8I2hFjX5sGg1l6/Ed+QowygsPDQziL4XOuLb1GBo7woclYB9CHplq1mPvmoIpvnjbaRu7/b65pqlvaFO7iTQCZ4asZXAxBuLB+mOHBg/SknIi/AwAA//+JoAqxGAYAAA=="
                },
                "railsapp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWnht45ltbv898i6XBNI8ReIebI/vm88zs9/MmxgYA8urIWENXe/ZJZNZd26HzUtYxz40Jg+n1erH1dvXv7z7+Wx58b4SxZK/YiYXQw0LdTQTMyHlfdBM7LnPHKVIjkesYTa27TDwS9g4j8F0eFqtY2TibJKitrrzvMom0AazfBtsbFzY1nC8dnwPMIbNuGO9k9Si92SzSzwTK9fhgwjnn+m1C3ptqBViDt9jwOwsvN6/Xi4vkaGNxCUw+GIVif0Am5hh+dvll+J3kA1oZKutj30zrcputqqBP+DgANC2EaqUkTB/xOs9Uw2ce6zgu0ec9cnJLbbciL1h2QMhy9uQMjaS2GzRpCSPFipjo7wJQpBHTLA4Kkm8S41hJDChAReIjfdw3qeEDMstBhZD34EcoB9xe2uPbJkT1VoPfafS6OXNmpSNnb4zZUaPhlAmu5Do5bEK0WTbqpy6/xJOXtKMT4v5HC6iRzHv/mxcBpmmmtxR642xjHncSDViPhU1R4+nz8p6W8dHfXSBKd6xePSR6Sis4U+wTUdtKV8b5uzWPSOpwXQeXr2C98vVT2IOtieO3T1ALeZQfgv1XH374kgtFl9/8+JELdSJOq6hGy77hHl5gxQ7PDdENzE3AneMocj0OuNfPRJTLQpJStcliRqycZ5MSre3uB1F3ZO8QWL5fP+HSck7a6ZGy9iIMU4xhzcxbNy2z/hvEZwvr344fVbWWsfEn8h/7YIw/ZZj9CAJKkIGXdqWHinYtCkbw0aPn1uPfZBH2W5ixs6Ee6qtnsqO4aPLMZR5AinHprcl+0rQQIxdaR4MZu3xHwkKMUkJDg8P4SyGz7m09hYZOMKHKmMZRB+qYpVi7huECr562oibuP+/+aapHKntuYk3AWSGrxZwMQbhwvZhhgcP0pNyJv4OAAD//y+OQiMgBgAA"
                },
                "vpn_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWnht45ltbv898i6XBNI8ReIebI/vm88zs/PNmxgYA8urIWENXe/ZJZNZd26HzUtYxz40Jg+n1erH1dvXv7z7+Wx58b4SxZK/YiYXQw0LdTQTMyHlfdBM7LnPHKVIjkesYTa27TDwS9g4j8F0eFqtY2TibJKitrrzvMom0AazfBtsbFzY1nC8dnwPMIbNuGO9k9Si92SzSzwTK9fhgwjnn+m1C3ptqBViDt9jwOwsvN6/Xi4vkaGNxCUw+GIVif0Am5hh+dvll+J3kA1oZKutj30zrcputqqBP+DgANC2EaqUkTB/xOs9Uw2ce6zgu0ec9cnJLbbciL1h2QMhy9uQMjYy5diYlOTRQmVslDdBCPKICRZHJYd3qTGMBCY04AKx8R7O+5SQYbnFwGLoO5AD9CNub+2RLXOiWuuh71QavbxZk7Kx03emzOjREMpkFxK9PFYhmmxblVP3X8LJS5rxaTGfw0X0KObdn43LINNUkjtqvTGWMY8bqUbMp5rm6PH0WVlvy/iojy4wxTsWjz4yHYU1/Am26agt5WvDnN26ZyQ1mM7Dq1fwfrn6SczB9sSxuweoxRzKb6Geq29fHKnF4utvXpyohTpRxzV0w2WfMC9vkGKH54boJuZG4I4xlC69zvhXj8RUi0KS0nVJooZsnCeT0u0tbsee7kneILF8vv/DpOSdNZPOMjZijFPM4U0MG7ftM/67Cc6XVz+cPitrrWPiT+S/dkGYfssxepAEFSGDLqqlRwo2bcrGsNHj59ajDPLYtZuYsTPhXtdWT2XH8NHlGMo4gSKK3pbsK0EDMXZFOxjM2uM/LSjE1EpweHgIZzF8zkXZW2TgCB+qjGUOfaiKVYq5FwgVfPW0CTdx/3/jTVM5UttzE28CyAxfLeBiDMKF7cMMDx6kJ+VM/B0AAP//J0S7Lx8GAAA="
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp_01",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht45ltbv898i6bHKR5qsQ+2B77m/HM7Pf5dQyMgeV1n7CGtvPsksmsW7fH5gWsYxcak/uzavXj6s2rX97+fL68fFeJYslfMZOLoYaFOp6JmZDyEDQTU+xzRymS4wFrmI3dtRj4BWycx2BaPKvWMTJxNknRrrr3vM4m0AazfBNsbFzY1nCydnwAGNJm3LPeS9qh92SzSzwTK9figwznn+m1C3ptaCfEHL7HgNlZeDXdXjavkGEXiUti8MUqEvseNjHD8rerL8XvIBvQyFZbH7tmHJXdbFUDf8DTp4B2F6FKGQnzB7yZItXAucMKvnvEWZ+e3mHLjpgMyx4IWd6llLGRKcfGpCSPFypjo7wJQpBHTLA4LjW8TY1hJDChAReIjfdw0aWEDMstBhZ914LsoRtwkzUhd8yJaq37rlVp8PJmTcrGVt+bMqNHQyiTXUj08kSFaLLdqZza/wYcvaQZrhbzOVxGj2Le/tm4DDKNLbkPrTfGMuZhItWI+djTHD2ePSnjXRsf9dEFpnjP4tFLxqWwhj8SbVxqS/nGMGe37hhJ9ab18PIlvFuufhJzsB1xbA8AtZhD+Rbqmfr2+bFaLL7+5vmpWqhTdVJD2191CfPyFim2eGGIbmNuBO4ZQ2HpTca/OiSmWpQgKd1g+OByDEUsNZR/3tkioum41FhDNs6TSeluF7cD5TuSt0gsn00HJiXvrBllmLERQxliDq9j2Lhtl/HfHLlYXv9w9qSMtY6JP9KetQvCdFuO0YMkqAgZdBE1PdLPcVI2ho0e2KAHleSB1JuYsTXhgNTVp0Y/aOBB/ypBPTG2RVoYzNrjPwwVYmQaHB0dwXkMn3MR/hYZOML7KmN5pt5XxSrNnPRDBV992gM4xv7/Xj9NZUm7jpt4G0Bm+GoBl0MSLmwfVvj0QXlSzsTfAQAA//880u48PgYAAA=="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "1120238115",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1120238115",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-prodapp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht45ltbv898i6bHKR5qsQ+2B77m/HM7Pf5dQyMgeV1n7CGtvPsksmsW7fH5gWsYxcak/uzavXj6s2rX97+fL68fFeJYslfMZOLoYaFOp6JmZDyEDQTU+xzRymS4wFrmI3dtRj4BWycx2BaPKvWMTJxNknRrrr3vM4m0AazfBNsbFzY1nCydnwAGNJm3LPeS9qh92SzSzwTK9figwznn+m1C3ptaCfEHL7HgNlZeDXdXjavkGEXiUti8MUqEvseNjHD8rerL8XvIBvQyFZbH7tmHJXdbFUDf8DTp4B2F6FKGQnzB7yZItXAucMKvnvEWZ+e3mHLjpgMyx4IWd6llLGRKcfGpCSPFypjo7wJQpBHTLA4LjW8TY1hJDChAReIjfdw0aWEDMstBhZ914LsoRtwkzUhd8yJaq37rlVp8PJmTcrGVt+bMqNHQyiTXUj08kSFaLLdqZza/wYcvaQZrhbzOVxGj2Le/tm4DDKNLbkPrTfGMuZhItWI+djTHD2ePSnjXRsf9dEFpnjP4tFLxqWwhj8SbVxqS/nGMGe37hhJ9ab18PIlvFuufhJzsB1xbA8AtZhD+Rbqmfr2+bFaLL7+5vmpWqhTdVJD2191CfPyFim2eGGIbmNuBO4ZQ2HpTca/OiSmWpQgKd1g+OByDEUsNZR/3tkioum41FhDNs6TSeluF7cD5TuSt0gsn00HJiXvrBllmLERQxliDq9j2Lhtl/HfHLlYXv9w9qSMtY6JP9KetQvCdFuO0YMkqAgZdBE1PdLPcVI2ho0e2KAHleSB1JuYsTXhgNTVp0Y/aOBB/ypBPTG2RVoYzNrjPwwVYmQaHB0dwXkMn3MR/hYZOML7KmN5pt5XxSrNnPRDBV992gM4xv7/Xj9NZUm7jpt4G0Bm+GoBl0MSLmwfVvj0QXlSzsTfAQAA//880u48PgYAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1cb0e48e98c1a056fa9e4147ae2ec75ff491abb0ff0ee3e5def12cf5423d07a3",
                        "attributes": {
                            "id": "1cb0e48e98c1a056fa9e4147ae2ec75ff491abb0ff0ee3e5def12cf5423d07a3",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-prodapp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-prodapp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "railsapp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "prod_railsapp_02",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZvgtFIdsG6dpUgMRBlKSgiqLI5527s/DaxjPb3P175F02OUjzVIl9sD32N+OZ2e/z6xgYA8ubfcIa2s6zSyazbt0Omxewil1oTN6fV8sfl29e/fL254vF1btKFEv+iplcDDXM1WwiJkLKQ9BEjLEvHKVIjnusYTZ222LgF7B2HoNp8bxaxcjE2SRF2+rB8yabQGvM8k2wsXFhU8PpyvEBoE+bccd6J2mL3pPNLvFELF2LjzKcfqZXLuiVoa0QU/geA2Zn4dV4e9m8RoZtJC6JwRfLSOz3sI4ZFr9dfyl+B9mARrba+tg1w6jseqMa+AOOjgDtNkKVMhLmD3g7RqqBc4cVfPeEsz47u8eWHTEalj0QsrxPKWMjU46NSUnOTlTGRnkThCCPmGA+KzW8TY1hJDChAReIjfdw2aWEDIsNBhb7rgW5h67HjdaI3DInqrXed61KvZc3K1I2tvrBlBk9GkKZ7Fyil6cqRJPtVuXU/jfg4CVNf7WYTuEqehTT9s/GZZBpaMlDaL02ljH3E6lGTIee5ujx/FkZ79v4pI8uMMU7Fk9eMiyFNfyRaMNSW8q3hjm7VcdIam9aDy9fwrvF8icxBdsRx/YAUIsplG+uTtS3z2dqPv/6m+dnaq7O1GkN7f66S5gXd0ixxUtDdBdzI3DHGApLbzP+1SEx1aIESekWwweXYyhiqaH8884WEY3HpcYasnGeTEr3u7jpKd+RvENieTIemJS8s2aQYcZG9GWIKbyOYe02XcZ/c+RycfPD+bMy1jom/kh7Vi4I0204Rg+SoCJk0EXU9EQ/h0nZGNa6Z4PuVZJ7Uq9jxtYEOZuPpK4+NfpBAw/6VwnaE2NbpIXBrDz+w1AhBqbB8fExXMTwORfhb5CBI7yvMpZn6n1VrNLMUT9U8NWnPYBD7P/v9dNUlrTtuIl3AWSGr+Zw1SfhwuZxhUePypNyIv4OAAD//z4exgc+BgAA"
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "1943569377",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1943569377",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-prodapp-02.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirAgTZvgtFIdsG6dpUgMRBlKSgiqLI5527s/DaxjPb3P175F02OUjzVIl9sD32N+OZ2e/z6xgYA8ubfcIa2s6zSyazbt0Omxewil1oTN6fV8sfl29e/fL254vF1btKFEv+iplcDDXM1WwiJkLKQ9BEjLEvHKVIjnusYTZ222LgF7B2HoNp8bxaxcjE2SRF2+rB8yabQGvM8k2wsXFhU8PpyvEBoE+bccd6J2mL3pPNLvFELF2LjzKcfqZXLuiVoa0QU/geA2Zn4dV4e9m8RoZtJC6JwRfLSOz3sI4ZFr9dfyl+B9mARrba+tg1w6jseqMa+AOOjgDtNkKVMhLmD3g7RqqBc4cVfPeEsz47u8eWHTEalj0QsrxPKWMjU46NSUnOTlTGRnkThCCPmGA+KzW8TY1hJDChAReIjfdw2aWEDIsNBhb7rgW5h67HjdaI3DInqrXed61KvZc3K1I2tvrBlBk9GkKZ7Fyil6cqRJPtVuXU/jfg4CVNf7WYTuEqehTT9s/GZZBpaMlDaL02ljH3E6lGTIee5ujx/FkZ79v4pI8uMMU7Fk9eMiyFNfyRaMNSW8q3hjm7VcdIam9aDy9fwrvF8icxBdsRx/YAUIsplG+uTtS3z2dqPv/6m+dnaq7O1GkN7f66S5gXd0ixxUtDdBdzI3DHGApLbzP+1SEx1aIESekWwweXYyhiqaH8884WEY3HpcYasnGeTEr3u7jpKd+RvENieTIemJS8s2aQYcZG9GWIKbyOYe02XcZ/c+RycfPD+bMy1jom/kh7Vi4I0204Rg+SoCJk0EXU9EQ/h0nZGNa6Z4PuVZJ7Uq9jxtYEOZuPpK4+NfpBAw/6VwnaE2NbpIXBrDz+w1AhBqbB8fExXMTwORfhb5CBI7yvMpZn6n1VrNLMUT9U8NWnPYBD7P/v9dNUlrTtuIl3AWSGr+Zw1SfhwuZxhUePypNyIv4OAAD//z4exgc+BgAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/8xYe3PbuBH/HzP5DhtKE9lOQNrX612jnO6q2ErsiV+VlGszcUYDkSsSY4rgAaBt1efv3lmQlCjZbnLJ9Kb6QySBxQLYx28f+yqzmFk+XuTYhXmRWpkLbYO5vMHoFUxVkUVCL3reydHJ4PXZ+9OD/vCDx+iL/4raSJV1Yc/ffcKeMM6bRE9YzftAmlwZaR2tsFaEyRwz+wpmMsVMzLHnTZWyxmqR+ybxVivHWmRmhpoPslBFMou78ONU2gaBO7bFGxvccJNgmppQy9w+YSdyjvdO2HoaTGUWTIVJGGvBW8xQyxBe17vT4AgtJMpYOhhsnShj0wXMlIb+P0fb7CPwCAK0YRCmqojKfz+cxX4En+DZM8AwUeDlGg3qK5zUnLpgdYEe/PzI4uDlyyUtjbD6I7QpGLR8eSSNEZ8pjXOR8d09X2PkpyJjzKSIOezt0h3e55GwaEBkEcjMWJGmcF7kOVrox5hZtijmwBdQOLr6q6ZMrM1NNwgWxdzP3apUTI0fqnmw+uQaUxQGeR7ucUz5j36mhA4TX+fzTYblKi7c1qzVgqFKkbXml5HUwPNSJCvWwUyEFrV7GD9irVKmWqXYa9P/UoyPrgmIzLc3lj26SfnKQmEf4Fa+BqHRE2GtltPCovEXYp7CTz/Bh/7JMWtBWBir5g2CLmsB/fb87/y/fb/r7+395a/fv/T3/Jf+j12YL0ZFjrp/jUbN8VwYc610xPDGYkZWOtH4W4HGmi4jJnk+wexKapWRs3Qh1yoqQnKiepru2IXKFpaDGDuLLwy/RmP5d/WEyPNUhqL0Qo0Rc7dgLdhX2UzGhcZ1Eznvjw97bfrvBiq3D0hnKjMmitgqlQI34Bm0EJBPm0fEWT78UGWzwBlD4JxEP2LT3rdyb8ivIT6PmYWxOCfPwkxMU6wMlLHS0GBnZwcOVNaxJNwYLVgFF55GQqkLj75ImLX7GKL3vg3/6stXHvOnouBrYWRYmxFhTZG/ALJFqdHAtdKXMoshlhYqbV1Lm0CoMqtVyjXmCnKVF6mwGFUAamUWG1ioAkyiijQCjKRlb4/Gk9Fg+Otg2OvE0v6dtB5L0mFD6R22f3Y6Hp4dT4aD87Oe175dLbvr1n7Z2Nxjh2ej8Wn/ZNDz2ltLmOSzbY8dnJ30j07vz0U0dzqa9I/HE5od9bzKetq3qzV3L8rBF5VsNiarUY/uzL/kx1rwYSkSsq4MMSJrIumATdAgG40OJ+8GHyZvjo4Hvc6m45UKCCJhRTVcjfjGJIGMJtqIDjt/f34+GN9fvXLb6rXDRu8PziY1vSkiBfwQeAH1/HDwj8n5u7ejXgdzTGvMd8bQ3H8N4TvspP+vyXAwHh4NRr0fdhm9fpiMjgeD88n46GRAY6wFR3V0uIwNyBlkytYRAyM2KzLnrfXQxJHdMnD0vfYOA0hVKNImQa/TYeCCdX4Zg8ygXV/gFUTKIaHO58B/gzYR/P772mKvfdv4vIP2LT08BhCpDBnAR+D/Bq/dIPLgE3GheFcHO76AdT7sjm47RKsXwcgFaatFSE61uqSm2UkZwumOcgYfoW21RAM8RWg3RAqfXpGxlIhfIpbXeB/rRbdeGqwtbFK5g5Bftze148TnzuP7fmNJp2nKHTdenvceBwaAqcFHlm4yqSjgTf/oeHAAR6ejcf/4eHx0dgrrFJ/j0ZQCR/Ausovswjowr3i/Pjsbj8bD/vlTWE6NBoMuBFdCB6mKy4yMy0xargqbF9ZPVUyMPPi5yhLmykblRjfSwh7Zm3QqbrWAwIFRoHqO0CoJVAaotdJNix/ZYjZjlSU+nFI9YFXfnpatudLSNcpM2IIqLKgZBFopC1u5xivMrClPb+A6kSlCYchmCCi2WRhBYOcuZx5khvKHa4REXCGIDEajQ3iHC+YM+SnwGbSb0Naw4XYDg8CYhF/iIsYMuAVtBPApfL/78of7HPg5aXwmaf8xGuu27IchGgNbqVL5NnNO0Ntl5dkpAa9gYGvLTT1/vr3Nln6DhsJWk41VsBZ+KodYO7GDU2MS4NlYQWdktQztoTL2HS72E3R+3stUZ50TA3KxQme99i9Ldy9HoNeD3Qd8fFS4Qz0trXyqUVzec7TS7HdWv4tsDRoS1AjSgKB0aJrivIzlNqlTIFIAXOICxMMSaHKjWFZHMBFFYBNpnPTyYprK0LGhKehU0aGMFR0oDGoC57fSHotp17vnwpSTt2+b2r7z82Ja4vcKKUvXc9hc28CQspGvMoI1pVJ8S8mX5soitG+bKcn/me4qvTmZrpRGGn0rS3l0Ny/wmBJjLTKXh3xGY9ChvEtbmlnfMtaqyF0Aoa9mllZFkke1d7RWKsJcRUWKhrVIE2GqMlzCXyxtUkw3YK+JgMZGqZz6tHKzUghVhM2qwASrsiCo9gzK9Z/Z+krd5EVepLJiz/Xe7uXX70mrv+qysbRfv2ssLZO5pRLIAH9DkQuzmdIhwm5j4pjFywnWrlyk5AGpNBZ+h1hjTsGM7kGha4NqoxFQ3va/c1pLLz/LsUndNKchnacMWlWN96a/Px4MJ7G0pXdT1rfuHcutyiKPI3TCVBgDt+56VDw7WOj9DF77tttdsrrzAO46DosICg3i3EBUTKUqzAtI5SWS84rwUsR0IBdYf2Fhoq4z4MmwOmFV4zyoUeJ9gHmqFrCldFV/btd1+z5RrOGYU0dULmgWwzy/IlaHmOaooZ9KYVgt+I6gT7e0UyYDgU+l4iTXigpWUkaJHSvCXoeSAXj2DO7VECWjMn26z6zsP+QLSCRqQXUNwcxWIsLLxTYLcwr7f8i0jbQYVMyrboFjXfZuHukcrCjKQDLPlRZapguqhsu4NhOhhUhqDG26eLyptNG5ajSu6mrxD7SuWGupWdTWdQRD1LbX3qotNHStG8i1zMqmJc27JuUMvHY9UBUpy0WoLcSYoRYuuNXl8x1wLtJUXfMoM1ykllOxbMjI12rlO6+s8jXZdboApyyYkpdRKKA4xVpr/ut6Ml2H/8V0wVMlIp4Lm3Th4yM1aiqnAdEGV5hFSk/o/cXXYdzcELdPVVVc5jGT/bPTNz3vYXOoSmo6sx8F9+7hrTyl4t2pRdtgTgI3GAGXwDV0TGtr4+r+zvan1sXei69E7upWrYf2Zo81uCp8XM0aK/R6Jb/Ed1fKA6+bYp2Ds9PB0186zBU1VL+vfOBLmxQl7Fd49yVwd4913f4RYYKO3f9m802urLW5zaqHshJUq8S+NeB7DHxbeg5czz5/wWDn2xqLZdPyz+snBsbVQ0lhIydpDc/3YOgOQTHvXuv02b3rcf6E/ScAAP//f9THyJYaAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "ecdee5f0490d83fe83ec0256011641958d9dcf51e32dec25926706d7201955b1",
                        "attributes": {
                            "id": "ecdee5f0490d83fe83ec0256011641958d9dcf51e32dec25926706d7201955b1",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-prodapp-02.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-prodapp-02.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "railsapp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "pulp",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/8xYe3PbuBH/HzP5DhtKE9lOQNrX612jnO6q2ErsiV+VlGszcUYDkSsSY4rgAaBt1efv3lmQlCjZbnLJ9Kb6QySBxQLYx28f+yqzmFk+XuTYhXmRWpkLbYO5vMHoFUxVkUVCL3reydHJ4PXZ+9OD/vCDx+iL/4raSJV1Yc/ffcKeMM6bRE9YzftAmlwZaR2tsFaEyRwz+wpmMsVMzLHnTZWyxmqR+ybxVivHWmRmhpoPslBFMou78ONU2gaBO7bFGxvccJNgmppQy9w+YSdyjvdO2HoaTGUWTIVJGGvBW8xQyxBe17vT4AgtJMpYOhhsnShj0wXMlIb+P0fb7CPwCAK0YRCmqojKfz+cxX4En+DZM8AwUeDlGg3qK5zUnLpgdYEe/PzI4uDlyyUtjbD6I7QpGLR8eSSNEZ8pjXOR8d09X2PkpyJjzKSIOezt0h3e55GwaEBkEcjMWJGmcF7kOVrox5hZtijmwBdQOLr6q6ZMrM1NNwgWxdzP3apUTI0fqnmw+uQaUxQGeR7ucUz5j36mhA4TX+fzTYblKi7c1qzVgqFKkbXml5HUwPNSJCvWwUyEFrV7GD9irVKmWqXYa9P/UoyPrgmIzLc3lj26SfnKQmEf4Fa+BqHRE2GtltPCovEXYp7CTz/Bh/7JMWtBWBir5g2CLmsB/fb87/y/fb/r7+395a/fv/T3/Jf+j12YL0ZFjrp/jUbN8VwYc610xPDGYkZWOtH4W4HGmi4jJnk+wexKapWRs3Qh1yoqQnKiepru2IXKFpaDGDuLLwy/RmP5d/WEyPNUhqL0Qo0Rc7dgLdhX2UzGhcZ1Eznvjw97bfrvBiq3D0hnKjMmitgqlQI34Bm0EJBPm0fEWT78UGWzwBlD4JxEP2LT3rdyb8ivIT6PmYWxOCfPwkxMU6wMlLHS0GBnZwcOVNaxJNwYLVgFF55GQqkLj75ImLX7GKL3vg3/6stXHvOnouBrYWRYmxFhTZG/ALJFqdHAtdKXMoshlhYqbV1Lm0CoMqtVyjXmCnKVF6mwGFUAamUWG1ioAkyiijQCjKRlb4/Gk9Fg+Otg2OvE0v6dtB5L0mFD6R22f3Y6Hp4dT4aD87Oe175dLbvr1n7Z2Nxjh2ej8Wn/ZNDz2ltLmOSzbY8dnJ30j07vz0U0dzqa9I/HE5od9bzKetq3qzV3L8rBF5VsNiarUY/uzL/kx1rwYSkSsq4MMSJrIumATdAgG40OJ+8GHyZvjo4Hvc6m45UKCCJhRTVcjfjGJIGMJtqIDjt/f34+GN9fvXLb6rXDRu8PziY1vSkiBfwQeAH1/HDwj8n5u7ejXgdzTGvMd8bQ3H8N4TvspP+vyXAwHh4NRr0fdhm9fpiMjgeD88n46GRAY6wFR3V0uIwNyBlkytYRAyM2KzLnrfXQxJHdMnD0vfYOA0hVKNImQa/TYeCCdX4Zg8ygXV/gFUTKIaHO58B/gzYR/P772mKvfdv4vIP2LT08BhCpDBnAR+D/Bq/dIPLgE3GheFcHO76AdT7sjm47RKsXwcgFaatFSE61uqSm2UkZwumOcgYfoW21RAM8RWg3RAqfXpGxlIhfIpbXeB/rRbdeGqwtbFK5g5Bftze148TnzuP7fmNJp2nKHTdenvceBwaAqcFHlm4yqSjgTf/oeHAAR6ejcf/4eHx0dgrrFJ/j0ZQCR/Ausovswjowr3i/Pjsbj8bD/vlTWE6NBoMuBFdCB6mKy4yMy0xargqbF9ZPVUyMPPi5yhLmykblRjfSwh7Zm3QqbrWAwIFRoHqO0CoJVAaotdJNix/ZYjZjlSU+nFI9YFXfnpatudLSNcpM2IIqLKgZBFopC1u5xivMrClPb+A6kSlCYchmCCi2WRhBYOcuZx5khvKHa4REXCGIDEajQ3iHC+YM+SnwGbSb0Naw4XYDg8CYhF/iIsYMuAVtBPApfL/78of7HPg5aXwmaf8xGuu27IchGgNbqVL5NnNO0Ntl5dkpAa9gYGvLTT1/vr3Nln6DhsJWk41VsBZ+KodYO7GDU2MS4NlYQWdktQztoTL2HS72E3R+3stUZ50TA3KxQme99i9Ldy9HoNeD3Qd8fFS4Qz0trXyqUVzec7TS7HdWv4tsDRoS1AjSgKB0aJrivIzlNqlTIFIAXOICxMMSaHKjWFZHMBFFYBNpnPTyYprK0LGhKehU0aGMFR0oDGoC57fSHotp17vnwpSTt2+b2r7z82Ja4vcKKUvXc9hc28CQspGvMoI1pVJ8S8mX5soitG+bKcn/me4qvTmZrpRGGn0rS3l0Ny/wmBJjLTKXh3xGY9ChvEtbmlnfMtaqyF0Aoa9mllZFkke1d7RWKsJcRUWKhrVIE2GqMlzCXyxtUkw3YK+JgMZGqZz6tHKzUghVhM2qwASrsiCo9gzK9Z/Z+krd5EVepLJiz/Xe7uXX70mrv+qysbRfv2ssLZO5pRLIAH9DkQuzmdIhwm5j4pjFywnWrlyk5AGpNBZ+h1hjTsGM7kGha4NqoxFQ3va/c1pLLz/LsUndNKchnacMWlWN96a/Px4MJ7G0pXdT1rfuHcutyiKPI3TCVBgDt+56VDw7WOj9DF77tttdsrrzAO46DosICg3i3EBUTKUqzAtI5SWS84rwUsR0IBdYf2Fhoq4z4MmwOmFV4zyoUeJ9gHmqFrCldFV/btd1+z5RrOGYU0dULmgWwzy/IlaHmOaooZ9KYVgt+I6gT7e0UyYDgU+l4iTXigpWUkaJHSvCXoeSAXj2DO7VECWjMn26z6zsP+QLSCRqQXUNwcxWIsLLxTYLcwr7f8i0jbQYVMyrboFjXfZuHukcrCjKQDLPlRZapguqhsu4NhOhhUhqDG26eLyptNG5ajSu6mrxD7SuWGupWdTWdQRD1LbX3qotNHStG8i1zMqmJc27JuUMvHY9UBUpy0WoLcSYoRYuuNXl8x1wLtJUXfMoM1ykllOxbMjI12rlO6+s8jXZdboApyyYkpdRKKA4xVpr/ut6Ml2H/8V0wVMlIp4Lm3Th4yM1aiqnAdEGV5hFSk/o/cXXYdzcELdPVVVc5jGT/bPTNz3vYXOoSmo6sx8F9+7hrTyl4t2pRdtgTgI3GAGXwDV0TGtr4+r+zvan1sXei69E7upWrYf2Zo81uCp8XM0aK/R6Jb/Ed1fKA6+bYp2Ds9PB0186zBU1VL+vfOBLmxQl7Fd49yVwd4913f4RYYKO3f9m802urLW5zaqHshJUq8S+NeB7DHxbeg5czz5/wWDn2xqLZdPyz+snBsbVQ0lhIydpDc/3YOgOQTHvXuv02b3rcf6E/ScAAP//f9THyJYaAAA="
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_db",
                "db_instance"
            ],
            "outputs": {
                "this_db_instance_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com"
                },
                "this_db_instance_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:db:stage"
                },
                "this_db_instance_availability_zone": {
                    "sensitive": false,
                    "type": "string",
                    "value": "us-west-2a"
                },
                "this_db_instance_endpoint": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432"
                },
                "this_db_instance_hosted_zone_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "Z1PVIF0B656C1W"
                },
                "this_db_instance_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage"
                },
                "this_db_instance_name": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stagedb"
                },
                "this_db_instance_password": {
                    "sensitive": false,
                    "type": "string",
                    "value": "YourPwdShouldBeLongAndSecure!"
                },
                "this_db_instance_port": {
                    "sensitive": false,
                    "type": "string",
                    "value": "5432"
                },
                "this_db_instance_resource_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "db-ZUVMPDMZHZGSPTV5ONCOFAW7H4"
                },
                "this_db_instance_status": {
                    "sensitive": false,
                    "type": "string",
                    "value": "available"
                },
                "this_db_instance_username": {
                    "sensitive": false,
                    "type": "string",
                    "value": "dbadmin"
                }
            },
            "resources": {
                "aws_db_instance.this": {
                    "type": "aws_db_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "stage",
                        "attributes": {
                            "address": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com",
                            "allocated_storage": "5",
                            "allow_major_version_upgrade": "false",
                            "apply_immediately": "false",
                            "arn": "arn:aws:rds:us-west-2:251764077246:db:stage",
                            "auto_minor_version_upgrade": "true",
                            "availability_zone": "us-west-2a",
                            "backup_retention_period": "1",
                            "backup_window": "03:00-06:00",
                            "ca_cert_identifier": "rds-ca-2015",
                            "copy_tags_to_snapshot": "false",
                            "db_subnet_group_name": "stage-20171026215614478500000002",
                            "endpoint": "stage.clxtbeltidcx.us-west-2.rds.amazonaws.com:5432",
                            "engine": "postgres",
                            "engine_version": "9.6.2",
                            "hosted_zone_id": "Z1PVIF0B656C1W",
                            "iam_database_authentication_enabled": "false",
                            "id": "stage",
                            "identifier": "stage",
                            "instance_class": "db.t2.small",
                            "iops": "0",
                            "kms_key_id": "",
                            "license_model": "postgresql-license",
                            "maintenance_window": "mon:00:00-mon:03:00",
                            "monitoring_interval": "0",
                            "multi_az": "false",
                            "name": "stagedb",
                            "option_group_name": "default:postgres-9-6",
                            "parameter_group_name": "stage-20171026215614465400000001",
                            "password": "YourPwdShouldBeLongAndSecure!",
                            "port": "5432",
                            "publicly_accessible": "false",
                            "replicas.#": "0",
                            "replicate_source_db": "",
                            "resource_id": "db-ZUVMPDMZHZGSPTV5ONCOFAW7H4",
                            "security_group_names.#": "0",
                            "skip_final_snapshot": "true",
                            "status": "available",
                            "storage_encrypted": "false",
                            "storage_type": "gp2",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "stage",
                            "tags.Owner": "user",
                            "timezone": "",
                            "username": "dbadmin",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2973286420": "sg-632e9a1e",
                            "vpc_security_group_ids.3206654627": "sg-ecf3b291"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 2400000000000,
                                "delete": 2400000000000,
                                "update": 4800000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_db",
                "db_parameter_group"
            ],
            "outputs": {
                "this_db_parameter_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:pg:stage-20171026215614465400000001"
                },
                "this_db_parameter_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171026215614465400000001"
                }
            },
            "resources": {
                "aws_db_parameter_group.this": {
                    "type": "aws_db_parameter_group",
                    "depends_on": [],
                    "primary": {
                        "id": "stage-20171026215614465400000001",
                        "attributes": {
                            "arn": "arn:aws:rds:us-west-2:251764077246:pg:stage-20171026215614465400000001",
                            "description": "Database parameter group for stage",
                            "family": "postgres9.6",
                            "id": "stage-20171026215614465400000001",
                            "name": "stage-20171026215614465400000001",
                            "name_prefix": "stage-",
                            "parameter.#": "0",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "stage",
                            "tags.Owner": "user"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_db",
                "db_subnet_group"
            ],
            "outputs": {
                "this_db_subnet_group_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:rds:us-west-2:251764077246:subgrp:stage-20171026215614478500000002"
                },
                "this_db_subnet_group_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "stage-20171026215614478500000002"
                }
            },
            "resources": {
                "aws_db_subnet_group.this": {
                    "type": "aws_db_subnet_group",
                    "depends_on": [],
                    "primary": {
                        "id": "stage-20171026215614478500000002",
                        "attributes": {
                            "arn": "arn:aws:rds:us-west-2:251764077246:subgrp:stage-20171026215614478500000002",
                            "description": "Database subnet group for stage",
                            "id": "stage-20171026215614478500000002",
                            "name": "stage-20171026215614478500000002",
                            "name_prefix": "stage-",
                            "subnet_ids.#": "2",
                            "subnet_ids.1933830846": "subnet-d6fa73b0",
                            "subnet_ids.2641598549": "subnet-3fd67877",
                            "tags.%": "3",
                            "tags.Environment": "dev",
                            "tags.Name": "stage",
                            "tags.Owner": "user"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_fusion_01",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht4xk3d/8eeZdLDtI8VWIfbI/9zeeZ2W/8OgbGwPJ6l7CFvnh2yWTWvdti9wKWsYTO5N1Zs/hx8ebVL29/Pp9fvmtEteSvmMnF0MJMHU/EREh5CJqIPfe5oxTJ8YA1zMZuegz8AlbOYzA9njXLGJk4m6Ro09x7XmcTaIVZvgk2di6sWzhZOj4ADGEzbllvJW3Qe7LZJZ6IhevxQYTTz/TSBb00tBFiCt9jwOwsvNrfXjevkGETiWtg8MUiEvsdrGKG+W9XX4rfQXagka22PpZuHJVdrVUHf8DTp4B2E6FJGQnzB7zZM7XAuWAD3z3irE9P77B1R+wNyx4IWd6FlLGTq1LTksczlbFT3gQhyCMmmB3XFN6mzjASmNCBC8TGe7goKSHDfI2Bxa70IHdQBtze2iM3zIlarXelV2nw8mZJysZe35syo0dDKJOdSfTyRIVost2onPr/Eo5e0gxXi+kULqNHMe3/7FwGmcaK3FPrlbGMeZhIdWI6ljRHj2dP6nhXxUd9dIUp3rJ49JJxKazhj7CNS20p3xjm7JaFkdTO9B5evoR388VPYgq2EMf+ANCKKdRvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljHUv3mT8a+CxNSKSpLSDYYPLsdQe6UFYrPG/UlNr4VRBXd7uB6kXkjeIrF8tj8wKXlnzdh+GTsxxC+m8DqGlVuXjP8Wx8X8+oezJ3VsdUz8kbosXRCmrDlGD5KgIWTQtZnpkUKOk7IxrPQgAz10Rx7FHDP25lDNzaeyH1QOUo5dsTX7RtCOGPvaUhjM0uM/0hRilBgcHR3BeQyfc234NTJwhPdNxvo8vW+qVYu5bxyq+ObTHr6R+/979TTVJW0Kd/E2gMzw1QwuhyBcWD/M8OmD9KSciL8DAAD//zkfTQs2BgAA"
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV32/UuhJ+t9T/YW62otCL4y4/bwOLVFrgIrW0Ytt7hQCtnHiy61PHNvak3T2I//3IyW4pLD3noRJ5SGznm/H4m5nP+84SWuKnC48FNK0h7WUg0eg5qmdQutYqGRaj7Ojt0auXx2fvDvbef8hYmvH/YYja2QKG+c4G22CcXwdtsJXvAx29i5o6rCSS1axBS8+g1gatbHCUlc5RpCB9HmfZd8vTIG2sMfBXtnJK22kBT0tN1wBd2IRzEnMeZ2hMrIL2tMGOdINrEQ7+JUptRSnjjLEBvEGLQVfwcrV7WhwjwcxFSoHB3SMXySygdgH2/j++xz4CVyCQKlEZ16r+nVf1NFfwGe7cAaxmDjIfMGK4wMnKUwEUWszgxQ3GYnf3CptW2GpSkYGIxK9CCqj4VJORJd8Z5gFVbqRlLBpED8OddIQzryRhBGkVaBtJGgMnrfdIsDdFS2zRNsAX0Ha41WyFnBH5WAixaJvcd1ZGljGvXCO+T3lAgzIi99WQo+FPc+tkqGZ58M3PDnsrLrut2WAA751BNmjOlQ7Afc/Id9eilhVh6D4xV2zQUxqcwdFmel+xeKONSLCc5sRu3KQfskrSL7z1Q1HFMJFEQZctYcwXsjHw/Dl82Ds6ZAOo2kiuuQYo2ADSM8wf5P95tJMPhw8fP9rNh/lu/rSAZjFuPYa9S4yuwRMZ46ULiuGc0KYinQT80mKkWLDkxPsJ2gsdnE29UkAkOcXVn3S8AvoquFrDaVfqbeSXGIk/WP2Q3htdyb79AirWxc8GsO9sradtwB+L42Tv9L+jzfQuhPP0C15KbZlsp+ScAR4hi0ggUjPHG4jsP3nlbC26MhBdd4SumGsXsJH2WjVnt/V+jTnwwam2SqfPWFxEwia1FFpZGlyWJmN9icH29jYcOLtFqeGnSEAOPmUBkzx9ytIskblqnJjw2e2Eb9nJy1b5jer3N1lO6WUDeK0DXkpjmK7hI/A5dNb1cpVXjYLPz4BmaBnAD8uc/+ksjnxbGl0B5x5DI21KBudSKZ6SryscJaW5jW1cNw5onFSs1ukEV7re6XdPNfSVx/rzQuNUa/BKqi7izC7VNTk4xca7IMMCxuND2MdAzHm0MRoI+AX4/PHOLnCLl+e4gBBl8Whn9wlw6xRG4Oe4cC0txeVcCzJR+KAvJKEwrpImaXqeTPkarsJA8RqqCgRcyUWEh08e7wCPbfkHZGJ/dDYW49PRvjMuSOXE4egA7QUGcTwao6nHempRpcDF8dno7SkcYLreUxWK/XejzbtX1wqv72Wsk8MkcVuv3h1Mjl9P3rw9Pdx7OTk52UoqGZwj0bOTe88qI2OEr1tF0a9tJeVKehasNJM2GBi9gGx1nWx+LYr6i7LfsvudMtmptnNYPqMX8JX1w4BKB6xokgwn5LpvTIh0g95fomI0k8SRrpO04crJ1j+RuHWDg0lKw5qDX2arc/HtPvvGfiaJsVVZ9TLB+QWG0kVco45VCkQbQ9drxiad67qwRwhsSlQKVddxU03bkN9OZnoJ+33yImIaxllLyl1a4AH+PYT3XRDaTteF9M7a8TjfYH8FAAD//1PNwaedCgAA"
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht4xk3d/8eeZdLDtI8VWIfvB77m88zo2/mdQyMgeX1LmELffHsksmse7fF7gUsYwmdybuzZvHj4s2rX97+fD6/fNeIaslfMZOLoYWZOp6IiZDyEDQRe+5zRymS4wFrmI3d9Bj4Baycx2B6PGuWMTJxNknRprn3vM4m0AqzfBNs7FxYt3CydHwAGMJm3LLeStqg92SzSzwRC9fjgwinn+mlC3ppaCPEFL7HgNlZeLV/vR5eIcMmEtfA4ItFJPY7WMUM89+uvhS/g+xAI1ttfSzduCq7WqsO/oCnTwHtJkKTMhLmD3izZ2qBc8EGvnvEWZ+e3mHridgblj0QsrwLKWMnU/FJHs9Uxk55E4Qgj5hgdlwTeJs6w0hgQgcuEBvv4aKkhAzzNQYWu9KD3EEZcHtrj9wwJ2q13pVepcHLmyUpG3t9b8qMHg2hTHYm0csTFaLJdqNy6v9LOHpJMzwtplO4jB7FtP+zcxlkGutxT61XxjLm4UeqE9OxoDl6PHtS17saPuqjK0zxlsWjj4xbYQ1/hG3cakv5xjBntyyMpHam9/DyJbybL34SU7CFOPYHgFZMoX4z9Ux9+/xYzWZff/P8VM3UqTppod9dlYR5fosUe7wwRLcxdwK3jKFK9CbjXwWJqRWVJKUbDB9cjqF2SgvEZo37m5peC1UDdye4HmReSN4isXy2vzApeWfN2HoZOzFEL6bwOoaVW5eM/5bGxfz6h7MndW11TPyRqixdEKasOUYPkqAhZNC1kemRMo4/ZWNY6UEEeuiMPAh5FTP2JhxouflU9oO6QcqxK7Zm3wjaEWNf2wmDWXr8R5hCjAKDo6MjOI/hc67NvkYGjvC+yVhH0/umWrWY+7ahim8+beiN3P/fxNNUt7Qp3MXbADLDVzO4HIJwYf0ww6cP0pNyIv4OAAD//3Vwv1UyBgAA"
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "2661300583",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2661300583",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-fusion-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: fusion\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht4xk3d/8eeZdLDtI8VWIfbI/9zeeZ2W/8OgbGwPJ6l7CFvnh2yWTWvdti9wKWsYTO5N1Zs/hx8ebVL29/Pp9fvmtEteSvmMnF0MJMHU/EREh5CJqIPfe5oxTJ8YA1zMZuegz8AlbOYzA9njXLGJk4m6Ro09x7XmcTaIVZvgk2di6sWzhZOj4ADGEzbllvJW3Qe7LZJZ6IhevxQYTTz/TSBb00tBFiCt9jwOwsvNrfXjevkGETiWtg8MUiEvsdrGKG+W9XX4rfQXagka22PpZuHJVdrVUHf8DTp4B2E6FJGQnzB7zZM7XAuWAD3z3irE9P77B1R+wNyx4IWd6FlLGTq1LTksczlbFT3gQhyCMmmB3XFN6mzjASmNCBC8TGe7goKSHDfI2Bxa70IHdQBtze2iM3zIlarXelV2nw8mZJysZe35syo0dDKJOdSfTyRIVost2onPr/Eo5e0gxXi+kULqNHMe3/7FwGmcaK3FPrlbGMeZhIdWI6ljRHj2dP6nhXxUd9dIUp3rJ49JJxKazhj7CNS20p3xjm7JaFkdTO9B5evoR388VPYgq2EMf+ANCKKdRvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljHUv3mT8a+CxNSKSpLSDYYPLsdQe6UFYrPG/UlNr4VRBXd7uB6kXkjeIrF8tj8wKXlnzdh+GTsxxC+m8DqGlVuXjP8Wx8X8+oezJ3VsdUz8kbosXRCmrDlGD5KgIWTQtZnpkUKOk7IxrPQgAz10Rx7FHDP25lDNzaeyH1QOUo5dsTX7RtCOGPvaUhjM0uM/0hRilBgcHR3BeQyfc234NTJwhPdNxvo8vW+qVYu5bxyq+ObTHr6R+/979TTVJW0Kd/E2gMzw1QwuhyBcWD/M8OmD9KSciL8DAAD//zkfTQs2BgAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2588223928",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2588223928",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "164257317",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "164257317",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV32/UuhJ+t9T/YW62otCL4y4/bwOLVFrgIrW0Ytt7hQCtnHiy61PHNvak3T2I//3IyW4pLD3noRJ5SGznm/H4m5nP+84SWuKnC48FNK0h7WUg0eg5qmdQutYqGRaj7Ojt0auXx2fvDvbef8hYmvH/YYja2QKG+c4G22CcXwdtsJXvAx29i5o6rCSS1axBS8+g1gatbHCUlc5RpCB9HmfZd8vTIG2sMfBXtnJK22kBT0tN1wBd2IRzEnMeZ2hMrIL2tMGOdINrEQ7+JUptRSnjjLEBvEGLQVfwcrV7WhwjwcxFSoHB3SMXySygdgH2/j++xz4CVyCQKlEZ16r+nVf1NFfwGe7cAaxmDjIfMGK4wMnKUwEUWszgxQ3GYnf3CptW2GpSkYGIxK9CCqj4VJORJd8Z5gFVbqRlLBpED8OddIQzryRhBGkVaBtJGgMnrfdIsDdFS2zRNsAX0Ha41WyFnBH5WAixaJvcd1ZGljGvXCO+T3lAgzIi99WQo+FPc+tkqGZ58M3PDnsrLrut2WAA751BNmjOlQ7Afc/Id9eilhVh6D4xV2zQUxqcwdFmel+xeKONSLCc5sRu3KQfskrSL7z1Q1HFMJFEQZctYcwXsjHw/Dl82Ds6ZAOo2kiuuQYo2ADSM8wf5P95tJMPhw8fP9rNh/lu/rSAZjFuPYa9S4yuwRMZ46ULiuGc0KYinQT80mKkWLDkxPsJ2gsdnE29UkAkOcXVn3S8AvoquFrDaVfqbeSXGIk/WP2Q3htdyb79AirWxc8GsO9sradtwB+L42Tv9L+jzfQuhPP0C15KbZlsp+ScAR4hi0ggUjPHG4jsP3nlbC26MhBdd4SumGsXsJH2WjVnt/V+jTnwwam2SqfPWFxEwia1FFpZGlyWJmN9icH29jYcOLtFqeGnSEAOPmUBkzx9ytIskblqnJjw2e2Eb9nJy1b5jer3N1lO6WUDeK0DXkpjmK7hI/A5dNb1cpVXjYLPz4BmaBnAD8uc/+ksjnxbGl0B5x5DI21KBudSKZ6SryscJaW5jW1cNw5onFSs1ukEV7re6XdPNfSVx/rzQuNUa/BKqi7izC7VNTk4xca7IMMCxuND2MdAzHm0MRoI+AX4/PHOLnCLl+e4gBBl8Whn9wlw6xRG4Oe4cC0txeVcCzJR+KAvJKEwrpImaXqeTPkarsJA8RqqCgRcyUWEh08e7wCPbfkHZGJ/dDYW49PRvjMuSOXE4egA7QUGcTwao6nHempRpcDF8dno7SkcYLreUxWK/XejzbtX1wqv72Wsk8MkcVuv3h1Mjl9P3rw9Pdx7OTk52UoqGZwj0bOTe88qI2OEr1tF0a9tJeVKehasNJM2GBi9gGx1nWx+LYr6i7LfsvudMtmptnNYPqMX8JX1w4BKB6xokgwn5LpvTIh0g95fomI0k8SRrpO04crJ1j+RuHWDg0lKw5qDX2arc/HtPvvGfiaJsVVZ9TLB+QWG0kVco45VCkQbQ9drxiad67qwRwhsSlQKVddxU03bkN9OZnoJ+33yImIaxllLyl1a4AH+PYT3XRDaTteF9M7a8TjfYH8FAAD//1PNwaedCgAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2251919813",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2251919813",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUUW8cNRB+t3T/YdirCgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht4xk3d/8eeZdLDtI8VWIfvB77m88zo2/mdQyMgeX1LmELffHsksmse7fF7gUsYwmdybuzZvHj4s2rX97+fD6/fNeIaslfMZOLoYWZOp6IiZDyEDQRe+5zRymS4wFrmI3d9Bj4Baycx2B6PGuWMTJxNknRprn3vM4m0AqzfBNs7FxYt3CydHwAGMJm3LLeStqg92SzSzwRC9fjgwinn+mlC3ppaCPEFL7HgNlZeLV/vR5eIcMmEtfA4ItFJPY7WMUM89+uvhS/g+xAI1ttfSzduCq7WqsO/oCnTwHtJkKTMhLmD3izZ2qBc8EGvnvEWZ+e3mHridgblj0QsrwLKWMnU/FJHs9Uxk55E4Qgj5hgdlwTeJs6w0hgQgcuEBvv4aKkhAzzNQYWu9KD3EEZcHtrj9wwJ2q13pVepcHLmyUpG3t9b8qMHg2hTHYm0csTFaLJdqNy6v9LOHpJMzwtplO4jB7FtP+zcxlkGutxT61XxjLm4UeqE9OxoDl6PHtS17saPuqjK0zxlsWjj4xbYQ1/hG3cakv5xjBntyyMpHam9/DyJbybL34SU7CFOPYHgFZMoX4z9Ux9+/xYzWZff/P8VM3UqTppod9dlYR5fosUe7wwRLcxdwK3jKFK9CbjXwWJqRWVJKUbDB9cjqF2SgvEZo37m5peC1UDdye4HmReSN4isXy2vzApeWfN2HoZOzFEL6bwOoaVW5eM/5bGxfz6h7MndW11TPyRqixdEKasOUYPkqAhZNC1kemRMo4/ZWNY6UEEeuiMPAh5FTP2JhxouflU9oO6QcqxK7Zm3wjaEWNf2wmDWXr8R5hCjAKDo6MjOI/hc67NvkYGjvC+yVhH0/umWrWY+7ahim8+beiN3P/fxNNUt7Qp3MXbADLDVzO4HIJwYf0ww6cP0pNyIv4OAAD//3Vwv1UyBgAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3f5d4b6324d707b4828136b3d3ae4b4ebdbff61a9295c90403301e4c47b2001a",
                        "attributes": {
                            "id": "3f5d4b6324d707b4828136b3d3ae4b4ebdbff61a9295c90403301e4c47b2001a",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-fusion-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: fusion\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-fusion-01.red.lan",
                            "vars.pp_env": "stage",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "fusion"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1349c372a5495b7fd94be225cb1db8fed9ae5b98fbe5dd31bdc5b9f77da04595",
                        "attributes": {
                            "id": "1349c372a5495b7fd94be225cb1db8fed9ae5b98fbe5dd31bdc5b9f77da04595",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "stage",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1cdc77c4073c491a43078b211792722bd9956ffb6ac824b77fdf939e1758aae",
                        "attributes": {
                            "id": "b1cdc77c4073c491a43078b211792722bd9956ffb6ac824b77fdf939e1758aae",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "stage",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bb9f8bb73de03bbe2a30df8c9f17936efc1791260d74b9116bab6a72dd85fbd5",
                        "attributes": {
                            "id": "bb9f8bb73de03bbe2a30df8c9f17936efc1791260d74b9116bab6a72dd85fbd5",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: stage\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "stage",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_railsapp",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjPb3P575F02OUjzqRL3wefxvhnPPL3n1zEwBpbXfcIa2s6zSyazbt0emxewjl1oTO7PqtWPqzevfnn78/ny8l0lSiR/xUwuhhoW6ngmZkLKQ9BMTLXPHaVIjgesYTZ212LgF7BxHoNp8axax8jE2SRFu+o+8zqbQBvM8k2wsXFhW8PJ2vEBYGibcc96L2mH3pPNLvFMrFyLDzqcf6bXLui1oZ0Qc/geA2Zn4dV0ezm8QoZdJC6NwRerSOx72MQMy9+uvhS/g2xAI1ttfeyacVV2s1UN/AFPnwLaXYQqZSTMH/BmqlQD5w4r+O6RZH16eoctJ2IKLHsgZHnXUsZGEpstmpTk8UJlbJQ3QQjyiAkWx2WIt6kxjAQmNOACsfEeLrqUkGG5xcCi71qQPXQDboom5I45Ua1137UqDVnerEnZ2Or7UGb0aAhlsguJXp6oEE22O5VT+9+CY5Y0w9ViPofL6FHM2z8bl0GmkZP70npjLGMe/kg1Yj6SmqPHsydlvePx0RxdYIr3LB69ZNwKa/gj1cattpRvDHN2646RVG9aDy9fwrvl6icxB9sRx/YAUIs5lN9CPVPfPj9Wi8XX3zw/VQt1qk5qaPurLmFe3iLFFi8M0W3MjcA9Yygyvcn4V4fEVItSJKUbDB9cjqG4pYaUY9PZ4qLpc5mxhmycJ5PS3SluB813JG+RWD6bPpiUvLNm9GHGRgxjiDm8jmHjtl3Gf2vkYnn9w9mTstY6Jv4IPWsXhOm2HKMHSVARMujianqEz/FP2Rg2elCDHmySB1VvYsbWhANRV59a/YDAA/4qQT0xtsVbGMza4z8KFWJUGhwdHcF5DJ9zcf4WGTjC+ypjeafeVyUqZE7+oYKvPu0FHGv/f8+fprKlXcdNvA0gM3y1gMuhCRe2Dyd8+mA8KWfi7wAAAP//U4R8Lz8GAAA="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "2711141346",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2711141346",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-stageapp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjPb3P575F02OUjzqRL3wefxvhnPPL3n1zEwBpbXfcIa2s6zSyazbt0emxewjl1oTO7PqtWPqzevfnn78/ny8l0lSiR/xUwuhhoW6ngmZkLKQ9BMTLXPHaVIjgesYTZ212LgF7BxHoNp8axax8jE2SRFu+o+8zqbQBvM8k2wsXFhW8PJ2vEBYGibcc96L2mH3pPNLvFMrFyLDzqcf6bXLui1oZ0Qc/geA2Zn4dV0ezm8QoZdJC6NwRerSOx72MQMy9+uvhS/g2xAI1ttfeyacVV2s1UN/AFPnwLaXYQqZSTMH/BmqlQD5w4r+O6RZH16eoctJ2IKLHsgZHnXUsZGEpstmpTk8UJlbJQ3QQjyiAkWx2WIt6kxjAQmNOACsfEeLrqUkGG5xcCi71qQPXQDboom5I45Ua1137UqDVnerEnZ2Or7UGb0aAhlsguJXp6oEE22O5VT+9+CY5Y0w9ViPofL6FHM2z8bl0GmkZP70npjLGMe/kg1Yj6SmqPHsydlvePx0RxdYIr3LB69ZNwKa/gj1cattpRvDHN2646RVG9aDy9fwrvl6icxB9sRx/YAUIs5lN9CPVPfPj9Wi8XX3zw/VQt1qk5qaPurLmFe3iLFFi8M0W3MjcA9Yygyvcn4V4fEVItSJKUbDB9cjqG4pYaUY9PZ4qLpc5mxhmycJ5PS3SluB813JG+RWD6bPpiUvLNm9GHGRgxjiDm8jmHjtl3Gf2vkYnn9w9mTstY6Jv4IPWsXhOm2HKMHSVARMujianqEz/FP2Rg2elCDHmySB1VvYsbWhANRV59a/YDAA/4qQT0xtsVbGMza4z8KFWJUGhwdHcF5DJ9zcf4WGTjC+ypjeafeVyUqZE7+oYKvPu0FHGv/f8+fprKlXcdNvA0gM3y1gMuhCRe2Dyd8+mA8KWfi7wAAAP//U4R8Lz8GAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "04d690925f5368ccbef680ca1be20fe06c62c1b8baa1c81639cc0cdd5881f29b",
                        "attributes": {
                            "id": "04d690925f5368ccbef680ca1be20fe06c62c1b8baa1c81639cc0cdd5881f29b",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-stageapp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-stageapp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "railsapp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "stage_railsapp_02",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8jNRD9bin/YdicChTZTsqh0r0rUu56AiQCVdsDnThUOd5JYuG1jWf2mvx75F22DfT66STywfF434xnnt7z6xgYA8ubfcIa2s6zSyazbt0Omxewil1oTN6fV8sfl29e/fL254vF1btKlEj+iplcDDXM1WwiJkLKQ9BEjLUvHKVIjnusYTZ222LgF7B2HoNp8bxaxcjE2SRF2+oh8yabQGvM8k2wsXFhU8PpyvEBoG+bccd6J2mL3pPNLvFELF2LjzqcfqZXLuiVoa0QU/geA2Zn4dV4ezm8RoZtJC6NwRfLSOz3sI4ZFr9dfyl+B9mARrba+tg1w6rseqMa+AOOjgDtNkKVMhLmD3g7VqqBc4cVfPdEsj47u8eWEzEGlj0QsrxvKWMjic0GTUpydqIyNsqbIAR5xATzWRnibWoMI4EJDbhAbLyHyy4lZFhsMLDYdy3IPXQ9boxG5JY5Ua31vmtV6rO8WZGysdUPoczo0RDKZOcSvTxVIZpstyqn9r8Fhyxp+qvFdApX0aOYtn82LoNMAycPpfXaWMbc/5FqxHQgNUeP58/Kes/jkzm6wBTvWDx5ybAV1vBHqg1bbSnfGubsVh0jqb1pPbx8Ce8Wy5/EFGxHHNsDQC2mUH5zdaK+fT5T8/nX3zw/U3N1pk5raPfXXcK8uEOKLV4aoruYG4E7xlBkepvxrw6JqRalSEq3GD64HENxSw0px6azxUXj5zJjDdk4Tyal+1Pc9JrvSN4hsTwZP5iUvLNm8GHGRvRjiCm8jmHtNl3Gf2vkcnHzw/mzstY6Jv4IPSsXhOk2HKMHSVARMujianqCz+FP2RjWuleD7m2Se1WvY8bWBDmbj6KuPrX6AYEH/FWC9sTYFm9hMCuP/yhUiEFpcHx8DBcxfM7F+Rtk4Ajvq4zlnXpflaiQOfqHCr76tBdwqP3/PX+aypa2HTfxLoDM8NUcrvomXNg8nvDo0XhSTsTfAQAA//9RSFQUPwYAAA=="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "1478914818",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1478914818",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-stageapp-02.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8jNRD9bin/YdicChTZTsqh0r0rUu56AiQCVdsDnThUOd5JYuG1jWf2mvx75F22DfT66STywfF434xnnt7z6xgYA8ubfcIa2s6zSyazbt0Omxewil1oTN6fV8sfl29e/fL254vF1btKlEj+iplcDDXM1WwiJkLKQ9BEjLUvHKVIjnusYTZ222LgF7B2HoNp8bxaxcjE2SRF2+oh8yabQGvM8k2wsXFhU8PpyvEBoG+bccd6J2mL3pPNLvFELF2LjzqcfqZXLuiVoa0QU/geA2Zn4dV4ezm8RoZtJC6NwRfLSOz3sI4ZFr9dfyl+B9mARrba+tg1w6rseqMa+AOOjgDtNkKVMhLmD3g7VqqBc4cVfPdEsj47u8eWEzEGlj0QsrxvKWMjic0GTUpydqIyNsqbIAR5xATzWRnibWoMI4EJDbhAbLyHyy4lZFhsMLDYdy3IPXQ9boxG5JY5Ua31vmtV6rO8WZGysdUPoczo0RDKZOcSvTxVIZpstyqn9r8Fhyxp+qvFdApX0aOYtn82LoNMAycPpfXaWMbc/5FqxHQgNUeP58/Kes/jkzm6wBTvWDx5ybAV1vBHqg1bbSnfGubsVh0jqb1pPbx8Ce8Wy5/EFGxHHNsDQC2mUH5zdaK+fT5T8/nX3zw/U3N1pk5raPfXXcK8uEOKLV4aoruYG4E7xlBkepvxrw6JqRalSEq3GD64HENxSw0px6azxUXj5zJjDdk4Tyal+1Pc9JrvSN4hsTwZP5iUvLNm8GHGRvRjiCm8jmHtNl3Gf2vkcnHzw/mzstY6Jv4IPSsXhOk2HKMHSVARMujianqCz+FP2RjWuleD7m2Se1WvY8bWBDmbj6KuPrX6AYEH/FWC9sTYFm9hMCuP/yhUiEFpcHx8DBcxfM7F+Rtk4Ajvq4zlnXpflaiQOfqHCr76tBdwqP3/PX+aypa2HTfxLoDM8NUcrvomXNg8nvDo0XhSTsTfAQAA//9RSFQUPwYAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "deb6b9e1db0aaf190444b30ff463bf4b23eba484207a13f2de0c823edbec21ab",
                        "attributes": {
                            "id": "deb6b9e1db0aaf190444b30ff463bf4b23eba484207a13f2de0c823edbec21ab",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-stageapp-02.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: railsapp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-stageapp-02.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "railsapp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "vpn",
                "bootstrap"
            ],
            "outputs": {
                "base_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bin/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht45lNbv898i6bHKT5VIn94PXYb8bjp/f8JgbGwPK6T1hD23l2yWTWrdth8xJWsQuNyf1Ztfxx+fb1L+9+Pl9cvq9EieSvmMnFUMNcHR+IAyHlPuhATLXPHaVIjgesYTZ222Lgl7B2HoNp8axaxcjE2SRF2+oh8zqbQGvM8m2wsXFhU8PJyvEeYGibccd6J2mL3pPNLvGBWLoWH3U4+0yvXNArQ1shZvA9BszOwuvp9LJ4hQzbSFwagy+Wkdj3sI4ZFr9dfSl+B9mARrba+tg146jseqMa+AMODwHtNkKVMhLmW7yZKtXAucMKvnsiWZ+e3mPLipgCyx4IWd63lLGRtynI47nK2ChvghDkERPMj0v/71JjGAlMaMAFYuM9XHQpIcNig4FF37Uge+gG3BRNyC1zolrrvmtVGrK8WZGysdUPoczo0RDKZOcSvTxRIZpstyqn9r8FxyxphqPFbAaX0aOYtX82LoNMIx0PpfXaWMY8/Eg1YjbymaPHs2dlvKfwyRxdYIp3LJ48ZJwKa/gj1captpRvDHN2q46RVG9aD69ewfvF8icxA9sRx3YPUIsZlG+unqtvXxyr+fzrb16cqrk6VSc1tP1VlzAv7pBiixeG6C7mRuCOMRSF3mT8q0NiqkUpktINhluXYyhGqSHl2HS2GGjaLnes4TY9LOBmUHpH8g6J5fNpw6TknTWj+zI2YriBmMGbGNZu02X8tzwuFtc/nD0rY61j4o8ws3JBmG7DMXqQBBUhgy5epieoHH/KxrDWgxD0YI48aHkdM7ZmX8/Vp1bf426PukpQT4xtcRQGs/L4jziFGEUGR0dHcB7D51z8vkEGjvChylhepw9ViQqZk3Wo4KtPe/fG2v/fo6epTGnbcRPvAsgMX83hcmjChc3jGx4+up6UB+LvAAAA//+vD3eUNQYAAA=="
                },
                "foreman_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "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"
                },
                "gitlab_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                },
                "pulp_cloutinit": {
                    "sensitive": false,
                    "type": "string",
                    "value": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                }
            },
            "resources": {
                "data.template_cloudinit_config.base": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.bootstrap"
                    ],
                    "primary": {
                        "id": "1802222686",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1802222686",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-vpn-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: vpn\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bin/YdirAgTZzpWikG2DdG0qQOIgSlJQRVHk887dWXht45lNbv898i6bHKT5VIn94PXYb8bjp/f8JgbGwPK6T1hD23l2yWTWrdth8xJWsQuNyf1Ztfxx+fb1L+9+Pl9cvq9EieSvmMnFUMNcHR+IAyHlPuhATLXPHaVIjgesYTZ222Lgl7B2HoNp8axaxcjE2SRF2+oh8zqbQGvM8m2wsXFhU8PJyvEeYGibccd6J2mL3pPNLvGBWLoWH3U4+0yvXNArQ1shZvA9BszOwuvp9LJ4hQzbSFwagy+Wkdj3sI4ZFr9dfSl+B9mARrba+tg146jseqMa+AMODwHtNkKVMhLmW7yZKtXAucMKvnsiWZ+e3mPLipgCyx4IWd63lLGRtynI47nK2ChvghDkERPMj0v/71JjGAlMaMAFYuM9XHQpIcNig4FF37Uge+gG3BRNyC1zolrrvmtVGrK8WZGysdUPoczo0RDKZOcSvTxRIZpstyqn9r8FxyxphqPFbAaX0aOYtX82LoNMIx0PpfXaWMY8/Eg1YjbymaPHs2dlvKfwyRxdYIp3LJ48ZJwKa/gj1captpRvDHN2q46RVG9aD69ewfvF8icxA9sRx3YPUIsZlG+unqtvXxyr+fzrb16cqrk6VSc1tP1VlzAv7pBiixeG6C7mRuCOMRSF3mT8q0NiqkUpktINhluXYyhGqSHl2HS2GGjaLnes4TY9LOBmUHpH8g6J5fNpw6TknTWj+zI2YriBmMGbGNZu02X8tzwuFtc/nD0rY61j4o8ws3JBmG7DMXqQBBUhgy5epieoHH/KxrDWgxD0YI48aHkdM7ZmX8/Vp1bf426PukpQT4xtcRQGs/L4jziFGEUGR0dHcB7D51z8vkEGjvChylhepw9ViQqZk3Wo4KtPe/fG2v/fo6epTGnbcRPvAsgMX83hcmjChc3jGx4+up6UB+LvAAAA//+vD3eUNQYAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.foreman": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.foreman",
                        "data.template_file.foreman-bootstrap"
                    ],
                    "primary": {
                        "id": "2924597702",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2924597702",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "foreman-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.gitlab": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.gitlab",
                        "data.template_file.gitlab-bootstrap"
                    ],
                    "primary": {
                        "id": "1999157076",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1999157076",
                            "part.#": "3",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "gitlab-install.sh",
                            "part.1.merge_type": "",
                            "part.2.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.2.content_type": "text/x-shellscript",
                            "part.2.filename": "reboot.sh",
                            "part.2.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xV72/UOhb9bqn/w91MRaGL4w4/t4FBKi2wSC2tmHZXCNDIiW9m/OrYxr5pZx7if39yMlMKQ9/7UIl8SGzn3Gv7+J7jfWcJLfHThccCmtaQ9jKQaPQc1TMoXWuVDItRdvT26NXL47N3B3vvP2Qs9fj/METtbAHDfGeDbTDOr4M22Cr3gY7eRU0dVhLJatagpWdQa4NWNjjKSucoUpA+j7Pse+RpkDbWGPgrWzml7bSAp6Wma4Bu2YRzEnMeZ2hMrIL2tMGOdINrKxz8S5TailLGGWMDeIMWg67g5Wr2NDhGgpmLlBYGd49cJLOA2gXY+//4HvsIXIFAqkRlXKv6d17V01zBZ7hzB7CaOch8wIjhAierTAVQaDGDFzcEi93dK2waYatORQYiEr9aUkDFp5qMLPnOMA+ociMtY9EgehjupC2ceSUJI0irQNtI0hg4ab1Hgr0pWmKLtgG+gLbDrXor5IzIx0KIRdvkvosysox55RrxvcsDGpQRua+GHA1/mlsnQzXLg29+TthHcdlNzQYDeO8MskFzrnQA7ntGvqcWtawIQ/eJuWKDntLgDI420/uKxRtjRILlNCd24yR9k1WSfpGtb4oqhokkCrpsCWO+kI2B58/hw97RIRtA1UZyzTVAwQaQnmH+IP/Po518OHz4+NFuPsx386cFNItx6zHsXWJ0DZ7IGC9dUAznhDYV6STglxYjxYKlJN5P0F7o4GzSSgE+ONVWSUOr32mPBfSlcDWG067e28gvMRJ/sPohvTe6kr0GAyrWbYINYN/ZWk/bgD9WyMne6X9Hm+ldCOfpF+SU2jLZTsk5AzxCFpFAJEXHG9jsP3nlbC26WhCdREJX0bUL2Eh7raSz22a/Rt819jIWF5GwSbpCK0uDy/pkrK8z2N7ehgNntyipfooE5OBTFjB51Kcs9RKZK/XEhM9u535LOS/18hst8G9OOR0vG8BrHfBSGsN0DR+Bz6GLrpejvGoUfH4GNMNUlj8Mc/6nszjybWl0BZx7DI206TA4l0rxdPi6wlGym9vExvXggMZJxWqddnBl7p2J91RDX3ms3y80TrUGr/zqIs7s0mJTglNsvAsyLGA8PoR9DMScRxujgYBfgM8f7+wCt3h5jgsIURaPdnafALdOYQR+jgvX0tJhzrUgE4UP+kISCuMqaZKx5ymUr+EqDBSvoapAwJVcRHj45PEO8NiWf0Am9kdnYzE+He0744JUThyODtBeYBDHozGaeqynFlVauDg+G709hQNMd3yqQrH/brR59+pu4fW9jHWemHxu69W7g8nx68mbt6eHey8nJydbySqDcyR6dnLvWWVkjPB1qyj6sa1kX8nUgpVm0gYDoxeQre6Uza9FUX9R9lt2v3MmO9V2Dstn9AK+sr4ZUOmAFU1S4IRc940Jka7R+0tUjGaSONJ1sjZcJdn6JxK3bkgwScewluCXp9Wl+HaffWM/k8TYqqx6m+D8AkPpIq5RxyoFoo2h05qxyec6FfYIgU2JSqHqFDfVtA357Wymt7DfZy8ipmactaTcpQUe4N9DeN8tQtvpupHeWdse5xvsrwAAAP//bPn6yqIKAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_cloudinit_config.pulp": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.pulp-bootstrap"
                    ],
                    "primary": {
                        "id": "2265642100",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2265642100",
                            "part.#": "2",
                            "part.0.content": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "bootstrap.sh",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n/sbin/shutdown -r +1 Rebooting to apply updates \u0026\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "reboot.sh",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xUYW8cNRD9bun+w7BXFQiynStFIdsG6dpUgMRBlKSgiqLI5527s/DaxjNu7v498i6XHKT5VIn74PN434xnnt7z6xgYA8vrXcIW+uLZJZNZ926L3QtYxhI6k3dnzeLHxZtXv7z9+Xx++a4RNZK/YiYXQwszdTwREyHlIWgi9rXPHaVIjgesYTZ202PgF7ByHoPp8axZxsjE2SRFm+Y+8zqbQCvM8k2wsXNh3cLJ0vEBYGibcct6K2mD3pPNLvFELFyPDzqcfqaXLuiloY0QU/geA2Zn4dX+9np4hQybSFwbgy8WkdjvYBUzzH+7+lL8DrIDjWy19bF046rsaq06+AOePgW0mwhNykiYP+DNvlILnAs28N0jyfr09A5bT8Q+sOyBkOVdSxk7mYpP8nimMnbKmyAEecQEs+M6wNvUGUYCEzpwgdh4DxclJWSYrzGw2JUe5A7KgNtHe+SGOVGr9a70Kg1Z3ixJ2djr+1Bm9GgIZbIziV6eqBBNthuVU//fgmOWNMPVYjqFy+hRTPs/O5dBppGP+9J6ZSxjHv5IdWI6Epqjx7Mndb3j8NEcXWGKtywevWTcCmv4I9XGrbaUbwxzdsvCSGpneg8vX8K7+eInMQVbiGN/AGjFFOpvpp6pb58fq9ns62+en6qZOlUnLfS7q5Iwz2+RYo8Xhug25k7gljFUid5k/KsgMbWiFknpBsMHl2OoTmkh5dgVWx20/1xnbKEK4e4E14PWC8lbJJbP9h9MSt5ZM/ovYyeGEcQUXsewcuuS8d/6uJhf/3D2pK6tjok/Qs3SBWHKmmP0IAkaQgZd3UyPcDn+KRvDSg9K0IM98qDmVczYm3Ag6OZTqx+Qd8BdI2hHjH31FAaz9PiPOoUYVQZHR0dwHsPnXB2/RgaO8L7JWN+n902NKpl771DFN5/28o21/79nT1Pd0qZwF28DyAxfzeByaMKF9cMJnz4YT8qJ+DsAAP//hz9sMzcGAAA="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "6b947ad7c4fabedfcf78b28db02e67a8a1dd6187137e2c1b23300b85b694b06a",
                        "attributes": {
                            "id": "6b947ad7c4fabedfcf78b28db02e67a8a1dd6187137e2c1b23300b85b694b06a",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-vpn-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: vpn\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-vpn-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "vpn"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                        "attributes": {
                            "id": "2174d9d984ce899850ace7b1b0ac5743253f8fc6baf9bee6e4122d1cebc36690",
                            "rendered": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@red-gitlab-01.red.lan'\nCONTROL_REPO=\"${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.${DOMAINNAME},puppet,foreman.${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$*\n  local install_pkg=''\n  for pkg in $REQ_PKGS; do\n    rpm -q $pkg || install_pkg=\"${install_pkg} ${pkg}\"\n  done\n  [ -z \"$install_pkg\" ] || yum install -y ${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $tries -le $MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $tries / $MAX_RETRIES\"\n    echo \"Sleeping $RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $SSH_KEY_FILE ]; then\n  $SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to ${GIT_SERVER}...\"\n  $SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' ${GIT_SERVER}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to ${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat ${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $SUDO_PUPPET git ls-remote ${CONTROL_REPO}\n  return=$?\n  if [ $return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: ${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$PUPPET module list | grep -q r10k || $PUPPET module install puppet-r10k\n#$PUPPET module list | grep -q puppetserver || $PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"${CONTROL_REPO}\" $PUPPET apply -e 'class { r10k: remote =\u003e \"${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$($PUPPET config print hostcert)\n[ -f \"$hostcert\" ] || $PUPPET cert generate ${HOSTNAME} --allow-dns-alt-names \"${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "template": "#!/bin/bash\n\n# Basic foreman setup, requires working git server with control-repo populated\n\n# Settings you should edit\nGIT_SERVER='git@${gitlab_server}'\nCONTROL_REPO=\"$${GIT_SERVER}:puppet/control-repo\"\nHOSTNAME=\"$(hostname -f)\"\nDOMAINNAME=\"$(hostname -d)\"\nDNS_ALT_NAMES=\"puppet.$${DOMAINNAME},puppet,foreman.$${DOMAINNAME},foreman\"\n\n# -------------------------------------\n# You shouldn't need to edit these\nSSH_KEY_FILE='/opt/puppetlabs/server/data/puppetserver/.ssh/id_rsa'\nPUPPET='/opt/puppetlabs/puppet/bin/puppet'\nSUDO_PUPPET='sudo -H -u puppet'\nREQ_PKGS='epel-release git puppetserver puppet-agent'\nMAX_RETRIES=60\nRETRY_SLEEP_TIME=60\n\n# Install pkgs if not installed\nfunction install_pkgs {\n  pkgs=$$*\n  local install_pkg=''\n  for pkg in $$REQ_PKGS; do\n    rpm -q $$pkg || install_pkg=\"$${install_pkg} $${pkg}\"\n  done\n  [ -z \"$$install_pkg\" ] || yum install -y $${install_pkg}\n}\n\n# Retry/Sleep tracking\nfunction retry_sleep {\n  if [ $$tries -le $$MAX_RETRIES ]; then\n    echo \"\"\n    echo \"Try: $$tries / $$MAX_RETRIES\"\n    echo \"Sleeping $$RETRY_SLEEP_TIME for retry...\"\n    echo '------------'\n    sleep $$RETRY_SLEEP_TIME\n  else\n    echo '----------------------'\n    echo '- FAILED INSTALLTION -'\n    echo '----------------------'\n    echo \"\"\n    echo -e \"\\n\\n\\t *** FAILED BOOTSTRAP! \\n\\t *** SEE: /var/log/cloud-init-output.log\\n\\n\" \u003e\u003e /etc/motd\n    exit 1\n  fi\n}\n\n### MAIN\nset +e # exit on error\n\n# Install Stuff\nrpm -q puppetlabs-release-pc1 || yum install -y https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\ninstall_pkgs $$REQ_PKGS\n\n# Get out of /root (prevents errors while using sudo)\ncd /tmp\n\n# Ensure we have an SSH Key\nif [ ! -f $$SSH_KEY_FILE ]; then\n  $$SUDO_PUPPET ssh-keygen -t rsa -b 4096 -f $$SSH_KEY_FILE -P \"\"\nfi\n\n# Test SSH Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  echo \"Testing SSH Access to $${GIT_SERVER}...\"\n  $$SUDO_PUPPET /bin/ssh -nTo 'StrictHostKeyChecking=no' $${GIT_SERVER}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with the puppet ssh key access to $${GIT_SERVER}\"\n    echo \"You need to add this SSH public key to a 'puppet-server' user in GitLab:\"\n    echo \"\"\n    cat $${SSH_KEY_FILE}.pub\n    retry_sleep\n  fi\ndone\n\n# Test Repo Access (loop)\ntries=0\nwhile true; do\n  ((tries++))\n  $$SUDO_PUPPET git ls-remote $${CONTROL_REPO}\n  return=$$?\n  if [ $$return == 0 ]; then\n    echo \"Success!\"\n    break\n  else\n    echo -e \"\\n***********\\n\"\n    echo \"There is a problem with puppet user access to the Git Repo: $${CONTROL_REPO}\"\n    echo \"You need to grant the 'puppet-server' user in GitLab 'reporter' access to the group for the control-repo.\"\n    retry_sleep\n  fi\ndone\n\n# Install puppet modules\n#git clone https://github.com/puppetlabs/puppetlabs-stdlib.git /etc/puppetlabs/code/environments/production/modules/stdlib\n#git clone https://github.com/voxpupuli/puppet-r10k.git /etc/puppetlabs/code/environments/production/modules/r10k\n#git clone https://github.com/puppetlabs/puppetlabs-git.git /etc/puppetlabs/code/environments/production/modules/git\niptables -F\nsetenforce 0\niptables -L\ngetenforce\n$$PUPPET module list | grep -q r10k || $$PUPPET module install puppet-r10k\n#$$PUPPET module list | grep -q puppetserver || $$PUPPET module install puppet-puppetserver\n\n# Install R10k using puppet\nFACTER_gitremote=\"$${CONTROL_REPO}\" $$PUPPET apply -e 'class { r10k: remote =\u003e \"$${::gitremote}\"  }'\n\n# This seems dubious, like a packaging error?\nchown -hR puppet:puppet /etc/puppetlabs/code\n\n# Deploy (or update) Puppet Code\n$$SUDO_PUPPET r10k deploy environment -pv\n\n# Helper Alias\ngrep -q 'alias r10k' /root/.bash_profile || echo \"alias r10k='cd / \u0026\u0026 sudo -H -u puppet r10k'\" \u003e\u003e /root/.bash_profile\n\n# Copy hieradata in (hacky)\ncp -f /etc/puppetlabs/code/environments/production/site/profile/files/hiera.yaml /etc/puppetlabs/puppet/hiera.yaml\n\n# Temporarily set this fact directly\nmkdir -p /etc/puppetlabs/facter/facts.d\necho \"role=foreman\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\n\n# Puppet Cert\nhostcert=$$($$PUPPET config print hostcert)\n[ -f \"$$hostcert\" ] || $$PUPPET cert generate $${HOSTNAME} --allow-dns-alt-names \"$${DNS_ALT_NAMES}\"\n\n# Seriously hacky business here\n# puppetserver.conf:    ruby-load-path: [/opt/puppetlabs/puppet/lib/ruby/vendor_ruby,/etc/puppetlabs/code/environments/production/modules/gms/lib]\nPUPPETSERVER_CONF=\"/etc/puppetlabs/puppetserver/conf.d/puppetserver.conf\"\ngrep -q 'gms/lib' $$PUPPETSERVER_CONF || sed -i -r 's#(ruby-load-path:.*)]#\\1, /etc/puppetlabs/code/environments/production/modules/gms/lib]#' $$PUPPETSERVER_CONF\n\nsystemctl enable puppetserver\nsystemctl start puppetserver\n$$PUPPET agent -t\n\necho 'DONE!?'\nexit 0\n\n#mkdir -p /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs/code /opt/puppetlabs/puppet/cache/r10k /opt/puppetlabs/server/data/puppetserver/r10k\n#chown -R puppet:puppet /etc/puppetlabs /opt/puppetlabs\n#/opt/puppetlabs/bin/puppet agent -t\n#sudo -u puppet r10k deploy environment -pv\n#rm -rf /opt/puppetlabs/puppet/cache/r10k/*\n",
                            "vars.%": "5",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.foreman-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                        "attributes": {
                            "id": "1c799df24b690ed90f0c833568d4cf25c782518d25a41298cb0344cc64972f68",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-foreman-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: foreman\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-foreman-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "foreman"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                        "attributes": {
                            "id": "14c8e351eff2b5e90aa4eab4f4a31383a4372cd6172f4942910f1a6c0b778f6d",
                            "rendered": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "template": "#!/bin/bash\n\nPATH=$PATH:/opt/puppetlabs/bin\n\n# Firewall\nif [ -x /bin/firewall-cmd ]; then\n  firewall-cmd --zone=public --permanent --add-service=http\n  firewall-cmd --zone=public --permanent --add-service=https\n  firewall-cmd --reload\nfi\n\n# Bootstrap for gitlab server\npuppet module install vshn-gitlab\n\n# Temporary SSL Cert\nopenssl req -x509 -newkey rsa:4096 -nodes -keyout /etc/pki/tls/private/localhost.key -out /etc/pki/tls/certs/localhost.crt -days 3650 -subj \"/C=US/ST=Colorado/L=Denver/O=SelfSignedCert/OU=IT Department/CN=$(hostname -f)\"\n\ncat  \u003c\u003c 'END_OF_GITLAB_PP' \u003e /root/gitlab.pp\nclass {'::gitlab':\n  external_url =\u003e \"https://$${::fqdn}\",\n    nginx        =\u003e {\n      redirect_http_to_https =\u003e true,\n      ssl_certificate     =\u003e '/etc/pki/tls/certs/localhost.crt',\n      ssl_certificate_key =\u003e '/etc/pki/tls/private/localhost.key',\n  },\n}\nEND_OF_GITLAB_PP\n\n\npuppet apply --verbose /root/gitlab.pp\n\ncd /usr/bin\nln -s /opt/gitlab/embedded/bin/git* .\n",
                            "vars.%": "4",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.gitlab-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                        "attributes": {
                            "id": "929f2e7ce79539182fab8f0cf9871b4a2e37c95609d531062359104dece47242",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-gitlab-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: gitlab\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "8",
                            "vars.gitlab_server": "red-gitlab-01.red.lan",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-gitlab-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "gitlab"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.pulp-bootstrap": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                        "attributes": {
                            "id": "89382270fea09d12e3da302d5855fd0b1bcced6e04a7f47fc183e9bd76b47a96",
                            "rendered": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname red-pulp-01.red.lan\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: production\n    pp_role: pulp\n    pp_region: us-west-2\n    pp_application: red\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server red-foreman-01.red.lan\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment production\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "template": "#!/bin/bash\n\n# Generic Bootstrap\n\n# Set hostname (Mostly for AWS)\n[ -d /etc/cloud/cloud.cfg.d ] \u0026\u0026 echo \"preserve_hostname: true\" \u003e /etc/cloud/cloud.cfg.d/99_hostname.cfg\nhostnamectl set-hostname ${hostname}\n\nsleep 10\n\n# Updates and install Puppet Agent\nyum -y update\nyum -y install https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm\nyum -y install puppet-agent\n\n## Role\n#mkdir -p /etc/puppetlabs/facter/facts.d\n#echo \"role=$role\" \u003e /etc/puppetlabs/facter/facts.d/role.txt\nmkdir -p /etc/puppetlabs/puppet\ncat \u003e /etc/puppetlabs/puppet/csr_attributes.yaml \u003c\u003c YAML\n# custom_attributes:\n#     1.2.840.113549.1.9.7: mySuperAwesomePassword\nextension_requests:\n    pp_environment: ${pp_env}\n    pp_role: ${role}\n    pp_region: ${region}\n    pp_application: ${host_prefix}\nYAML\n\n# Configure Puppet Agent\nPATH=$PATH:/opt/puppetlabs/puppet/bin\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/server ${puppet_server}\"\naugtool -s \"set /files/etc/puppetlabs/puppet/puppet.conf/agent/environment ${puppet_env}\"\nsystemctl enable puppet\n\necho \" *** Don't forget to \\\"reboot\\\" to apply updates ***\"\n",
                            "vars.%": "7",
                            "vars.host_prefix": "red",
                            "vars.hostname": "red-pulp-01.red.lan",
                            "vars.pp_env": "production",
                            "vars.puppet_env": "production",
                            "vars.puppet_server": "red-foreman-01.red.lan",
                            "vars.region": "us-west-2",
                            "vars.role": "pulp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
